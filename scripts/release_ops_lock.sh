#!/usr/bin/env bash
set -euo pipefail

VERSION="${1:-v1.0.1}"                    # e.g. v1.0.1c
BASE_REF="${2:-$(git describe --tags --abbrev=0 2>/dev/null || echo '')}"
NAME="ops-lock-${VERSION}"
TAG="${VERSION}-opslock"
PUSH_TAG="${PUSH_TAG:-true}"

echo "üöÄ Build ${NAME} (base: ${BASE_REF:-<none>})‚Ä¶"

# 0) ÏÇ¨Ï†Ñ Ïä§Î™®ÌÅ¨
bash scripts/smoke_health_metrics.sh

# 1) Ïª§Î∞ã(ÏûàÏúºÎ©¥) ‚Äî ÏóÜÏúºÎ©¥ Ïä§ÌÇµ
git add -A
git commit -m "chore(ops): ${NAME} bundle" || echo "‚ÑπÔ∏è no changes to commit"

mkdir -p dist

# 2) Î≤îÏúÑ Í≥ÑÏÇ∞ (ÌÉúÍ∑∏Í∞Ä ÏûàÏúºÎ©¥ ÌÉúÍ∑∏..HEAD, ÏóÜÏúºÎ©¥ HEAD~1..HEAD, Ï¥àÍ∏∞ Ïª§Î∞ãÏùÄ show)
HEAD_COMMIT="$(git rev-parse HEAD)"
if [[ -n "${BASE_REF}" ]] && git rev-parse -q --verify "${BASE_REF}" >/dev/null; then
  DIFF_RANGE="${BASE_REF}..${HEAD_COMMIT}"
elif git rev-parse -q --verify HEAD~1 >/dev/null; then
  DIFF_RANGE="HEAD~1..HEAD"
else
  DIFF_RANGE=""  # Ï¥àÍ∏∞ Ïª§Î∞ã
fi

# 3) mbox (Í∂åÏû•)
git format-patch -1 "${HEAD_COMMIT}" --stdout > "dist/${NAME}.mbox"

# 4) raw patch (git apply Ïö©)
if [[ -n "${DIFF_RANGE}" ]]; then
  git diff --binary ${DIFF_RANGE} > "dist/${NAME}.patch"
else
  git show --binary -1 --format=email "${HEAD_COMMIT}" > "dist/${NAME}.patch"
fi

# 5) Ïû¨ÌòÑ Í∞ÄÎä•Ìïú tar.gz (Ï†ïÎ†¨/ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ/ÏÜåÏú†Ïûê Í≥†Ï†ï)
export TZ=UTC
export LC_ALL=C
SOURCE_DATE_EPOCH="${SOURCE_DATE_EPOCH:-$(git show -s --format=%ct ${HEAD_COMMIT})}"
tar --sort=name \
    --mtime="@${SOURCE_DATE_EPOCH}" \
    --owner=0 --group=0 --numeric-owner \
    -czf "dist/${NAME}.tar.gz" \
    .pre-commit-config.yaml Makefile .github/workflows/ci.yml \
    alerting/rules.yml RUNBOOK.md \
    scripts/smoke_health_metrics.sh scripts/ci_health_check.sh scripts/rollback_now.sh scripts/release_ops_lock.sh

# 6) Ï≤¥ÌÅ¨ÏÑ¨
sha256sum "dist/${NAME}.tar.gz" "dist/${NAME}.mbox" "dist/${NAME}.patch" > "dist/${NAME}.sha256"

# 7) ÌÉúÍ∑∏(Í∏∞Î≥∏ push, ÎÅÑÎ†§Î©¥ PUSH_TAG=false)
if git rev-parse -q --verify "refs/tags/${TAG}" >/dev/null; then
  echo "‚ÑπÔ∏è tag ${TAG} exists (skip create)"
else
  git tag -a "${TAG}" -m "Ops-Lock bundle ${VERSION}"
fi
[[ "${PUSH_TAG}" == "true" ]] && git push origin "refs/tags/${TAG}" || true

echo "‚úÖ Done:" && ls -lh dist/${NAME}.*
