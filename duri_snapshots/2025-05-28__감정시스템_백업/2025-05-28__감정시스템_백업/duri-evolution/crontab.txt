# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
*/5 * * * * /usr/bin/python3 /home/duri/scripts/receive_emotion_vector.py >> /home/duri/logs/emotion_receive.log 2>&1
* * * * * /usr/bin/python3 /home/duri/scripts/receive_emotion_vector.py >> /home/duri/logs/receive.log 2>&1
*/5 * * * * /usr/bin/python3 /home/duri/scripts/broadcast_emotion_if_changed.py >> /home/duri/logs/broadcast.log 2>&1

# 🧠 감정 변화 감지 → 의미 있는 변화만 emotion_change_log.json에 기록
* * * * * /usr/bin/python3 /home/duri/scripts/log_emotion_change.py >> /home/duri/logs/emotion_change.log 2>&1
