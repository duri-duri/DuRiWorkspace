groups:
- name: infra-mem-alerts-clean
  interval: 1m
  rules:
  - alert: HighMemoryUsage
    expr: |
      (
        container_memory_working_set_bytes{job="cadvisor", id=~"/docker/.*"}
      )
      /
      on(id)
      (
        container_spec_memory_limit_bytes{job="cadvisor", id=~"/docker/.*"}
      )
      > 0.80
      and on(id)
        container_spec_memory_limit_bytes{job="cadvisor", id=~"/docker/.*"} > 0
      and on(id)
        container_memory_working_set_bytes{job="cadvisor", id=~"/docker/.*"} > 100*1024*1024
    for: 10m
    labels: {severity: warning, team: infrastructure, service: performance}
    annotations:
      summary: "Container memory >80% (limit-based)"
      description: "id={{ $labels.id }} using >80% of its memory limit for 10m."

  - alert: CriticalMemoryUsage
    expr: |
      (
        container_memory_working_set_bytes{job="cadvisor", id=~"/docker/.*"}
      )
      /
      on(id)
      (
        container_spec_memory_limit_bytes{job="cadvisor", id=~"/docker/.*"}
      )
      > 0.90
      and on(id)
        container_spec_memory_limit_bytes{job="cadvisor", id=~"/docker/.*"} > 0
      and on(id)
        container_memory_working_set_bytes{job="cadvisor", id=~"/docker/.*"} > 100*1024*1024
    for: 10m
    labels: {severity: critical, team: infrastructure, service: performance}
    annotations:
      summary: "Container memory >90% (limit-based)"
      description: "id={{ $labels.id }} using >90% of its memory limit for 10m."

  - alert: HighMemoryUsageAbsolute
    expr: |
      topk(5, container_memory_working_set_bytes{job="cadvisor", id=~"/docker/.*"}) > 2 * 1024 * 1024 * 1024
    for: 10m
    labels: {severity: warning, team: infrastructure, service: performance}
    annotations:
      summary: "Container memory >2GB (absolute)"
      description: "id={{ $labels.id }} using >2GB memory (no limit set)."
