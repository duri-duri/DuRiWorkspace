groups:
- name: infra-info
  interval: 1m
  rules:
  - record: duri:containers:limit0
    expr: sum(container_spec_memory_limit_bytes{id=~"/docker/.+"} == bool 0) or on() vector(0)
  - record: duri:containers:limitgt0
    expr: sum(container_spec_memory_limit_bytes{id=~"/docker/.+"} > bool 0) or on() vector(0)
  - record: duri:containers:top5_memory_by_name
    expr: topk(5, sum by (name) (container_memory_working_set_bytes{id=~"/docker/.+", name!=""}))
  - record: duri:containers:top5_rss_by_name
    expr: topk(5, sum by (name) (container_memory_rss{id=~"/docker/.+", name!=""}))

- name: infra-mem-alerts-clean
  interval: 1m
  rules:
  - alert: HighMemoryUsage
    expr: |
      (
        container_memory_working_set_bytes{id=~"/docker/.+"}
        /
        on(id) clamp_min(container_spec_memory_limit_bytes{id=~"/docker/.+"}, 1)
      )
      and
      on(id) (container_spec_memory_limit_bytes{id=~"/docker/.+"} > bool 0)
      and
      container_memory_working_set_bytes{id=~"/docker/.+"} > 100 * 1024 * 1024
      > 0.80
    for: 10m
    labels: {severity: warning, team: infrastructure, service: performance}
    annotations:
      summary: "Container memory >80% (limit-based)"
      description: "id={{ $labels.id }} using >80% of its memory limit for 10m."

  - alert: CriticalMemoryUsage
    expr: |
      (
        container_memory_working_set_bytes{id=~"/docker/.+"}
        /
        on(id) clamp_min(container_spec_memory_limit_bytes{id=~"/docker/.+"}, 1)
      )
      and
      on(id) (container_spec_memory_limit_bytes{id=~"/docker/.+"} > bool 0)
      and
      container_memory_working_set_bytes{id=~"/docker/.+"} > 100 * 1024 * 1024
      > 0.90
    for: 10m
    labels: {severity: critical, team: infrastructure, service: performance}
    annotations:
      summary: "Container memory >90% (limit-based)"
      description: "id={{ $labels.id }} using >90% of its memory limit for 10m."

  - alert: HighMemoryUsageAbsolute
    expr: |
      topk(
        5,
        (container_memory_working_set_bytes{id=~"/docker/.+"}
         and on(id) container_spec_memory_limit_bytes{id=~"/docker/.+"} == bool 0)
        and
        container_memory_working_set_bytes > 200 * 1024 * 1024
      ) > 2 * 1024 * 1024 * 1024
    for: 10m
    labels: {severity: warning, team: infrastructure, service: performance}
    annotations:
      summary: "Container memory >2GB (absolute)"
      description: "id={{ $labels.id }} using >2GB with no memory limit."
