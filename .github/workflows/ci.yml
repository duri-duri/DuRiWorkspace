name: Phase-2 Suite

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

jobs:
  ab-days:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py: [ "3.10", "3.11" ]
        day: [36, 37, 38, 39]
        var: [A, B]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: ${{ matrix.py }} }
      - name: Install
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
      - name: Run
        run: |
          make run AS_OF_DAY=${{ matrix.day }} VAR=${{ matrix.var }} SEED=42
      - name: Promotion Gate
        run: |
          make gate AS_OF_DAY=${{ matrix.day }} VAR=${{ matrix.var }}
      - name: Upload results (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: day${{ matrix.day }}-var${{ matrix.var }}-py${{ matrix.py }}
          path: outputs/day${{ matrix.day }}/var_${{ matrix.var }}/

  # Day41~43: PoU Pilot Log Generation & Validation
  pilot-logs:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        day: [41, 42, 43]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
      - name: Generate pilot logs
        run: |
          make day${{ matrix.day }}
      - name: Validate pilot logs
        run: |
          make validate-logs
      - name: Rollup pilot metrics
        run: |
          make rollup
      - name: Gate metrics check (fail on breach)
        run: |
          make gate-metrics
      - name: Upload pilot logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pilot_v2_logs_day${{ matrix.day }}
          path: |
            medical_pilot_v2_logs/logs.jsonl
            med_pilot_v2_logs/logs.jsonl
            rehab_pilot_v2_logs/logs.jsonl
            coding_pilot_v2_logs/logs.jsonl
            code_pilot_v2_logs/logs.jsonl
            slo_sla_dashboard_v1/metrics.json
          retention-days: 14

  # 집계 잡: 보호 규칙이 요구하는 "tests" 상태 체크 제공
  tests:
    name: tests
    needs: [ab-days, pilot-logs]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check upstream jobs
        run: |
          echo "Checking upstream job status..."
          if [[ "${{ needs.ab-days.result }}" == "success" && "${{ needs.pilot-logs.result }}" == "success" ]]; then
            echo "✅ All upstream jobs passed"
            exit 0
          else
            echo "❌ Some upstream jobs failed"
            echo "ab-days: ${{ needs.ab-days.result }}"
            echo "pilot-logs: ${{ needs.pilot-logs.result }}"
            exit 1
          fi
