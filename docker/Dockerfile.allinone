# DuRi All-in-One Development Container
# 모든 DuRi 서비스를 하나의 컨테이너에 통합
FROM duri-base:latest

# 작업 디렉토리 설정
WORKDIR /app

# 모든 DuRi 서비스 코드 복사
COPY duri_core/ /app/duri_core/
COPY duri_brain/ /app/duri_brain/
COPY duri_evolution/ /app/duri_evolution/
COPY duri_control/ /app/duri_control/
COPY duri_common/ /app/duri_common/

# 공통 스크립트 복사
COPY duri_control/wait-for-postgres.sh /app/wait-for-postgres.sh
RUN chmod +x /app/wait-for-postgres.sh

# 통합 requirements.txt 생성
RUN echo "fastapi==0.104.1" > /app/requirements_allinone.txt && \
    echo "uvicorn[standard]==0.24.0" >> /app/requirements_allinone.txt && \
    echo "sqlalchemy==2.0.23" >> /app/requirements_allinone.txt && \
    echo "psycopg2-binary==2.9.9" >> /app/requirements_allinone.txt && \
    echo "redis==5.0.1" >> /app/requirements_allinone.txt && \
    echo "apscheduler==3.10.4" >> /app/requirements_allinone.txt && \
    echo "pydantic==2.5.0" >> /app/requirements_allinone.txt && \
    echo "python-multipart==0.0.6" >> /app/requirements_allinone.txt && \
    echo "python-jose[cryptography]==3.3.0" >> /app/requirements_allinone.txt && \
    echo "passlib[bcrypt]==1.7.4" >> /app/requirements_allinone.txt && \
    echo "python-dotenv==1.0.0" >> /app/requirements_allinone.txt && \
    echo "requests==2.31.0" >> /app/requirements_allinone.txt && \
    echo "psutil==5.9.6" >> /app/requirements_allinone.txt && \
    echo "aiohttp==3.9.1" >> /app/requirements_allinone.txt && \
    echo "docker==6.1.3" >> /app/requirements_allinone.txt && \
    echo "PyJWT==2.8.0" >> /app/requirements_allinone.txt && \
    echo "flask==3.0.0" >> /app/requirements_allinone.txt && \
    echo "flask-cors==4.0.0" >> /app/requirements_allinone.txt && \
    echo "gunicorn==21.2.0" >> /app/requirements_allinone.txt
    echo "pydantic-settings==2.1.0" >> /app/requirements_allinone.txt

# 의존성 설치
RUN pip install --no-cache-dir -r /app/requirements_allinone.txt

# 시스템 도구 설치
RUN apt-get update && apt-get install -y \
    postgresql-client \
    docker.io \
    supervisor \
    curl \
    jq \
    redis-tools \
    && rm -rf /var/lib/apt/lists/*

# Supervisor 설정 파일 생성
COPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# 통합 시작 스크립트 생성
COPY docker/start_allinone.sh /app/start_allinone.sh
RUN chmod +x /app/start_allinone.sh

# 환경 변수 설정
ENV PYTHONPATH=/app:/app/duri_common
ENV DURI_MODE=allinone
ENV PORT=8080

# 포트 노출
EXPOSE 8080 8081 8082 8083

# 통합 시작 스크립트 실행
CMD ["/app/start_allinone.sh"]
