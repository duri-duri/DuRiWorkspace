# DuRi AI 모니터링 스택
# Prometheus, Grafana, Alertmanager 및 모든 Exporter들

services:
  # Prometheus 메트릭 수집
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alerting/rules:/etc/prometheus/alerting/rules:ro
      - ./prometheus/rules:/etc/prometheus/prometheus/rules:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:9090/-/ready >/dev/null || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5

  # Grafana 대시보드
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-CHANGE_ME_GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/api/health | grep -q '\"database\": \"ok\"' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5

  # Alertmanager 알림 관리
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./ops/observability/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ./ops/observability/slack_webhook_url:/etc/alertmanager/secrets/slack_webhook_url:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:9093/-/ready >/dev/null || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5

  # Pushgateway (배치 작업 메트릭)
  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    expose:
      - "9091"
    restart: unless-stopped

  # Node Exporter (시스템 메트릭)
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    expose:
      - "9100"
    restart: unless-stopped

  # StatsD Exporter (애플리케이션 메트릭)
  statsd-exporter:
    image: prom/statsd-exporter:latest
    container_name: statsd-exporter
    expose:
      - "9102"
    restart: unless-stopped

  # Redis Exporter (Redis 메트릭)
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    expose:
      - "9121"
    restart: unless-stopped

  # Blackbox Exporter (네트워크 모니터링)
  blackbox-exporter:
    image: quay.io/prometheus/blackbox-exporter:latest
    container_name: blackbox-exporter
    expose:
      - "9115"
    restart: unless-stopped

  # SNMP Exporter (네트워크 장비 모니터링)
  snmp-exporter:
    image: prom/snmp-exporter:latest
    container_name: snmp-exporter
    expose:
      - "9116"
    restart: unless-stopped

  # PostgreSQL Exporter (DB 메트릭)
  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:${POSTGRES_PASSWORD}@duri-postgres:5432/duri_workspace?sslmode=disable
    expose:
      - "9187"
    restart: unless-stopped

  # cAdvisor (컨테이너 메트릭)
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8084:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/healthz >/dev/null || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5

volumes:
  prometheus_data:
  grafana_data:
