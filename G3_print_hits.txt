duri_common/config/config.py:233:        print("=== DuRi Configuration ===")
duri_common/config/config.py:235:            print(f"\n[{category.upper()}]")
duri_common/config/config.py:237:                print(f"  {key}: {value}")
duri_common/config/config.py:238:        print("=" * 30)
duri_core/emit_emotion_to_core.py:44:        print(f"[✓] 전송 성공: {data['emotion']} ({data['importance_score']:.2f})")
duri_core/emit_emotion_to_core.py:46:        print(f"[!] 전송 실패: {e} → 큐에 저장")
duri_core/emit_emotion_to_core.py:55:        print("[!] 감정 데이터 없음 또는 파싱 실패")
duri_core/emit_emotion_to_core.py:63:        print(f"[-] importance_score 낮음 ({score:.2f}) → 전송 생략")
duri_core/utils/fallback_handler.py:150:        print(f"⚠️  {guide}")
duri_brain/activate_autonomous_learning.py:236:    print("🚀 DuRi 자율학습 시스템 직접 활성화 시작")
duri_brain/activate_autonomous_learning.py:237:    print("=" * 60)
duri_brain/activate_autonomous_learning.py:247:        print("\n🛑 사용자에 의해 중단됨")
duri_brain/activate_autonomous_learning.py:250:        print(f"\n❌ 오류 발생: {e}")
duri_brain/activate_autonomous_learning.py:253:    print("=" * 60)
duri_brain/activate_autonomous_learning.py:254:    print("🛑 DuRi 자율학습 시스템이 중지되었습니다.")
duri_brain/emit_emotion_to_core.py:44:        print(f"[✓] 전송 성공: {data['emotion']} ({data['importance_score']:.2f})")
duri_brain/emit_emotion_to_core.py:46:        print(f"[!] 전송 실패: {e} → 큐에 저장")
duri_brain/emit_emotion_to_core.py:55:        print("[!] 감정 데이터 없음 또는 파싱 실패")
duri_brain/emit_emotion_to_core.py:63:        print(f"[-] importance_score 낮음 ({score:.2f}) → 전송 생략")
duri_brain/receive_emotion_vector.py:51:    print(log_msg.strip())  # 콘솔 출력도
duri_brain/backup_repository/current_state_backup_20250730_185500/emit_emotion_to_core.py:44:        print(f"[✓] 전송 성공: {data['emotion']} ({data['importance_score']:.2f})")
duri_brain/backup_repository/current_state_backup_20250730_185500/emit_emotion_to_core.py:46:        print(f"[!] 전송 실패: {e} → 큐에 저장")
duri_brain/backup_repository/current_state_backup_20250730_185500/emit_emotion_to_core.py:55:        print("[!] 감정 데이터 없음 또는 파싱 실패")
duri_brain/backup_repository/current_state_backup_20250730_185500/emit_emotion_to_core.py:63:        print(f"[-] importance_score 낮음 ({score:.2f}) → 전송 생략")
duri_brain/backup_repository/current_state_backup_20250730_185500/receive_emotion_vector.py:51:    print(log_msg.strip())  # 콘솔 출력도
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:46:            print("📋 1단계: 학습 루프 관리자 복원...")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:49:            print("✅ 학습 루프 관리자 복원 완료")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:52:            print("📋 2단계: 메모리 동기화 시스템 복원...")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:55:            print("✅ 메모리 동기화 시스템 복원 완료")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:58:            print("📋 3단계: Fallback 핸들러 복원...")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:61:            print("✅ Fallback 핸들러 복원 완료")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:64:            print("📋 4단계: 현재 상태 확인...")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:66:            print(f"✅ 학습 루프 상태: {status.get('status', 'unknown')}")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:101:            print("📋 1단계: 학습 루프 관리자 검증...")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:107:                print("✅ 학습 루프 관리자 검증 완료")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:110:                print("❌ 학습 루프 관리자 검증 실패")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:113:            print("📋 2단계: 메모리 동기화 시스템 검증...")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:119:                print("✅ 메모리 동기화 시스템 검증 완료")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:122:                print("❌ 메모리 동기화 시스템 검증 실패")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:125:            print("📋 3단계: Fallback 핸들러 검증...")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:131:                print("✅ Fallback 핸들러 검증 완료")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:134:                print("❌ Fallback 핸들러 검증 실패")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:137:            print("📋 4단계: 트리거 시스템 검증...")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:142:                print("✅ 메타 학습 트리거 검증 완료")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:145:                print(f"❌ 메타 학습 트리거 검증 실패: {e}")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:194:    print("🚀 === DuRi 상태 복원 시작 ===")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:198:    print(f"📋 백업 시간: {backup_info['backup_time']}")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:199:    print(f"📋 사이클 ID: {backup_info['cycle_id']}")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:200:    print(f"📋 상태: {backup_info['status']}")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:204:    print(f"\n🎯 복원 결과: {'✅ 성공' if restore_result['success'] else '❌ 실패'}")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:207:        print(f"📋 백업 시간: {restore_result['backup_time']}")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:208:        print(f"📋 사이클 ID: {restore_result['cycle_id']}")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:209:        print(f"🔄 복원된 시스템: {len(restore_result['systems_restored'])}개")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:213:        print(f"\n🔍 검증 결과: {'✅ 성공' if verification_result['success'] else '❌ 실패'}")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:214:        print(f"📊 시스템 검증: {verification_result['successful_systems']}/{verification_result['total_systems']}")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:216:        print(f"❌ 오류: {restore_result.get('error', 'Unknown error')}")
duri_brain/backup_repository/current_state_backup_20250731_093500/restore_system.py:218:    print("\n✅ === DuRi 상태 복원 완료 ===") 
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:30:    print("🚀 Phase 10 시스템 테스트 시작")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:31:    print("=" * 60)
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:37:    print("\n1️⃣ 가족 정체성 초기화 테스트")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:38:    print("-" * 40)
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:69:        print("✅ 가족 정체성 초기화 성공")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:70:        print(f"   가족명: {init_result['family_identity']['family_name']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:71:        print(f"   구성원 수: {len(init_result['family_identity']['members'])}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:72:        print(f"   시스템 상태: {init_result['system_status']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:74:        print(f"❌ 가족 정체성 초기화 실패: {e}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:78:    print("\n2️⃣ 종합 경험 기록 테스트")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:79:    print("-" * 40)
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:135:            print(f"✅ 경험 {i} 기록 성공")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:136:            print(f"   제목: {experience_data['title']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:137:            print(f"   참여자: {', '.join(experience_data['participants'])}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:138:            print(f"   감정적 영향: {experience_data['emotional_impact']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:140:            print(f"❌ 경험 {i} 기록 실패: {e}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:143:    print("\n3️⃣ 종합 통찰력 확인")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:144:    print("-" * 40)
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:148:        print("✅ 종합 통찰력 생성 성공")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:152:        print(f"   가족 강도: {family_insights.get('family_strength', 0):.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:153:        print(f"   관계 건강도: {family_insights.get('relationship_health', {}).get('overall_health', 0):.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:157:        print(f"   총 경험 수: {experience_insights.get('total_experiences', 0)}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:158:        print(f"   감정적 트렌드: {experience_insights.get('emotional_trends', {}).get('trend', 'unknown')}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:162:        print(f"   총 교훈 수: {lesson_insights.get('total_lessons', 0)}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:163:        print(f"   다음 세대 준비: {lesson_insights.get('next_generation_ready', 0)}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:166:        print(f"❌ 종합 통찰력 생성 실패: {e}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:169:    print("\n4️⃣ 가족 지혜 보고서 생성")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:170:    print("-" * 40)
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:174:        print("✅ 가족 지혜 보고서 생성 성공")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:175:        print(f"   가족 강도: {wisdom_report.get('family_strength', 0):.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:176:        print(f"   관계 건강도: {wisdom_report.get('relationship_health', 0):.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:177:        print(f"   지혜 성숙도: {wisdom_report.get('wisdom_maturity', 0):.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:178:        print(f"   세대 교훈 수: {wisdom_report.get('generational_lessons_count', 0)}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:183:            print(f"   가족 특화 통찰력: {len(family_insights)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:185:                print(f"     - {insight}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:188:        print(f"❌ 가족 지혜 보고서 생성 실패: {e}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:191:    print("\n5️⃣ 가족 개선 제안")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:192:    print("-" * 40)
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:196:        print(f"✅ 개선 제안 생성 성공: {len(suggestions)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:199:            print(f"   제안 {i}: {suggestion.get('action', 'N/A')}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:200:            print(f"     영역: {suggestion.get('area', 'N/A')}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:201:            print(f"     우선순위: {suggestion.get('priority', 'N/A')}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:204:        print(f"❌ 개선 제안 생성 실패: {e}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:207:    print("\n6️⃣ Phase 10 요약")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:208:    print("-" * 40)
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:212:        print("✅ Phase 10 요약 생성 성공")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:213:        print(f"   단계: {summary.get('phase', 'N/A')}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:214:        print(f"   상태: {summary.get('status', 'N/A')}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:217:        print(f"   전체 진행도: {progress.get('overall_progress', 0):.1f}%")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:218:        print(f"   기본 진행도: {progress.get('base_progress', 0):.1f}%")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:219:        print(f"   경험 진행도: {progress.get('experience_progress', 0):.1f}%")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:220:        print(f"   교훈 진행도: {progress.get('lesson_progress', 0):.1f}%")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:221:        print(f"   가족 진행도: {progress.get('family_progress', 0):.1f}%")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:224:        print(f"   총 경험: {metrics.get('total_experiences', 0)}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:225:        print(f"   총 교훈: {metrics.get('total_lessons', 0)}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:226:        print(f"   총 상호작용: {metrics.get('total_interactions', 0)}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:227:        print(f"   가족 강도: {metrics.get('family_strength', 0):.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:228:        print(f"   지혜 성숙도: {metrics.get('wisdom_maturity', 0):.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:231:        print(f"❌ Phase 10 요약 생성 실패: {e}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:234:    print("\n7️⃣ 데이터 내보내기 테스트")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:235:    print("-" * 40)
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:239:        print("✅ 데이터 내보내기 성공")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:240:        print(f"   내보내기 시간: {export_data.get('export_timestamp', 'N/A')}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:241:        print(f"   통합 로그 수: {len(export_data.get('integration_log', []))}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:253:        print(f"   데이터 크기: {data_size:,} 문자")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:256:        print(f"❌ 데이터 내보내기 실패: {e}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:258:    print("\n" + "=" * 60)
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:259:    print("🎉 Phase 10 시스템 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:260:    print("DuRi의 가족 정체성 형성과 기본 경험 기록이 성공적으로 구현되었습니다!")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase10.py:261:    print("=" * 60)
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:28:    print("🧠 Phase 11 통합 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:40:    print("\n📚 1. 텍스트 학습 시스템 테스트")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:53:    print(f"✅ 텍스트 학습: {len(extracted_knowledge.key_concepts)}개 키 컨셉 추출")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:56:    print("\n📹 2. 자막 학습 시스템 테스트")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:76:    print(f"✅ 자막 학습: {len(visual_knowledge.key_concepts)}개 키 컨셉 추출")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:79:    print("\n🤖 3. LLM 인터페이스 테스트")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:84:    print(f"✅ LLM 학습 도움: {learning_response.response_quality.value} 품질")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:87:    print("\n💬 4. 기본 대화 시스템 테스트")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:94:    print(f"✅ 기본 대화: {conversation_response.response_style.value} 스타일")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:97:    print("\n🎯 5. 가족 정밀도 시스템 테스트")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:106:    print(f"✅ 가족 정밀도: {precision_response.confidence_score:.2f} 신뢰도")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:109:    print("\n🧠 6. 발전적 사고 시스템 테스트")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:118:    print(f"✅ 발전적 사고: {developmental_response.confidence_score:.2f} 신뢰도")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:121:    print("\n🔄 7. 시스템 간 데이터 연동 테스트")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:130:        print(f"✅ 텍스트→LLM 연동: {llm_followup.response_quality.value} 품질")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:139:        print(f"✅ 자막→대화 연동: {conversation_followup.response_style.value} 스타일")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:142:    print("\n📊 8. 통합 성능 평가")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:164:    print(f"✅ 시스템 활성화율: {system_activation_rate:.2f} ({active_systems}/{total_systems})")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:176:    print(f"✅ 평균 신뢰도: {avg_confidence:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:179:    print("\n💾 9. 데이터 내보내기 테스트")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:191:    print(f"✅ 통합 데이터 내보내기: {len(export_data)}개 시스템")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:194:    print("\n🎉 Phase 11 통합 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:195:    print(f"📋 테스트된 시스템: {total_systems}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:196:    print(f"✅ 활성화된 시스템: {active_systems}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:197:    print(f"📊 평균 신뢰도: {avg_confidence:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:198:    print(f"🔄 시스템 연동: 텍스트→LLM, 자막→대화")
duri_brain/backup_repository/current_state_backup_20250730_185500/test_phase11_integration.py:199:    print(f"💾 데이터 내보내기: 완료")
duri_brain/emotion/emotional_self_awareness.py:583:    print("💭 감정적 자기인식 시스템 테스트 시작")
duri_brain/emotion/emotional_self_awareness.py:597:    print(f"✅ 감정적 트리거 분석 완료: {trigger.emotion_caused.value}")
duri_brain/emotion/emotional_self_awareness.py:611:    print(f"✅ 감정적 반응 모니터링 완료: {response.emotion.value}")
duri_brain/emotion/emotional_self_awareness.py:615:    print(f"✅ 감정 패턴 식별 완료: {len(pattern_analysis['patterns'])}개 패턴")
duri_brain/emotion/emotional_self_awareness.py:619:    print(f"📊 감정적 성숙도: {maturity_assessment['overall_maturity']:.2f}")
duri_brain/emotion/emotional_self_awareness.py:623:    print(f"📋 자기인식 리포트 생성 완료: {report['total_triggers']}개 트리거, {report['total_responses']}개 반응")
duri_brain/emotion/emotional_self_awareness.py:625:    print("🎉 감정적 자기인식 시스템 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/deployment_config.py:143:    print("✅ 배포 파일들 생성 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/deployment_config.py:149:    print("🌐 인터넷 배포 옵션:")
duri_brain/backup_repository/current_state_backup_20250730_185500/deployment_config.py:150:    print("=" * 50)
duri_brain/backup_repository/current_state_backup_20250730_185500/deployment_config.py:153:        print(f"\n📋 {info['name']}:")
duri_brain/backup_repository/current_state_backup_20250730_185500/deployment_config.py:154:        print(f"   💰 비용: {info['cost']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/deployment_config.py:155:        print(f"   ⏱️  설정 시간: {info['setup_time']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/deployment_config.py:156:        print(f"   🌟 특징: {', '.join(info['features'])}")
duri_brain/backup_repository/current_state_backup_20250730_185500/deployment_config.py:157:        print(f"   🔗 예상 URL: {info['url']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/deployment_config.py:159:    print(f"\n🔒 보안 설정:")
duri_brain/backup_repository/current_state_backup_20250730_185500/deployment_config.py:161:        print(f"   {key}: {value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/deployment_config.py:163:    print(f"\n🌍 도메인 옵션:")
duri_brain/backup_repository/current_state_backup_20250730_185500/deployment_config.py:165:        print(f"   {domain}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_performance_maximization_system.py:434:    print("🚀 AdvancedAGIPerformanceMaximizationSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_performance_maximization_system.py:459:    print(f"✅ 성능 벤치마크 생성 완료: {benchmark.benchmark_confidence:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_performance_maximization_system.py:481:    print(f"✅ 극한 최적화 생성 완료: {optimization.optimization_confidence:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_performance_maximization_system.py:500:    print(f"✅ 성능 모니터 생성 완료: {monitor.monitoring_effectiveness:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_performance_maximization_system.py:516:    print(f"✅ 성능 분석 완료: {analysis.analysis_confidence:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_performance_maximization_system.py:520:    print(f"📊 통계: 벤치마크 {stats['total_benchmarks']}개, 최적화 {stats['total_optimizations']}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_performance_maximization_system.py:521:    print(f"🎯 평균 벤치마크 신뢰도: {stats['average_benchmark_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_performance_maximization_system.py:522:    print(f"🚀 평균 최적화 신뢰도: {stats['average_optimization_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_performance_maximization_system.py:523:    print(f"🔧 평균 모니터링 효과성: {stats['average_monitoring_effectiveness']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_performance_maximization_system.py:524:    print(f"📊 평균 분석 신뢰도: {stats['average_analysis_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_performance_maximization_system.py:526:    print("✅ AdvancedAGIPerformanceMaximizationSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_centric_agi_system.py:436:    print("🧠 AdvancedFamilyCentricAGISystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_centric_agi_system.py:455:    print(f"✅ AGI 능력 평가 완료: {assessment.confidence_level:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_centric_agi_system.py:471:    print(f"✅ 통합 시스템 생성 완료: {integrated_system.integration_effectiveness:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_centric_agi_system.py:493:    print(f"✅ AGI 성장 계획 생성 완료: {growth_plan.plan_confidence:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_centric_agi_system.py:525:    print(f"✅ AGI 상태 평가 완료: {status.overall_status}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_centric_agi_system.py:529:    print(f"📊 통계: 평가 {stats['total_assessments']}개, 시스템 {stats['total_systems']}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_centric_agi_system.py:530:    print(f"🎯 평균 신뢰도: {stats['average_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_centric_agi_system.py:531:    print(f"🔧 평균 통합 효과성: {stats['average_integration_effectiveness']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_centric_agi_system.py:532:    print(f"📈 평균 계획 신뢰도: {stats['average_plan_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_centric_agi_system.py:533:    print(f"🌟 현재 AGI 수준: {stats['current_agi_level']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_centric_agi_system.py:535:    print("✅ AdvancedFamilyCentricAGISystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:454:    print("🧠 IntegratedLearningSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:477:    print(f"✅ 학습 경험 기록: {experience1.domain.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:478:    print(f"   학습 방법: {experience1.method.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:479:    print(f"   신뢰도: {experience1.confidence_gained:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:491:    print(f"✅ 학습 통합 생성: {integration.integration_type.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:492:    print(f"   통합 설명: {integration.integration_description[:50]}...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:493:    print(f"   신뢰도: {integration.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:509:    print(f"✅ 학습 경로 개발: {path.family_member}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:510:    print(f"   학습 목표: {len(path.learning_goals)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:511:    print(f"   다음 마일스톤: {len(path.next_milestones)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:512:    print(f"   신뢰도: {path.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:516:    print(f"✅ 영역 간 학습 분석: {len(cross_domain_integrations)}개 통합 발견")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:520:    print(f"✅ 가족 학습 보고서 생성: {report['total_experiences']}개 경험, {report['total_integrations']}개 통합")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:521:    print(f"   전체 학습 진도: {report['overall_learning_progress']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:525:    print(f"✅ 통합 학습 통계: {statistics['total_experiences']}개 경험, {statistics['total_integrations']}개 통합")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:526:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:527:    print(f"   학습 방법 통계: {statistics['method_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:531:    print(f"✅ 통합 학습 데이터 내보내기: {len(export_data['learning_experiences'])}개 경험")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/integrated_learning_system.py:533:    print("🎉 IntegratedLearningSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:584:    print("🎯 FamilyConversationPrecisionSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:602:    print(f"✅ 대화 정밀도 분석: {precision_analysis.overall_precision:.2f} 전체 정밀도")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:603:    print(f"   관계 정확도: {precision_analysis.relationship_accuracy:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:604:    print(f"   맥락 적절성: {precision_analysis.context_appropriateness:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:605:    print(f"   감정 민감도: {precision_analysis.emotional_sensitivity:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:606:    print(f"   가족 가치 정렬: {precision_analysis.family_value_alignment:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:607:    print(f"   개선 제안: {precision_analysis.improvement_suggestions}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:611:    print(f"✅ 정밀도 향상 응답: {precision_response.confidence_score:.2f} 신뢰도")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:612:    print(f"   원래 메시지: {precision_response.original_message}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:613:    print(f"   향상된 응답: {precision_response.precision_enhanced_response}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:614:    print(f"   관계별 특화 요소: {precision_response.relationship_specific_elements}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:615:    print(f"   맥락 적절한 구문: {precision_response.context_appropriate_phrases}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:616:    print(f"   감정 지원 요소: {precision_response.emotional_support_elements}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:620:    print(f"✅ 정밀도 통계: {statistics['total_analyses']}개 분석, {statistics['total_responses']}개 응답")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:621:    print(f"   정밀도 수준별: {statistics['precision_level_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:622:    print(f"   관계별: {statistics['relationship_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:623:    print(f"   평균 전체 정밀도: {statistics['average_overall_precision']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:624:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:628:    print(f"✅ 정밀도 데이터 내보내기: {len(export_data['precision_analyses'])}개 분석, {len(export_data['precision_responses'])}개 응답")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/family_conversation_precision_service.py:630:    print("🎉 FamilyConversationPrecisionSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_adaptation_system.py:511:    print("🧠 AdvancedSocialAdaptationSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_adaptation_system.py:526:    print(f"✅ 사회적 상황 기록 완료: {situation.id}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_adaptation_system.py:534:    print(f"✅ 적응적 반응 생성 완료: {response.adaptation_level.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_adaptation_system.py:545:    print(f"✅ 사회적 학습 기록 완료: {learning.learning_effectiveness:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_adaptation_system.py:549:    print(f"✅ 적응 패턴 분석 완료: {pattern.pattern_reliability:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_adaptation_system.py:553:    print(f"📊 통계: 상황 {stats['total_situations']}개, 반응 {stats['total_responses']}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_adaptation_system.py:554:    print(f"📈 평균 효과성: {stats['average_effectiveness']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_adaptation_system.py:555:    print(f"🎯 평균 신뢰도: {stats['average_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_adaptation_system.py:557:    print("✅ AdvancedSocialAdaptationSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:541:    print("🧠 MetacognitiveLearningSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:553:    print(f"✅ 학습 세션 수행: {session.strategy_used.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:554:    print(f"   메타인지 과정: {session.metacognitive_process.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:555:    print(f"   학습 효과성: {session.effectiveness.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:556:    print(f"   신뢰도 변화: {session.initial_confidence:.2f} → {session.final_confidence:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:557:    print(f"   적응 여부: {session.adaptation_made.value if session.adaptation_made else '없음'}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:562:    print(f"✅ 메타인지 성과 분석 완료")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:563:    print(f"   전략 효과성: {len(analysis.strategy_effectiveness)}개 전략 분석")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:564:    print(f"   과정 통찰: {len(analysis.process_insights)}개 과정")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:565:    print(f"   학습 패턴: {len(analysis.learning_patterns)}개 패턴")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:566:    print(f"   개선 제안: {len(analysis.improvement_suggestions)}개 제안")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:567:    print(f"   신뢰도: {analysis.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:578:    print(f"✅ 학습 전략 최적화: {optimization.current_strategy.value} → {optimization.recommended_strategy.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:579:    print(f"   최적화 이유: {optimization.optimization_reason}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:580:    print(f"   예상 개선도: {optimization.expected_improvement:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:581:    print(f"   구현 단계: {len(optimization.implementation_steps)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:582:    print(f"   신뢰도: {optimization.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:586:    print(f"✅ 메타인지 통계: {statistics['total_sessions']}개 세션")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:587:    print(f"   평균 신뢰도 향상: {statistics['average_confidence_gain']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:588:    print(f"   전략별 통계: {len(statistics['strategy_statistics'])}개 전략")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:589:    print(f"   과정별 통계: {statistics['process_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:593:    print(f"✅ 메타인지 데이터 내보내기: {len(export_data['learning_sessions'])}개 세션")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/metacognitive_learning_system.py:595:    print("🎉 MetacognitiveLearningSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/real_family_interaction_mvp.py:505:    print("🏠 RealFamilyInteractionMVP 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/real_family_interaction_mvp.py:509:    print("✅ HTML 템플릿 생성 완료")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/real_family_interaction_mvp.py:516:    print(f"✅ 일일 질문 생성 완료: {len(questions)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/real_family_interaction_mvp.py:519:    print("🌐 웹 서버를 시작합니다...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/real_family_interaction_mvp.py:522:    print("✅ RealFamilyInteractionMVP 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/real_family_interaction_mvp.py:523:    print("🌐 웹 브라우저에서 http://localhost:5000 으로 접속하여 실제 테스트를 진행하세요!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/real_family_interaction_mvp.py:524:    print("📱 가족 구성원들과 함께 실제 상호작용을 테스트해보세요!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/real_family_interaction_mvp.py:532:        print("\n🛑 서버를 종료합니다...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/text_learning_service.py:450:    print("🧠 TextBasedLearningSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/text_learning_service.py:470:    print(f"✅ 텍스트 콘텐츠 추가: {text_content.title}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/text_learning_service.py:474:    print(f"✅ 지식 추출 완료: {len(extracted_knowledge.key_concepts)}개 키 컨셉")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/text_learning_service.py:475:    print(f"   주요 아이디어: {len(extracted_knowledge.main_ideas)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/text_learning_service.py:476:    print(f"   가족 관련 인사이트: {len(extracted_knowledge.family_relevant_insights)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/text_learning_service.py:477:    print(f"   학습 카테고리: {extracted_knowledge.learning_category.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/text_learning_service.py:478:    print(f"   학습 수준: {extracted_knowledge.learning_level.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/text_learning_service.py:479:    print(f"   신뢰도 점수: {extracted_knowledge.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/text_learning_service.py:490:    print(f"✅ 학습 진도 업데이트: {learning_progress.completion_percentage}% 완료")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/text_learning_service.py:495:    print(f"✅ 학습 추천 {len(recommendations)}개 생성")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/text_learning_service.py:499:    print(f"✅ 학습 통계 생성: {statistics['total_contents']}개 콘텐츠, {statistics['total_knowledge']}개 지식")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/text_learning_service.py:503:    print(f"✅ 학습 데이터 내보내기: {len(export_data['text_contents'])}개 콘텐츠")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/text_learning_service.py:505:    print("🎉 TextBasedLearningSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_learning_system.py:495:    print("🧠 AdvancedSocialLearningSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_learning_system.py:511:    print(f"✅ 사회적 학습 경험 기록 완료: {experience.id}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_learning_system.py:519:    print(f"✅ 학습 과정 최적화 완료: {optimization.learning_quality.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_learning_system.py:530:    print(f"✅ 지식 통합 완료: {integration.integration_effectiveness:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_learning_system.py:534:    print(f"✅ 학습 패턴 분석 완료: {pattern.pattern_reliability:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_learning_system.py:538:    print(f"📊 통계: 경험 {stats['total_experiences']}개, 최적화 {stats['total_optimizations']}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_learning_system.py:539:    print(f"📈 평균 보유율: {stats['average_retention_rate']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_learning_system.py:540:    print(f"🎯 평균 적용율: {stats['average_application_rate']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_learning_system.py:541:    print(f"📊 평균 신뢰도: {stats['average_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_learning_system.py:543:    print("✅ AdvancedSocialLearningSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:758:    print("🚀 AdvancedAutonomousEvolutionSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:785:    print(f"✅ 진화 필요성 분석: {len(triggers)}개 트리거")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:786:    print(f"   트리거: {[t.value for t in triggers]}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:796:    print(f"✅ 진화 결정: {decision.direction.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:797:    print(f"   신뢰도: {decision.confidence_level.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:798:    print(f"   예상 이익: {len(decision.expected_benefits)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:799:    print(f"   잠재적 위험: {len(decision.potential_risks)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:804:    print(f"✅ 진화 계획: {len(plan.implementation_steps)}개 단계")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:805:    print(f"   타임라인: {plan.timeline}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:806:    print(f"   성공 지표: {len(plan.success_metrics)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:807:    print(f"   위험 완화: {len(plan.risk_mitigation)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:812:    print(f"✅ 진화 실행 시작: {execution.status.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:813:    print(f"   현재 단계: {execution.current_step}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:823:    print(f"✅ 진행 상황 업데이트: 50% 완료")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:842:    print(f"✅ 진화 결과 평가: 효과성 {result.evolution_effectiveness:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:843:    print(f"   자기 개선 점수: {result.self_improvement_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:844:    print(f"   학습한 교훈: {len(result.lessons_learned)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:845:    print(f"   다음 목표: {len(result.next_evolution_targets)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:849:    print(f"✅ 자율 진화 통계: {statistics['total_decisions']}개 결정")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:850:    print(f"   평균 효과성: {statistics['average_effectiveness']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:851:    print(f"   평균 자기 개선: {statistics['average_self_improvement']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:852:    print(f"   트리거별 통계: {statistics['trigger_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:853:    print(f"   방향별 통계: {statistics['direction_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:854:    print(f"   신뢰도별 통계: {statistics['confidence_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:858:    print(f"✅ 자율 진화 데이터 내보내기: {len(export_data['evolution_decisions'])}개 결정")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_autonomous_evolution_system.py:860:    print("🎉 AdvancedAutonomousEvolutionSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:631:    print("🚀 AdvancedFamilyInteractionSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:649:    print(f"✅ 복잡한 가족 상호작용 수행: {interaction.interaction_type}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:650:    print(f"   복잡도: {interaction.complexity.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:651:    print(f"   가족 역학: {interaction.family_dynamic.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:652:    print(f"   상호작용 모드: {interaction.interaction_mode.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:653:    print(f"   신뢰도: {interaction.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:658:    print(f"✅ 상호작용 분석 완료")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:659:    print(f"   감정적 통찰: {len(analysis.emotional_insights)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:660:    print(f"   윤리적 통찰: {len(analysis.ethical_insights)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:661:    print(f"   학습 통찰: {len(analysis.learning_insights)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:662:    print(f"   권장사항: {len(analysis.recommendations)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:663:    print(f"   신뢰도: {analysis.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:676:    print(f"✅ 가족 성장 계획 생성: {len(plan.growth_areas)}개 영역")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:677:    print(f"   구체적 목표: {len(plan.specific_goals)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:678:    print(f"   실행 단계: {len(plan.action_steps)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:679:    print(f"   성공 지표: {len(plan.success_metrics)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:680:    print(f"   신뢰도: {plan.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:684:    print(f"✅ 고급 상호작용 통계: {statistics['total_interactions']}개 상호작용")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:685:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:686:    print(f"   복잡도별 통계: {statistics['complexity_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:687:    print(f"   가족 역학별 통계: {statistics['dynamic_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:691:    print(f"✅ 고급 상호작용 데이터 내보내기: {len(export_data['family_interactions'])}개 상호작용")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_family_interaction_system.py:693:    print("🎉 AdvancedFamilyInteractionSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:594:    print("🧠 AdvancedEmotionalIntelligenceSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:607:    print(f"✅ 감정적 상황 분석: {len(involved_members)}명 참여")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:608:    print(f"   감정 상태: {len(situation.emotional_states)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:609:    print(f"   감정적 갈등: {len(situation.emotional_conflicts)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:614:    print(f"✅ 감정 분석 완료: {len(analysis.response_strategies)}개 전략")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:615:    print(f"   감정 패턴: {len(analysis.emotional_patterns)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:616:    print(f"   갈등 분석: {len(analysis.conflict_analysis)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:617:    print(f"   감정적 필요: {len(analysis.emotional_needs)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:618:    print(f"   신뢰도: {analysis.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:619:    print(f"   감정적 영향: {analysis.emotional_impact}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:624:    print(f"✅ 감정적 대응 생성: {response.primary_strategy.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:625:    print(f"   구체적 행동: {len(response.specific_actions)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:626:    print(f"   감정적 지원: {len(response.emotional_support)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:627:    print(f"   소통 가이드: {len(response.communication_guidance)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:628:    print(f"   후속 행동: {len(response.follow_up_actions)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:629:    print(f"   예상 결과: {len(response.expected_outcomes)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:630:    print(f"   위험 평가: {len(response.risk_assessment)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:634:    print(f"✅ 감정 통계: {statistics['total_situations']}개 상황")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:635:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:636:    print(f"   감정 상태별 통계: {len(statistics['emotion_statistics'])}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:637:    print(f"   갈등 유형별 통계: {statistics['conflict_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:638:    print(f"   전략별 통계: {statistics['strategy_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:642:    print(f"✅ 감정 데이터 내보내기: {len(export_data['emotional_situations'])}개 상황")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_emotional_intelligence_system.py:644:    print("🎉 AdvancedEmotionalIntelligenceSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/auto_backup_manager.py:445:    print("💾 AutoBackupManager 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/auto_backup_manager.py:461:    print(f"✅ 백업 필요 여부: {should_backup}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/auto_backup_manager.py:469:    print(f"✅ 백업 실행 완료: {backup_info.metadata.backup_id}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/auto_backup_manager.py:470:    print(f"   트리거: {backup_info.metadata.trigger.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/auto_backup_manager.py:471:    print(f"   우선순위: {backup_info.metadata.priority.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/auto_backup_manager.py:472:    print(f"   상태: {backup_info.metadata.status.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/auto_backup_manager.py:473:    print(f"   크기: {backup_info.metadata.backup_size_mb:.2f}MB")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/auto_backup_manager.py:477:    print(f"✅ 수동 백업 완료: {manual_backup.metadata.backup_id}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/auto_backup_manager.py:481:    print(f"✅ 백업 통계: {statistics['total_backups']}개 백업")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/auto_backup_manager.py:482:    print(f"   성공률: {statistics['success_rate']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/auto_backup_manager.py:483:    print(f"   총 크기: {statistics['total_size_mb']:.2f}MB")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/auto_backup_manager.py:484:    print(f"   트리거별 통계: {statistics['trigger_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/auto_backup_manager.py:488:    print(f"✅ 백업 데이터 내보내기: {len(export_data['backup_history'])}개 백업")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/auto_backup_manager.py:490:    print("🎉 AutoBackupManager 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:640:    print("🧠 AdvancedEthicalReasoningSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:652:    print(f"✅ 윤리적 딜레마 분석: {dilemma.complexity.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:653:    print(f"   관련 원칙: {len(dilemma.involved_principles)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:654:    print(f"   가치 충돌: {len(dilemma.value_conflicts)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:659:    print(f"✅ 윤리적 추론 완료: {analysis.reasoning_method.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:660:    print(f"   도덕적 판단: {analysis.moral_judgment.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:661:    print(f"   신뢰도: {analysis.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:662:    print(f"   추론 단계: {len(analysis.reasoning_steps)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:663:    print(f"   가족 영향: {analysis.family_impact}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:668:    print(f"✅ 윤리적 권고 생성: {recommendation.recommended_action}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:669:    print(f"   대안 행동: {len(recommendation.alternative_actions)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:670:    print(f"   예상 결과: {len(recommendation.expected_outcomes)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:671:    print(f"   위험 평가: {len(recommendation.risk_assessment)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:672:    print(f"   가족 고려사항: {len(recommendation.family_considerations)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:673:    print(f"   구현 단계: {len(recommendation.implementation_steps)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:677:    print(f"✅ 윤리적 통계: {statistics['total_dilemmas']}개 딜레마")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:678:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:679:    print(f"   복잡성별 통계: {statistics['complexity_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:680:    print(f"   판단별 통계: {statistics['judgment_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:681:    print(f"   방법별 통계: {statistics['method_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:685:    print(f"✅ 윤리적 데이터 내보내기: {len(export_data['ethical_dilemmas'])}개 딜레마")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_ethical_reasoning_system.py:687:    print("🎉 AdvancedEthicalReasoningSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:773:    print("⚖️ EnhancedEthicalSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:789:    print(f"✅ 윤리적 분석: {ethical_analysis.judgment_level.value} 판단")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:790:    print(f"   관련 원칙: {[p.value for p in ethical_analysis.ethical_principles]}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:791:    print(f"   윤리적 추론: {ethical_analysis.reasoning}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:792:    print(f"   가족 영향: {ethical_analysis.family_impact}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:793:    print(f"   신뢰도: {ethical_analysis.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:797:    print(f"✅ 안전성 평가: {safety_assessment.risk_level.value} 위험")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:798:    print(f"   식별된 위험: {safety_assessment.identified_risks}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:799:    print(f"   완화 전략: {safety_assessment.mitigation_strategies}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:800:    print(f"   가족 안전 영향: {safety_assessment.family_safety_impact}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:801:    print(f"   안전 점수: {safety_assessment.overall_safety_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:805:    print(f"✅ 가족 조화 평가: {harmony_assessment.harmony_level.value} 조화")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:806:    print(f"   긍정적 영향: {harmony_assessment.positive_impacts}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:807:    print(f"   잠재적 우려: {harmony_assessment.potential_concerns}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:808:    print(f"   조화 향상 제안: {harmony_assessment.harmony_enhancement_suggestions}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:809:    print(f"   가족 만족도: {harmony_assessment.family_satisfaction_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:813:    print(f"✅ 윤리 통계: {statistics['total_analyses']}개 분석, {statistics['total_safety_assessments']}개 안전성 평가")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:814:    print(f"   윤리적 판단별: {statistics['judgment_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:815:    print(f"   안전 위험별: {statistics['risk_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:816:    print(f"   가족 조화별: {statistics['harmony_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:817:    print(f"   평균 윤리 신뢰도: {statistics['average_ethical_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:818:    print(f"   평균 안전 점수: {statistics['average_safety_score']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:819:    print(f"   평균 조화 점수: {statistics['average_harmony_score']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:823:    print(f"✅ 윤리 데이터 내보내기: {len(export_data['ethical_analyses'])}개 분석, {len(export_data['safety_assessments'])}개 안전성 평가")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/enhanced_ethical_system.py:825:    print("🎉 EnhancedEthicalSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:615:    print("🧠 DevelopmentalThinkingConversationSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:632:    print(f"✅ 발전적 사고 분석: {growth_analysis.developmental_stage.value} 단계")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:633:    print(f"   성장 지향성: {growth_analysis.growth_orientation.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:634:    print(f"   학습 진도: {growth_analysis.learning_progress.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:635:    print(f"   성장 잠재력: {growth_analysis.growth_potential:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:636:    print(f"   필요한 지원: {growth_analysis.support_needed}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:637:    print(f"   다음 단계: {growth_analysis.next_steps}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:641:    print(f"✅ 발전적 응답: {developmental_response.confidence_score:.2f} 신뢰도")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:642:    print(f"   원래 메시지: {developmental_response.original_message}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:643:    print(f"   발전적 응답: {developmental_response.developmental_response}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:644:    print(f"   성장 요소: {developmental_response.growth_elements}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:645:    print(f"   학습 격려: {developmental_response.learning_encouragement}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:646:    print(f"   다음 발전 단계: {developmental_response.next_development_steps}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:650:    print(f"✅ 발전적 통계: {statistics['total_analyses']}개 분석, {statistics['total_responses']}개 응답")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:651:    print(f"   발전 단계별: {statistics['stage_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:652:    print(f"   성장 지향성별: {statistics['orientation_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:653:    print(f"   학습 진도별: {statistics['progress_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:654:    print(f"   평균 성장 잠재력: {statistics['average_growth_potential']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:655:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:659:    print(f"✅ 발전적 데이터 내보내기: {len(export_data['growth_analyses'])}개 분석, {len(export_data['developmental_responses'])}개 응답")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/developmental_thinking_conversation_service.py:661:    print("🎉 DevelopmentalThinkingConversationSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:477:    print("🌐 AdvancedExternalInterfaceSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:489:    print(f"✅ 외부 인터페이스 설정: {'성공' if success else '실패'}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:497:    print(f"✅ 외부 세션 시작: {session.session_type}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:498:    print(f"   최대 질문 수: {session.max_queries}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:509:        print(f"✅ ChatGPT 질문 성공: {result['response_quality']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:510:        print(f"   응답 품질: {result['response_quality']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:511:        print(f"   관련성 점수: {result['relevance_score']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:512:        print(f"   학습 가치: {result['learning_value']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:522:        print(f"✅ 학습 통합: {'성공' if learning_success else '실패'}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:528:        print(f"✅ 외부 세션 종료: {completed_session.query_count}회 질문")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:529:        print(f"   총 학습 가치: {completed_session.total_learning_value:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:530:        print(f"   세션 지속 시간: {completed_session.session_duration}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:534:    print(f"✅ 외부 인터페이스 통계: {statistics['total_queries']}개 질문")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:535:    print(f"   평균 학습 가치: {statistics['average_learning_value']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:536:    print(f"   소스별 통계: {statistics['source_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:537:    print(f"   질문 유형별 통계: {statistics['query_type_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:538:    print(f"   품질별 통계: {statistics['quality_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:542:    print(f"✅ 외부 인터페이스 데이터 내보내기: {len(export_data['external_queries'])}개 질문")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_external_interface_system.py:544:    print("🎉 AdvancedExternalInterfaceSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:791:    print("🧠 SelfExplanationBooster 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:813:    print("\n📝 개별 질문 테스트:")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:816:        print(f"{i}. {question}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:817:        print(f"   답변: {result['answer']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:818:        print(f"   신뢰도: {result['confidence_score']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:819:        print(f"   품질: {result['response_quality']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:820:        print()
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:823:    print("🔍 자아 점검 수행:")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:827:    print(f"   총 질문 수: {summary['total_questions']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:828:    print(f"   평균 신뢰도: {summary['average_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:829:    print(f"   자아 인식 수준: {summary['self_awareness_level']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:830:    print(f"   응답 품질 분포: {summary['response_quality_distribution']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:831:    print(f"   권장사항: {summary['recommendations']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:835:    print(f"\n📊 자아 설명 통계:")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:836:    print(f"   정체성: {statistics['total_identities']}개, 평균 신뢰도: {statistics['average_identity_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:837:    print(f"   설명: {statistics['total_explanations']}개, 평균 신뢰도: {statistics['average_explanation_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:838:    print(f"   감정: {statistics['total_emotions']}개, 평균 신뢰도: {statistics['average_emotion_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:839:    print(f"   기억: {statistics['total_memories']}개, 평균 신뢰도: {statistics['average_memory_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:840:    print(f"   평가: {statistics['total_evaluations']}개, 평균 신뢰도: {statistics['average_evaluation_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:844:    print(f"\n💾 자아 설명 데이터 내보내기: {len(export_data['self_identities'])}개 정체성, {len(export_data['self_explanations'])}개 설명")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_explanation_booster.py:846:    print("\n🎉 SelfExplanationBooster 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_creativity_system.py:630:    print("🧠 AdvancedSocialCreativitySystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_creativity_system.py:646:    print(f"✅ 창의적 해결책 생성 완료: {solution.creativity_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_creativity_system.py:655:    print(f"✅ 혁신 프로젝트 생성 완료: {project.innovation_effectiveness:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_creativity_system.py:659:    print(f"✅ 창의성 패턴 분석 완료: {analysis.analysis_reliability:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_creativity_system.py:667:    print(f"✅ 창의성 과정 최적화 완료: {optimization.creativity_level.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_creativity_system.py:671:    print(f"📊 통계: 해결책 {stats['total_solutions']}개, 프로젝트 {stats['total_projects']}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_creativity_system.py:672:    print(f"🎨 평균 창의성 점수: {stats['average_creativity_score']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_creativity_system.py:673:    print(f"🚀 평균 혁신 효과성: {stats['average_innovation_effectiveness']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_creativity_system.py:674:    print(f"💝 평균 가족 영향 점수: {stats['average_family_impact_score']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_social_creativity_system.py:676:    print("✅ AdvancedSocialCreativitySystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/execution_centric_family_interaction_system.py:374:    print("🏠 ExecutionCentricFamilyInteractionSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/execution_centric_family_interaction_system.py:380:    print(f"✅ 일일 질문 리스트 생성 완료: {len(daily_questions)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/execution_centric_family_interaction_system.py:388:    print(f"✅ 가족 응답 기록 완료: {response_recorded}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/execution_centric_family_interaction_system.py:400:    print(f"✅ 가족 상호작용 기록 완료: {interaction.id}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/execution_centric_family_interaction_system.py:416:    print(f"✅ MVP 테스트 완료: {mvp_test.overall_success_rate:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/execution_centric_family_interaction_system.py:426:    print(f"✅ 실행 피드백 수집 완료: {feedback.feedback_confidence:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/execution_centric_family_interaction_system.py:430:    print(f"📊 통계: 질문 {stats['total_questions']}개, 상호작용 {stats['total_interactions']}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/execution_centric_family_interaction_system.py:431:    print(f"📈 응답률: {stats['response_rate']:.1%}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/execution_centric_family_interaction_system.py:432:    print(f"🎯 평균 피드백 점수: {stats['average_feedback_score']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/execution_centric_family_interaction_system.py:433:    print(f"✅ 평균 성공률: {stats['average_success_rate']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/execution_centric_family_interaction_system.py:435:    print("✅ ExecutionCentricFamilyInteractionSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:553:    print("🌐 AdvancedSocialitySimulationSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:582:    print(f"✅ 사회적 개체 생성: {len(simulation_system.social_entities)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:592:    print(f"✅ 시뮬레이션 시나리오 생성: {scenario.scenario_type}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:596:    print(f"✅ 시뮬레이션 시작: {'성공' if success else '실패'}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:620:    print(f"✅ 사회적 상호작용 수행: {len(simulation_system.social_interactions)}회")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:627:    print(f"✅ 신뢰 관계 업데이트: {len(simulation_system.trust_relationships)}개 관계")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:631:    print(f"✅ 시뮬레이션 성공도 평가: 성공률 {evaluation['success_rate']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:632:    print(f"   평균 신뢰 점수: {evaluation['average_trust_score']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:633:    print(f"   평균 역할 효과성: {evaluation['average_role_effectiveness']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:634:    print(f"   평균 협력 점수: {evaluation['average_cooperation_score']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:635:    print(f"   진화 트리거: {evaluation['evolution_triggers']}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:639:    print(f"✅ 시뮬레이션 종료: 최종 성공률 {final_result['success_rate']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:643:    print(f"✅ 사회성 시뮬레이션 통계: {statistics['total_interactions']}회 상호작용")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:644:    print(f"   상호작용 유형별 통계: {statistics['interaction_type_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:645:    print(f"   총 진화 트리거: {statistics['evolution_triggers']}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:649:    print(f"✅ 사회성 시뮬레이션 데이터 내보내기: {len(export_data['social_interactions'])}개 상호작용")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_sociality_simulation_system.py:651:    print("🎉 AdvancedSocialitySimulationSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:538:    print("🧠 AdvancedKnowledgeFusionSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:561:    print(f"✅ 지식 요소 추가: {element1.source.value}, {element2.source.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:562:    print(f"   신뢰도: {element1.confidence_level:.2f}, {element2.confidence_level:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:571:    print(f"✅ 지식 융합 생성: {fusion.fusion_type.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:572:    print(f"   새로운 통찰: {len(fusion.new_insights)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:573:    print(f"   가족 적용 방안: {len(fusion.family_applications)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:574:    print(f"   혁신 수준: {fusion.innovation_level.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:575:    print(f"   신뢰도: {fusion.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:584:    print(f"✅ 지식 패턴 식별: {pattern.pattern_type}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:585:    print(f"   반복 요소: {len(pattern.recurring_elements)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:586:    print(f"   가족 중요성: {pattern.family_significance}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:587:    print(f"   예측 가치: {pattern.predictive_value:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:596:    print(f"✅ 창의적 통찰 생성: {insight.insight_type}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:597:    print(f"   새로움 점수: {insight.novelty_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:598:    print(f"   가족 영향: {insight.family_impact}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:599:    print(f"   구현 경로: {len(insight.implementation_path)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:603:    print(f"✅ 융합 통계: {statistics['total_elements']}개 요소")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:604:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:605:    print(f"   평균 새로움 점수: {statistics['average_novelty']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:606:    print(f"   소스별 통계: {statistics['source_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:607:    print(f"   융합 유형별 통계: {statistics['fusion_type_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:608:    print(f"   혁신 수준별 통계: {statistics['innovation_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:612:    print(f"✅ 융합 데이터 내보내기: {len(export_data['knowledge_elements'])}개 요소")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_knowledge_fusion_system.py:614:    print("🎉 AdvancedKnowledgeFusionSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/basic_conversation_service.py:536:    print("💬 BasicConversationSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/basic_conversation_service.py:551:    print(f"✅ 대화 세션 시작: {session.id}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/basic_conversation_service.py:555:    print(f"✅ 인사말 응답: {greeting_response.response_style.value} 스타일, {greeting_response.confidence_score:.2f} 신뢰도")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/basic_conversation_service.py:559:    print(f"✅ 감정 공유 응답: {emotional_response.response_style.value} 스타일, {emotional_response.emotion_appropriate} 감정 적절성")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/basic_conversation_service.py:563:    print(f"✅ 질문 응답: {question_response.response_style.value} 스타일, {question_response.family_relevant} 가족 관련성")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/basic_conversation_service.py:567:    print(f"✅ 학습 요청 응답: {learning_response.response_style.value} 스타일, {learning_response.confidence_score:.2f} 신뢰도")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/basic_conversation_service.py:571:    print(f"✅ 장난스러운 대화 응답: {playful_response.response_style.value} 스타일, {playful_response.family_relevant} 가족 관련성")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/basic_conversation_service.py:575:    print(f"✅ 대화 세션 종료: {ended_session.session_quality:.2f} 세션 품질")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/basic_conversation_service.py:579:    print(f"✅ 대화 통계: {statistics['total_sessions']}개 세션, {statistics['total_messages']}개 메시지")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/basic_conversation_service.py:580:    print(f"   대화 유형별: {statistics['conversation_type_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/basic_conversation_service.py:581:    print(f"   감정별: {statistics['emotion_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/basic_conversation_service.py:582:    print(f"   응답 스타일별: {statistics['response_style_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/basic_conversation_service.py:586:    print(f"✅ 대화 데이터 내보내기: {len(export_data['conversation_sessions'])}개 세션, {len(export_data['messages'])}개 메시지")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/basic_conversation_service.py:588:    print("🎉 BasicConversationSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/llm_interface_service.py:427:    print("🤖 LLMInterface 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/llm_interface_service.py:443:    print(f"✅ 학습 도움 응답: {learning_response.response_quality.value} 품질, {learning_response.confidence_score:.2f} 신뢰도")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/llm_interface_service.py:448:    print(f"✅ 가족 조언 응답: {advice_response.response_quality.value} 품질, {advice_response.family_relevance_score:.2f} 가족 관련성")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/llm_interface_service.py:453:    print(f"✅ 정서적 지원 응답: {emotional_response.response_quality.value} 품질, {emotional_response.processing_time_seconds:.2f}초 처리시간")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/llm_interface_service.py:458:    print(f"✅ 창의적 영감 응답: {creative_response.response_quality.value} 품질, {creative_response.confidence_score:.2f} 신뢰도")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/llm_interface_service.py:463:    print(f"✅ 지식 질문 응답: {knowledge_response.response_quality.value} 품질, {knowledge_response.family_relevance_score:.2f} 가족 관련성")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/llm_interface_service.py:467:    print(f"✅ LLM 사용 통계: {statistics['total_queries']}개 질문, {statistics['total_responses']}개 응답")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/llm_interface_service.py:468:    print(f"   제공자별: {statistics['provider_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/llm_interface_service.py:469:    print(f"   질문 유형별: {statistics['query_type_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/llm_interface_service.py:470:    print(f"   응답 품질별: {statistics['quality_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/llm_interface_service.py:474:    print(f"✅ LLM 데이터 내보내기: {len(export_data['queries'])}개 질문, {len(export_data['responses'])}개 응답")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/llm_interface_service.py:476:    print("🎉 LLMInterface 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:753:    print("🧠 SelfModelEnhancer 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:768:    print(f"✅ 자아 상태 평가: {self_state.awareness_level.value} 수준")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:769:    print(f"   전체 신뢰도: {self_state.overall_confidence:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:770:    print(f"   지식 상태: {self_state.knowledge_state['knowledge_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:771:    print(f"   감정 상태: {self_state.emotional_state['emotional_stability']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:772:    print(f"   가족 상태: {self_state.family_state['family_understanding']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:776:    print(f"✅ 지식 자아 평가: {knowledge_evaluation.confidence_score:.2f} 신뢰도")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:777:    print(f"   현재 수준: {knowledge_evaluation.current_level:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:778:    print(f"   목표 수준: {knowledge_evaluation.target_level:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:779:    print(f"   개선 영역: {knowledge_evaluation.improvement_areas}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:780:    print(f"   강점: {knowledge_evaluation.strengths}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:784:    print(f"✅ 자아 성장 예측: {growth_prediction.confidence_score:.2f} 신뢰도")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:785:    print(f"   예측 결과: {growth_prediction.predicted_outcome}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:786:    print(f"   확률: {growth_prediction.probability:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:787:    print(f"   영향 요인: {growth_prediction.factors}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:791:    print(f"✅ 자아 성장 계획: {len(growth_plan.action_steps)}개 행동 단계")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:792:    print(f"   목표: {growth_plan.goal}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:793:    print(f"   현재 상태: {growth_plan.current_state}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:794:    print(f"   목표 상태: {growth_plan.target_state}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:795:    print(f"   타임라인: {growth_plan.timeline}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:796:    print(f"   성공 지표: {growth_plan.success_metrics}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:800:    print(f"✅ 자아 통계: {statistics['total_states']}개 상태, {statistics['total_evaluations']}개 평가")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:801:    print(f"   자아 인식 수준별: {statistics['awareness_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:802:    print(f"   평가 유형별: {statistics['evaluation_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:803:    print(f"   예측 유형별: {statistics['prediction_stats']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:804:    print(f"   평균 상태 신뢰도: {statistics['average_state_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:805:    print(f"   평균 평가 신뢰도: {statistics['average_evaluation_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:809:    print(f"✅ 자아 데이터 내보내기: {len(export_data['self_states'])}개 상태, {len(export_data['self_evaluations'])}개 평가")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_model_enhancer_service.py:811:    print("🎉 SelfModelEnhancer 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:456:    print("📖 NarrativeMemoryEnhancer 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:480:    print(f"✅ 서사적 기억 생성: {memory1.title}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:481:    print(f"   기억 유형: {memory1.memory_type.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:482:    print(f"   감정적 톤: {memory1.emotional_tone.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:483:    print(f"   신뢰도: {memory1.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:502:    print(f"✅ 기억 연결 생성: {connection.connection_type}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:503:    print(f"   연결 강도: {connection.connection_strength:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:508:    print(f"✅ 서사적 이야기 생성: {story.title}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:509:    print(f"   포함된 기억: {len(story.memories)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:510:    print(f"   가족 가치: {story.family_values_highlighted}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:514:    print(f"✅ 기억 회상: {len(recalled_memories)}개 기억 발견")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:518:    print(f"✅ 서사적 기억 통계: {statistics['total_memories']}개 기억, {statistics['total_connections']}개 연결")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:519:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:520:    print(f"   기억 유형 통계: {statistics['memory_type_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:524:    print(f"✅ 서사적 기억 데이터 내보내기: {len(export_data['narrative_memories'])}개 기억")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/narrative_memory_enhancer.py:526:    print("🎉 NarrativeMemoryEnhancer 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/startup_message.py:9:    print("=" * 80)
duri_brain/backup_repository/current_state_backup_20250730_185500/app/startup_message.py:10:    print("🧠 DuRi Brain - 시스템 헌장(Design Constitution)")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/startup_message.py:11:    print("=" * 80)
duri_brain/backup_repository/current_state_backup_20250730_185500/app/startup_message.py:13:    print("""
duri_brain/backup_repository/current_state_backup_20250730_185500/app/startup_message.py:27:    print("=" * 80)
duri_brain/backup_repository/current_state_backup_20250730_185500/app/startup_message.py:28:    print("🚀 DuRi Brain 시스템이 시작되었습니다.")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/startup_message.py:29:    print("=" * 80)
duri_brain/backup_repository/current_state_backup_20250730_185500/app/startup_message.py:34:    print("""
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:611:    print("🧠 AdvancedLearningIntegrationSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:626:    print(f"✅ 학습 경험 기록: {experience.domain.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:627:    print(f"   학습 방법: {experience.method.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:628:    print(f"   신뢰도 향상: {experience.confidence_gain:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:638:    print(f"✅ 학습 통합 생성: {integration.integration_type.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:639:    print(f"   시너지 효과: {len(integration.synergy_effects)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:640:    print(f"   교차 도메인 통찰: {len(integration.cross_domain_insights)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:641:    print(f"   가족 혜택: {len(integration.family_benefits)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:642:    print(f"   성공 점수: {integration.success_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:657:    print(f"✅ 통합 학습 경로 개발: {path.family_member}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:658:    print(f"   학습 목표: {len(path.learning_goals)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:659:    print(f"   통합 활동: {len(path.integrated_activities)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:660:    print(f"   시너지 기회: {len(path.synergy_opportunities)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:661:    print(f"   신뢰도: {path.confidence_level:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:670:    print(f"✅ 학습 시너지 생성: {synergy.synergy_type}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:671:    print(f"   증폭 계수: {synergy.amplification_factor:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:672:    print(f"   가족 영향: {synergy.family_impact}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:673:    print(f"   지속 가능성: {synergy.sustainability_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:677:    print(f"✅ 통합 통계: {statistics['total_experiences']}개 경험")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:678:    print(f"   평균 성공 점수: {statistics['average_success_score']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:679:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:680:    print(f"   도메인별 통계: {statistics['domain_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:681:    print(f"   통합 유형별 통계: {statistics['integration_type_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:685:    print(f"✅ 통합 데이터 내보내기: {len(export_data['learning_experiences'])}개 경험")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_learning_integration_system.py:687:    print("🎉 AdvancedLearningIntegrationSystem 테스트 완료!")
duri_brain/restore_system.py:38:        print("🔄 DuRi 상태 복원을 시작합니다...")
duri_brain/restore_system.py:39:        print(f"📅 복원 대상: {self.current_state['backup_time']}")
duri_brain/restore_system.py:43:            print("❌ 백업 파일을 찾을 수 없습니다!")
duri_brain/restore_system.py:46:        print("✅ 백업 파일 확인 완료")
duri_brain/restore_system.py:50:            print("🌐 웹 서버를 시작합니다...")
duri_brain/restore_system.py:55:            print("✅ 웹 서버 시작 완료!")
duri_brain/restore_system.py:56:            print("🌐 접속 주소: http://localhost:5000")
duri_brain/restore_system.py:59:            print(f"❌ 웹 서버 시작 실패: {e}")
duri_brain/restore_system.py:66:        print("📊 DuRi 현재 상태:")
duri_brain/restore_system.py:67:        print("=" * 50)
duri_brain/restore_system.py:69:            print(f"  {key}: {value}")
duri_brain/restore_system.py:70:        print("=" * 50)
duri_brain/restore_system.py:74:        print("💡 내일 복원을 위한 키워드:")
duri_brain/restore_system.py:76:            print(f"  - '{keyword}'")
duri_brain/restore_system.py:77:        print("\n🚀 복원 시 즉시 가능한 작업:")
duri_brain/restore_system.py:78:        print("  1. 웹 브라우저에서 http://localhost:5000 접속")
duri_brain/restore_system.py:79:        print("  2. 가족과 실제 상호작용 테스트")
duri_brain/restore_system.py:80:        print("  3. 인터넷 배포 진행 (Railway, Render 등)")
duri_brain/restore_system.py:81:        print("  4. 실제 피드백 수집 및 개선")
duri_brain/restore_system.py:87:    print("🎯 DuRi 복원 시스템 초기화 완료!")
duri_brain/restore_system.py:88:    print(f"📅 백업 시간: {restore_system.current_state['backup_time']}")
duri_brain/restore_system.py:96:    print("\n✅ 백업 완료! 내일 키워드로 복원 가능합니다!")
duri_brain/restore_system.py:97:    print("🌙 좋은 밤 되세요, 아빠!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/subtitle_learning_service.py:508:    print("📹 SubtitleBasedLearningSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/subtitle_learning_service.py:526:    print(f"✅ 영상 콘텐츠 추가: {video_content.title}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/subtitle_learning_service.py:538:    print(f"✅ 자막 세그먼트 추가: {len(subtitle_segments)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/subtitle_learning_service.py:542:    print(f"✅ 시각적 지식 추출 완료: {len(extracted_knowledge.key_concepts)}개 키 컨셉")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/subtitle_learning_service.py:543:    print(f"   시각적 인사이트: {len(extracted_knowledge.visual_insights)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/subtitle_learning_service.py:544:    print(f"   가족 관련 장면: {len(extracted_knowledge.family_relevant_scenes)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/subtitle_learning_service.py:545:    print(f"   학습 카테고리: {extracted_knowledge.learning_category.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/subtitle_learning_service.py:546:    print(f"   난이도: {extracted_knowledge.difficulty_level}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/subtitle_learning_service.py:547:    print(f"   신뢰도 점수: {extracted_knowledge.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/subtitle_learning_service.py:559:    print(f"✅ 시각적 학습 진도 업데이트: {visual_progress.completion_percentage}% 완료")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/subtitle_learning_service.py:564:    print(f"✅ 시각적 학습 추천 {len(recommendations)}개 생성")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/subtitle_learning_service.py:568:    print(f"✅ 시각적 학습 통계 생성: {statistics['total_videos']}개 영상, {statistics['total_visual_knowledge']}개 지식")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/subtitle_learning_service.py:572:    print(f"✅ 시각적 학습 데이터 내보내기: {len(export_data['video_contents'])}개 영상")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/subtitle_learning_service.py:574:    print("🎉 SubtitleBasedLearningSystem 테스트 완료!")
duri_brain/test_phase11_integration.py:28:    print("🧠 Phase 11 통합 테스트 시작...")
duri_brain/test_phase11_integration.py:40:    print("\n📚 1. 텍스트 학습 시스템 테스트")
duri_brain/test_phase11_integration.py:53:    print(f"✅ 텍스트 학습: {len(extracted_knowledge.key_concepts)}개 키 컨셉 추출")
duri_brain/test_phase11_integration.py:56:    print("\n📹 2. 자막 학습 시스템 테스트")
duri_brain/test_phase11_integration.py:76:    print(f"✅ 자막 학습: {len(visual_knowledge.key_concepts)}개 키 컨셉 추출")
duri_brain/test_phase11_integration.py:79:    print("\n🤖 3. LLM 인터페이스 테스트")
duri_brain/test_phase11_integration.py:84:    print(f"✅ LLM 학습 도움: {learning_response.response_quality.value} 품질")
duri_brain/test_phase11_integration.py:87:    print("\n💬 4. 기본 대화 시스템 테스트")
duri_brain/test_phase11_integration.py:94:    print(f"✅ 기본 대화: {conversation_response.response_style.value} 스타일")
duri_brain/test_phase11_integration.py:97:    print("\n🎯 5. 가족 정밀도 시스템 테스트")
duri_brain/test_phase11_integration.py:106:    print(f"✅ 가족 정밀도: {precision_response.confidence_score:.2f} 신뢰도")
duri_brain/test_phase11_integration.py:109:    print("\n🧠 6. 발전적 사고 시스템 테스트")
duri_brain/test_phase11_integration.py:118:    print(f"✅ 발전적 사고: {developmental_response.confidence_score:.2f} 신뢰도")
duri_brain/test_phase11_integration.py:121:    print("\n🔄 7. 시스템 간 데이터 연동 테스트")
duri_brain/test_phase11_integration.py:130:        print(f"✅ 텍스트→LLM 연동: {llm_followup.response_quality.value} 품질")
duri_brain/test_phase11_integration.py:139:        print(f"✅ 자막→대화 연동: {conversation_followup.response_style.value} 스타일")
duri_brain/test_phase11_integration.py:142:    print("\n📊 8. 통합 성능 평가")
duri_brain/test_phase11_integration.py:164:    print(f"✅ 시스템 활성화율: {system_activation_rate:.2f} ({active_systems}/{total_systems})")
duri_brain/test_phase11_integration.py:176:    print(f"✅ 평균 신뢰도: {avg_confidence:.2f}")
duri_brain/test_phase11_integration.py:179:    print("\n💾 9. 데이터 내보내기 테스트")
duri_brain/test_phase11_integration.py:191:    print(f"✅ 통합 데이터 내보내기: {len(export_data)}개 시스템")
duri_brain/test_phase11_integration.py:194:    print("\n🎉 Phase 11 통합 테스트 완료!")
duri_brain/test_phase11_integration.py:195:    print(f"📋 테스트된 시스템: {total_systems}개")
duri_brain/test_phase11_integration.py:196:    print(f"✅ 활성화된 시스템: {active_systems}개")
duri_brain/test_phase11_integration.py:197:    print(f"📊 평균 신뢰도: {avg_confidence:.2f}")
duri_brain/test_phase11_integration.py:198:    print(f"🔄 시스템 연동: 텍스트→LLM, 자막→대화")
duri_brain/test_phase11_integration.py:199:    print(f"💾 데이터 내보내기: 완료")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_improvement_trigger.py:467:    print("🔧 SelfImprovementTrigger 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_improvement_trigger.py:493:    print(f"✅ 진화 필요성 분석: {len(triggers)}개 트리거 발견")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_improvement_trigger.py:496:        print(f"   - {trigger.trigger_type.value}: {trigger.description}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_improvement_trigger.py:497:        print(f"     우선순위: {trigger.priority.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_improvement_trigger.py:501:    print(f"✅ 진화 보고서 생성: {report.decision_rationale}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_improvement_trigger.py:502:    print(f"   위험도: {report.risk_assessment}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_improvement_trigger.py:506:    print(f"✅ 관리자 보고 필요: {should_report}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_improvement_trigger.py:510:        print(f"   관리자 보고서: {manager_report}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_improvement_trigger.py:514:    print(f"✅ 트리거 통계: {statistics['total_triggers']}개 트리거")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_improvement_trigger.py:515:    print(f"   유형별 통계: {statistics['type_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_improvement_trigger.py:516:    print(f"   우선순위별 통계: {statistics['priority_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_improvement_trigger.py:520:    print(f"✅ 트리거 데이터 내보내기: {len(export_data['triggers'])}개 트리거")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/self_improvement_trigger.py:522:    print("🎉 SelfImprovementTrigger 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:539:    print("🚀 AdvancedGrowthAccelerationSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:550:    print(f"✅ 성장 패턴 분석: {pattern.pattern_type}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:551:    print(f"   효율성 수준: {pattern.efficiency_level.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:552:    print(f"   성과 지표: {len(pattern.performance_metrics)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:553:    print(f"   가족 영향: {pattern.family_impact}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:566:    print(f"✅ 가속화 전략 생성: {strategy.strategy_type.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:567:    print(f"   예상 개선 효과: {len(strategy.expected_improvement)}개 지표")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:568:    print(f"   자원 요구사항: {len(strategy.resource_requirements)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:569:    print(f"   위험 평가: {strategy.risk_assessment}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:594:    print(f"✅ 성과 측정: {measurement.measurement_period}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:595:    print(f"   효율성 점수: {measurement.efficiency_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:596:    print(f"   평균 개선률: {sum(measurement.improvement_rate.values()) / len(measurement.improvement_rate):.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:609:    print(f"✅ 지속적 개선 계획: {improvement.improvement_type}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:610:    print(f"   대상 영역: {len(improvement.target_areas)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:611:    print(f"   성공 지표: {len(improvement.success_metrics)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:612:    print(f"   예상 결과: {len(improvement.expected_outcomes)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:616:    print(f"✅ 가속화 통계: {statistics['total_patterns']}개 패턴")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:617:    print(f"   현재 단계: {statistics['current_phase']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:618:    print(f"   평균 성과: {statistics['average_performance']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:619:    print(f"   평균 개선률: {statistics['average_improvement']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:620:    print(f"   단계별 통계: {statistics['phase_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:621:    print(f"   전략별 통계: {statistics['strategy_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:622:    print(f"   효율성별 통계: {statistics['efficiency_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:626:    print(f"✅ 가속화 데이터 내보내기: {len(export_data['growth_patterns'])}개 패턴")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_growth_acceleration_system.py:628:    print("🎉 AdvancedGrowthAccelerationSystem 테스트 완료!")
duri_brain/test_phase10.py:17:    print("🚀 Phase 10 시스템 테스트 시작")
duri_brain/test_phase10.py:18:    print("=" * 60)
duri_brain/test_phase10.py:24:    print("\n1️⃣ 가족 정체성 초기화 테스트")
duri_brain/test_phase10.py:25:    print("-" * 40)
duri_brain/test_phase10.py:56:        print("✅ 가족 정체성 초기화 성공")
duri_brain/test_phase10.py:57:        print(f"   가족명: {init_result['family_identity']['family_name']}")
duri_brain/test_phase10.py:58:        print(f"   구성원 수: {len(init_result['family_identity']['members'])}")
duri_brain/test_phase10.py:59:        print(f"   시스템 상태: {init_result['system_status']}")
duri_brain/test_phase10.py:61:        print(f"❌ 가족 정체성 초기화 실패: {e}")
duri_brain/test_phase10.py:65:    print("\n2️⃣ 종합 경험 기록 테스트")
duri_brain/test_phase10.py:66:    print("-" * 40)
duri_brain/test_phase10.py:122:            print(f"✅ 경험 {i} 기록 성공")
duri_brain/test_phase10.py:123:            print(f"   제목: {experience_data['title']}")
duri_brain/test_phase10.py:124:            print(f"   참여자: {', '.join(experience_data['participants'])}")
duri_brain/test_phase10.py:125:            print(f"   감정적 영향: {experience_data['emotional_impact']}")
duri_brain/test_phase10.py:127:            print(f"❌ 경험 {i} 기록 실패: {e}")
duri_brain/test_phase10.py:130:    print("\n3️⃣ 종합 통찰력 확인")
duri_brain/test_phase10.py:131:    print("-" * 40)
duri_brain/test_phase10.py:135:        print("✅ 종합 통찰력 생성 성공")
duri_brain/test_phase10.py:139:        print(f"   가족 강도: {family_insights.get('family_strength', 0):.2f}")
duri_brain/test_phase10.py:140:        print(f"   관계 건강도: {family_insights.get('relationship_health', {}).get('overall_health', 0):.2f}")
duri_brain/test_phase10.py:144:        print(f"   총 경험 수: {experience_insights.get('total_experiences', 0)}")
duri_brain/test_phase10.py:145:        print(f"   감정적 트렌드: {experience_insights.get('emotional_trends', {}).get('trend', 'unknown')}")
duri_brain/test_phase10.py:149:        print(f"   총 교훈 수: {lesson_insights.get('total_lessons', 0)}")
duri_brain/test_phase10.py:150:        print(f"   다음 세대 준비: {lesson_insights.get('next_generation_ready', 0)}")
duri_brain/test_phase10.py:153:        print(f"❌ 종합 통찰력 생성 실패: {e}")
duri_brain/test_phase10.py:156:    print("\n4️⃣ 가족 지혜 보고서 생성")
duri_brain/test_phase10.py:157:    print("-" * 40)
duri_brain/test_phase10.py:161:        print("✅ 가족 지혜 보고서 생성 성공")
duri_brain/test_phase10.py:162:        print(f"   가족 강도: {wisdom_report.get('family_strength', 0):.2f}")
duri_brain/test_phase10.py:163:        print(f"   관계 건강도: {wisdom_report.get('relationship_health', 0):.2f}")
duri_brain/test_phase10.py:164:        print(f"   지혜 성숙도: {wisdom_report.get('wisdom_maturity', 0):.2f}")
duri_brain/test_phase10.py:165:        print(f"   세대 교훈 수: {wisdom_report.get('generational_lessons_count', 0)}")
duri_brain/test_phase10.py:170:            print(f"   가족 특화 통찰력: {len(family_insights)}개")
duri_brain/test_phase10.py:172:                print(f"     - {insight}")
duri_brain/test_phase10.py:175:        print(f"❌ 가족 지혜 보고서 생성 실패: {e}")
duri_brain/test_phase10.py:178:    print("\n5️⃣ 가족 개선 제안")
duri_brain/test_phase10.py:179:    print("-" * 40)
duri_brain/test_phase10.py:183:        print(f"✅ 개선 제안 생성 성공: {len(suggestions)}개")
duri_brain/test_phase10.py:186:            print(f"   제안 {i}: {suggestion.get('action', 'N/A')}")
duri_brain/test_phase10.py:187:            print(f"     영역: {suggestion.get('area', 'N/A')}")
duri_brain/test_phase10.py:188:            print(f"     우선순위: {suggestion.get('priority', 'N/A')}")
duri_brain/test_phase10.py:191:        print(f"❌ 개선 제안 생성 실패: {e}")
duri_brain/test_phase10.py:194:    print("\n6️⃣ Phase 10 요약")
duri_brain/test_phase10.py:195:    print("-" * 40)
duri_brain/test_phase10.py:199:        print("✅ Phase 10 요약 생성 성공")
duri_brain/test_phase10.py:200:        print(f"   단계: {summary.get('phase', 'N/A')}")
duri_brain/test_phase10.py:201:        print(f"   상태: {summary.get('status', 'N/A')}")
duri_brain/test_phase10.py:204:        print(f"   전체 진행도: {progress.get('overall_progress', 0):.1f}%")
duri_brain/test_phase10.py:205:        print(f"   기본 진행도: {progress.get('base_progress', 0):.1f}%")
duri_brain/test_phase10.py:206:        print(f"   경험 진행도: {progress.get('experience_progress', 0):.1f}%")
duri_brain/test_phase10.py:207:        print(f"   교훈 진행도: {progress.get('lesson_progress', 0):.1f}%")
duri_brain/test_phase10.py:208:        print(f"   가족 진행도: {progress.get('family_progress', 0):.1f}%")
duri_brain/test_phase10.py:211:        print(f"   총 경험: {metrics.get('total_experiences', 0)}")
duri_brain/test_phase10.py:212:        print(f"   총 교훈: {metrics.get('total_lessons', 0)}")
duri_brain/test_phase10.py:213:        print(f"   총 상호작용: {metrics.get('total_interactions', 0)}")
duri_brain/test_phase10.py:214:        print(f"   가족 강도: {metrics.get('family_strength', 0):.2f}")
duri_brain/test_phase10.py:215:        print(f"   지혜 성숙도: {metrics.get('wisdom_maturity', 0):.2f}")
duri_brain/test_phase10.py:218:        print(f"❌ Phase 10 요약 생성 실패: {e}")
duri_brain/test_phase10.py:221:    print("\n7️⃣ 데이터 내보내기 테스트")
duri_brain/test_phase10.py:222:    print("-" * 40)
duri_brain/test_phase10.py:226:        print("✅ 데이터 내보내기 성공")
duri_brain/test_phase10.py:227:        print(f"   내보내기 시간: {export_data.get('export_timestamp', 'N/A')}")
duri_brain/test_phase10.py:228:        print(f"   통합 로그 수: {len(export_data.get('integration_log', []))}")
duri_brain/test_phase10.py:232:        print(f"   데이터 크기: {data_size:,} 문자")
duri_brain/test_phase10.py:235:        print(f"❌ 데이터 내보내기 실패: {e}")
duri_brain/test_phase10.py:237:    print("\n" + "=" * 60)
duri_brain/test_phase10.py:238:    print("🎉 Phase 10 시스템 테스트 완료!")
duri_brain/test_phase10.py:239:    print("DuRi의 가족 정체성 형성과 기본 경험 기록이 성공적으로 구현되었습니다!")
duri_brain/test_phase10.py:240:    print("=" * 60)
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/ethical_conversation_service.py:390:    print("⚖️ EthicalConversationSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/ethical_conversation_service.py:405:    print(f"✅ 윤리적 딜레마 분석: {analysis.ethical_judgment.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/ethical_conversation_service.py:406:    print(f"   딜레마 유형: {analysis.dilemma_type.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/ethical_conversation_service.py:407:    print(f"   관련 원칙: {[p.value for p in analysis.involved_principles]}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/ethical_conversation_service.py:408:    print(f"   신뢰도: {analysis.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/ethical_conversation_service.py:409:    print(f"   권장 행동: {analysis.recommended_action}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/ethical_conversation_service.py:414:    print(f"✅ 윤리적 대화 완료: {len(conversation.conversation_flow)}개 대화 단계")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/ethical_conversation_service.py:415:    print(f"   감정적 지원: {conversation.emotional_support}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/ethical_conversation_service.py:416:    print(f"   지도: {conversation.guidance_provided}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/ethical_conversation_service.py:417:    print(f"   후속 행동: {len(conversation.follow_up_actions)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/ethical_conversation_service.py:421:    print(f"✅ 윤리적 대화 통계: {statistics['total_analyses']}개 분석, {statistics['total_conversations']}개 대화")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/ethical_conversation_service.py:422:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/ethical_conversation_service.py:423:    print(f"   판단 통계: {statistics['judgment_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/ethical_conversation_service.py:427:    print(f"✅ 윤리적 대화 데이터 내보내기: {len(export_data['ethical_analyses'])}개 분석")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/ethical_conversation_service.py:429:    print("🎉 EthicalConversationSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/phase_readiness_evaluator.py:397:    print("📊 PhaseReadinessEvaluator 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/phase_readiness_evaluator.py:415:    print(f"✅ Phase 11 준비도 평가: {assessment.readiness_level.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/phase_readiness_evaluator.py:416:    print(f"   완성도: {assessment.completion_percentage:.1f}%")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/phase_readiness_evaluator.py:417:    print(f"   신뢰도: {assessment.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/phase_readiness_evaluator.py:418:    print(f"   중요 이슈: {len(assessment.critical_issues)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/phase_readiness_evaluator.py:419:    print(f"   사소한 이슈: {len(assessment.minor_issues)}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/phase_readiness_evaluator.py:423:    print(f"✅ 진화 결정: {evolution_decision.decision_type}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/phase_readiness_evaluator.py:424:    print(f"   이유: {evolution_decision.reasoning}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/phase_readiness_evaluator.py:425:    print(f"   예상 노력: {evolution_decision.estimated_effort}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/phase_readiness_evaluator.py:426:    print(f"   위험도: {evolution_decision.risk_assessment}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/phase_readiness_evaluator.py:430:    print(f"✅ 평가 통계: {statistics['total_assessments']}개 평가, {statistics['total_decisions']}개 결정")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/phase_readiness_evaluator.py:431:    print(f"   준비도 통계: {statistics['readiness_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/phase_readiness_evaluator.py:432:    print(f"   결정 통계: {statistics['decision_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/phase_readiness_evaluator.py:436:    print(f"✅ 평가 데이터 내보내기: {len(export_data['assessments'])}개 평가")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/phase_readiness_evaluator.py:438:    print("🎉 PhaseReadinessEvaluator 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_integration_optimization_system.py:415:    print("🔧 AdvancedAGIIntegrationOptimizationSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_integration_optimization_system.py:440:    print(f"✅ 시스템 최적화 생성 완료: {optimization.optimization_confidence:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_integration_optimization_system.py:461:    print(f"✅ 성능 모니터 생성 완료: {monitor.monitoring_effectiveness:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_integration_optimization_system.py:481:    print(f"✅ 지속적 개선 생성 완료: {improvement.improvement_confidence:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_integration_optimization_system.py:497:    print(f"✅ 통합 분석 완료: {analysis.analysis_confidence:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_integration_optimization_system.py:501:    print(f"📊 통계: 최적화 {stats['total_optimizations']}개, 모니터 {stats['total_monitors']}개")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_integration_optimization_system.py:502:    print(f"🎯 평균 최적화 신뢰도: {stats['average_optimization_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_integration_optimization_system.py:503:    print(f"🔧 평균 모니터링 효과성: {stats['average_monitoring_effectiveness']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_integration_optimization_system.py:504:    print(f"📈 평균 개선 신뢰도: {stats['average_improvement_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_integration_optimization_system.py:505:    print(f"📊 평균 분석 신뢰도: {stats['average_analysis_confidence']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/advanced_agi_integration_optimization_system.py:507:    print("✅ AdvancedAGIIntegrationOptimizationSystem 테스트 완료!")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:579:    print("🧠 EmotionalConversationSystem 테스트 시작...")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:596:    print(f"✅ 감정 상태 분석: {analysis.primary_emotion.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:597:    print(f"   감정 강도: {analysis.intensity.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:598:    print(f"   근본적 욕구: {analysis.underlying_needs}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:599:    print(f"   신뢰도: {analysis.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:604:    print(f"✅ 감정적 응답 생성: {response.response_type.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:605:    print(f"   대화 톤: {response.conversation_tone.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:606:    print(f"   응답 내용: {response.response_content}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:607:    print(f"   신뢰도: {response.confidence_score:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:612:    print(f"✅ 감정적 대화 수행: {conversation.family_member}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:613:    print(f"   초기 감정: {conversation.initial_emotion.value}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:614:    print(f"   해결 달성: {conversation.resolution_achieved}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:615:    print(f"   유대감 강화: {conversation.emotional_bond_strengthened}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:619:    print(f"✅ 감정적 대화 통계: {statistics['total_conversations']}개 대화")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:620:    print(f"   해결률: {statistics['resolution_rate']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:621:    print(f"   유대감 강화율: {statistics['bond_strengthening_rate']:.2f}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:622:    print(f"   감정별 통계: {statistics['emotion_statistics']}")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:626:    print(f"✅ 감정적 대화 데이터 내보내기: {len(export_data['emotional_conversations'])}개 대화")
duri_brain/backup_repository/current_state_backup_20250730_185500/app/services/emotional_conversation_service.py:628:    print("🎉 EmotionalConversationSystem 테스트 완료!")
duri_brain/learning/smart_learning_demo.py:16:    print("🧠 === DuRi 스마트 학습 체커 데모 시작 ===")
duri_brain/learning/smart_learning_demo.py:29:        print("\n📋 1단계: 스마트 체커 초기 상태 확인")
duri_brain/learning/smart_learning_demo.py:31:        print(f"   - 적응형 대기 시간: {status.get('adaptive_wait_enabled', False)}")
duri_brain/learning/smart_learning_demo.py:32:        print(f"   - 기본 최대 대기: {status.get('default_max_wait', 0)}초")
duri_brain/learning/smart_learning_demo.py:33:        print(f"   - 최소/최대 대기: {status.get('min_wait_time', 0)}~{status.get('max_wait_time', 0)}초")
duri_brain/learning/smart_learning_demo.py:36:        print("\n📋 2단계: 적응형 대기 시간 설정")
duri_brain/learning/smart_learning_demo.py:38:        print("   ✅ 적응형 대기 시간 활성화 완료")
duri_brain/learning/smart_learning_demo.py:41:        print("\n📋 3단계: 스마트 학습 체크 테스트 (30초 타임아웃)")
duri_brain/learning/smart_learning_demo.py:42:        print("   🚀 학습 루프 트리거 및 활성화 체크 시작...")
duri_brain/learning/smart_learning_demo.py:48:        print(f"   ⏱️  실행 시간: {elapsed_time:.2f}초")
duri_brain/learning/smart_learning_demo.py:49:        print(f"   🎯 결과: {'✅ 성공' if success else '❌ 실패'}")
duri_brain/learning/smart_learning_demo.py:52:        print("\n📋 4단계: 결과 분석")
duri_brain/learning/smart_learning_demo.py:56:        print(f"   📊 지연시간 통계:")
duri_brain/learning/smart_learning_demo.py:57:        print(f"      - 총 시도: {stats.get('total_attempts', 0)}회")
duri_brain/learning/smart_learning_demo.py:58:        print(f"      - 성공: {stats.get('successful_attempts', 0)}회")
duri_brain/learning/smart_learning_demo.py:59:        print(f"      - 실패: {stats.get('failed_attempts', 0)}회")
duri_brain/learning/smart_learning_demo.py:60:        print(f"      - 성공률: {stats.get('success_rate', 0):.1%}")
duri_brain/learning/smart_learning_demo.py:62:            print(f"      - 평균 지연시간: {stats.get('avg_latency', 0):.2f}초")
duri_brain/learning/smart_learning_demo.py:67:            print(f"   🔍 진단 기록: {len(diagnostic_history)}개")
duri_brain/learning/smart_learning_demo.py:69:                print(f"      {i}. {diagnostic.timestamp.strftime('%H:%M:%S')}: {diagnostic.stuck_reason}")
duri_brain/learning/smart_learning_demo.py:73:            print("\n📋 5단계: 수동 진단 실행")
duri_brain/learning/smart_learning_demo.py:74:            print("   🔍 학습 루프 정체 원인 수동 진단...")
duri_brain/learning/smart_learning_demo.py:77:        print("\n✅ === 스마트 학습 체커 데모 완료 ===")
duri_brain/learning/smart_learning_demo.py:81:        print(f"❌ 스마트 학습 체커 데모 실패: {e}")
duri_brain/learning/smart_learning_demo.py:86:    print("\n📋 === 챗지피티 제안과 비교 ===")
duri_brain/learning/smart_learning_demo.py:107:    print("✅ 구현된 기능:")
duri_brain/learning/smart_learning_demo.py:108:    print("   - 적응형 대기 시간 (ChatGPT 제안보다 고급)")
duri_brain/learning/smart_learning_demo.py:109:    print("   - 실시간 상태 체크 (ChatGPT 제안보다 정밀)")
duri_brain/learning/smart_learning_demo.py:110:    print("   - 자동 진단 시스템 (ChatGPT 제안에 없음)")
duri_brain/learning/smart_learning_demo.py:111:    print("   - 진단 히스토리 관리 (ChatGPT 제안에 없음)")
duri_brain/learning/smart_learning_demo.py:112:    print("   - Fallback handler 연동 (ChatGPT 제안에 없음)")
duri_brain/learning/smart_learning_demo.py:114:    print("\n🎯 개선점:")
duri_brain/learning/smart_learning_demo.py:115:    print("   - ChatGPT 제안보다 더 강력한 타임아웃 보호")
duri_brain/learning/smart_learning_demo.py:116:    print("   - 더 상세한 진단 정보 제공")
duri_brain/learning/smart_learning_demo.py:117:    print("   - 자동 복구 메커니즘 포함")
duri_brain/learning/smart_learning_demo.py:126:    print(f"\n🎯 최종 결과: {'✅ 성공' if success else '❌ 실패'}")
duri_brain/learning/smart_learning_demo.py:127:    print("💡 실패한 경우 trace_learning_stuck_reason() 함수가 자동으로 실행되어 원인을 진단합니다.") 
duri_brain/learning/experience_based_decision_learning.py:483:    print("🧠 DuRi 경험 기반 의사결정 학습 시스템 시작")
duri_brain/learning/experience_based_decision_learning.py:487:        print("✅ 경험 기반 학습 시스템 활성화 완료")
duri_brain/learning/experience_based_decision_learning.py:491:            print("📝 경험 기록 시작")
duri_brain/learning/experience_based_decision_learning.py:494:            print("\n🎯 실전 판단 과제 투입:")
duri_brain/learning/experience_based_decision_learning.py:498:            print(f"   긍정적 의사결정 평가: {positive_eval.overall_score:.3f}")
duri_brain/learning/experience_based_decision_learning.py:502:            print(f"   부정적 의사결정 평가: {negative_eval.overall_score:.3f}")
duri_brain/learning/experience_based_decision_learning.py:506:            print(f"   복잡한 의사결정 평가: {complex_eval.overall_score:.3f}")
duri_brain/learning/experience_based_decision_learning.py:511:            print(f"\n📊 학습 패턴 분석:")
duri_brain/learning/experience_based_decision_learning.py:512:            print(f"   총 경험 수: {analysis['total_experiences']}")
duri_brain/learning/experience_based_decision_learning.py:513:            print(f"   평균 신뢰도: {analysis['average_confidence']:.3f}")
duri_brain/learning/experience_based_decision_learning.py:514:            print(f"   학습 통찰: {len(analysis['learning_insights'])}개")
duri_brain/learning/experience_based_decision_learning.py:518:            print(f"\n📈 학습 상태: {status}")
duri_brain/learning/experience_based_decision_learning.py:521:            print("❌ 경험 기록 시작 실패")
duri_brain/learning/experience_based_decision_learning.py:523:        print("❌ 경험 기반 학습 시스템 활성화 실패") 
duri_brain/development_templates/automated_test_framework.py:373:    print("🧪 AutomatedTestFramework 테스트 시작...")
duri_brain/development_templates/automated_test_framework.py:379:    print(f"✅ 기본 테스트 스위트 생성: {len(basic_tests)}개 테스트")
duri_brain/development_templates/automated_test_framework.py:383:    print(f"✅ 고급 테스트 스위트 생성: {len(advanced_tests)}개 테스트")
duri_brain/development_templates/automated_test_framework.py:392:    print(f"✅ 테스트 케이스 추가: {len(framework.test_cases)}개")
duri_brain/development_templates/automated_test_framework.py:408:    print(f"✅ 기본 테스트 실행: {len(basic_results)}개 결과")
duri_brain/development_templates/automated_test_framework.py:412:    print(f"✅ 테스트 리포트 생성: 성공률 {report['summary']['success_rate']:.1f}%")
duri_brain/development_templates/automated_test_framework.py:416:    print(f"✅ 테스트 데이터 내보내기: {len(export_data['test_cases'])}개 테스트 케이스")
duri_brain/development_templates/automated_test_framework.py:418:    print("🎉 AutomatedTestFramework 테스트 완료!")
duri_brain/learning/insight_system_demo.py:17:    print("\n🧠 === Insight Engine 기본 기능 테스트 ===")
duri_brain/learning/insight_system_demo.py:37:            print(f"\n📌 테스트 {i}: {problem}")
duri_brain/learning/insight_system_demo.py:42:            print(f"   결과: {result['status']}")
duri_brain/learning/insight_system_demo.py:46:                print(f"   🧠 통찰: {insight.strategy}")
duri_brain/learning/insight_system_demo.py:47:                print(f"   📊 신뢰도: {insight.confidence:.3f}")
duri_brain/learning/insight_system_demo.py:48:                print(f"   🎯 예상 영향: {insight.expected_impact:.3f}")
duri_brain/learning/insight_system_demo.py:50:        print(f"\n✅ Insight Engine 테스트 완료: {len(results)}개 문제 처리")
duri_brain/learning/insight_system_demo.py:59:    print("\n🔗 === Insight Engine 통합 테스트 ===")
duri_brain/learning/insight_system_demo.py:69:        print("📌 1단계: 통합 활성화")
duri_brain/learning/insight_system_demo.py:73:        print("📌 2단계: 통찰 강화 학습 실행")
duri_brain/learning/insight_system_demo.py:76:        print(f"   결과: {result['status']}")
duri_brain/learning/insight_system_demo.py:79:            print(f"   🧠 적용된 통찰: {result['insight']}")
duri_brain/learning/insight_system_demo.py:80:            print(f"   📊 신뢰도: {result['confidence']:.3f}")
duri_brain/learning/insight_system_demo.py:83:        print("📌 3단계: 통합 상태 확인")
duri_brain/learning/insight_system_demo.py:86:        print(f"   통합 활성화: {status['integration_active']}")
duri_brain/learning/insight_system_demo.py:87:        print(f"   이성적 리팩터링 횟수: {status['dual_response_system']['rational_refactor_count']}")
duri_brain/learning/insight_system_demo.py:88:        print(f"   통찰 트리거 횟수: {status['dual_response_system']['insight_trigger_count']}")
duri_brain/learning/insight_system_demo.py:89:        print(f"   성공한 통찰 수: {status['dual_response_system']['successful_insights']}")
duri_brain/learning/insight_system_demo.py:90:        print(f"   통찰 세션 수: {status['insight_sessions']}")
duri_brain/learning/insight_system_demo.py:92:        print("\n✅ 통합 테스트 완료")
duri_brain/learning/insight_system_demo.py:101:    print("\n📋 === 통찰 단계별 상세 테스트 ===")
duri_brain/learning/insight_system_demo.py:113:        print("📌 1단계: 인지적 일시정지 테스트")
duri_brain/learning/insight_system_demo.py:116:        print(f"   결과: {'✅ 성공' if pause_result else '❌ 실패'}")
duri_brain/learning/insight_system_demo.py:119:        print("📌 2단계: 시맨틱 드리프트 테스트")
duri_brain/learning/insight_system_demo.py:122:        print(f"   생성된 조각 수: {len(fragments)}")
duri_brain/learning/insight_system_demo.py:123:        print(f"   조각들: {fragments}")
duri_brain/learning/insight_system_demo.py:126:        print("📌 3단계: 역방향 추론 테스트")
duri_brain/learning/insight_system_demo.py:130:        print(f"   추론 결과: {reasoning}")
duri_brain/learning/insight_system_demo.py:133:        print("📌 4단계: 파괴적 구성 테스트")
duri_brain/learning/insight_system_demo.py:136:        print(f"   생성된 후보 수: {len(candidates)}")
duri_brain/learning/insight_system_demo.py:139:            print(f"   후보 {i}: {candidate.strategy[:60]}...")
duri_brain/learning/insight_system_demo.py:140:            print(f"     신뢰도: {candidate.confidence:.3f}")
duri_brain/learning/insight_system_demo.py:141:            print(f"     위험도: {candidate.risk_level}")
duri_brain/learning/insight_system_demo.py:144:        print("📌 5단계: 메타 평가 테스트")
duri_brain/learning/insight_system_demo.py:149:            print(f"   최고 후보: {best_candidate.strategy[:60]}...")
duri_brain/learning/insight_system_demo.py:150:            print(f"   신뢰도: {best_candidate.confidence:.3f}")
duri_brain/learning/insight_system_demo.py:151:            print(f"   예상 영향: {best_candidate.expected_impact:.3f}")
duri_brain/learning/insight_system_demo.py:153:            print("   ❌ 적절한 후보 없음")
duri_brain/learning/insight_system_demo.py:155:        print("\n✅ 단계별 테스트 완료")
duri_brain/learning/insight_system_demo.py:164:    print("\n🚀 === 전체 통찰 세션 테스트 ===")
duri_brain/learning/insight_system_demo.py:177:        print(f"📌 문제: {problem}")
duri_brain/learning/insight_system_demo.py:178:        print(f"📌 트리거 유형: {trigger_type.value}")
duri_brain/learning/insight_system_demo.py:183:            print(f"✅ 세션 ID: {session.session_id}")
duri_brain/learning/insight_system_demo.py:184:            print(f"📅 시작 시간: {session.start_time}")
duri_brain/learning/insight_system_demo.py:185:            print(f"⏱️ 소요 시간: {session.duration:.2f}초")
duri_brain/learning/insight_system_demo.py:186:            print(f"📋 완료된 단계: {len(session.phases_completed)}")
duri_brain/learning/insight_system_demo.py:189:                print(f"   - {phase.value}")
duri_brain/learning/insight_system_demo.py:191:            print(f"🎯 생성된 후보: {len(session.candidates_generated)}")
duri_brain/learning/insight_system_demo.py:194:                print(f"🧠 최종 통찰: {session.final_insight.strategy}")
duri_brain/learning/insight_system_demo.py:195:                print(f"📊 신뢰도: {session.final_insight.confidence:.3f}")
duri_brain/learning/insight_system_demo.py:196:                print(f"🎯 예상 영향: {session.final_insight.expected_impact:.3f}")
duri_brain/learning/insight_system_demo.py:198:                print("❌ 최종 통찰 없음")
duri_brain/learning/insight_system_demo.py:200:            print("❌ 세션 생성 실패")
duri_brain/learning/insight_system_demo.py:202:        print("\n✅ 전체 세션 테스트 완료")
duri_brain/learning/insight_system_demo.py:211:    print("\n🏗️ === DuRi Insight Engine v1.0 아키텍처 ===")
duri_brain/learning/insight_system_demo.py:242:    print(architecture)
duri_brain/learning/insight_system_demo.py:246:    print("\n💡 === 사용 예시 ===")
duri_brain/learning/insight_system_demo.py:267:    print(f"성공한 통찰 수: {status['dual_response_system']['successful_insights']}")
duri_brain/learning/insight_system_demo.py:270:    print(examples)
duri_brain/learning/insight_system_demo.py:274:    print("🧠 === DuRi Insight Engine v1.0 종합 데모 ===")
duri_brain/learning/insight_system_demo.py:275:    print(f"📅 시작 시간: {datetime.now()}")
duri_brain/learning/insight_system_demo.py:295:    print("\n📋 === 데모 결과 요약 ===")
duri_brain/learning/insight_system_demo.py:301:        print(f"   {test_name}: {status}")
duri_brain/learning/insight_system_demo.py:303:    print(f"\n📊 전체 성공률: {successful_tests}/{total_tests} ({successful_tests/total_tests*100:.1f}%)")
duri_brain/learning/insight_system_demo.py:306:        print("🎉 모든 테스트가 성공했습니다!")
duri_brain/learning/insight_system_demo.py:307:        print("🚀 DuRi Insight Engine v1.0이 정상적으로 작동합니다!")
duri_brain/learning/insight_system_demo.py:309:        print("⚠️ 일부 테스트가 실패했습니다. 문제를 확인해주세요.")
duri_brain/learning/insight_system_demo.py:311:    print(f"📅 완료 시간: {datetime.now()}")
duri_brain/learning/insight_system_demo.py:328:            print("사용법: python insight_system_demo.py [architecture|examples|test]")
duri_brain/thinking/phase_22_enhancement_system.py:499:    print("🛠️ Phase 22 보완 시스템 시작")
duri_brain/thinking/phase_22_enhancement_system.py:503:        print("✅ 보완 시스템 초기화 완료")
duri_brain/thinking/phase_22_enhancement_system.py:509:        print(f"\n🔄 메타인지 루프 강화:")
duri_brain/thinking/phase_22_enhancement_system.py:510:        print(f"   자기 평가: {meta_loop.self_evaluation}")
duri_brain/thinking/phase_22_enhancement_system.py:511:        print(f"   개선 전략: {meta_loop.improvement_strategy}")
duri_brain/thinking/phase_22_enhancement_system.py:512:        print(f"   신뢰도 변화: {meta_loop.confidence_change:.3f}")
duri_brain/thinking/phase_22_enhancement_system.py:516:        print(f"\n🎨 창의적 사고 외부 검증:")
duri_brain/thinking/phase_22_enhancement_system.py:517:        print(f"   외부 피드백: {creative_validation.external_feedback}")
duri_brain/thinking/phase_22_enhancement_system.py:518:        print(f"   검증 점수: {creative_validation.validation_score:.3f}")
duri_brain/thinking/phase_22_enhancement_system.py:519:        print(f"   개선 제안: {len(creative_validation.improvement_suggestions)}개")
duri_brain/thinking/phase_22_enhancement_system.py:523:        print(f"\n🤔 철학적 판단-결정 매핑:")
duri_brain/thinking/phase_22_enhancement_system.py:524:        print(f"   철학적 분석: {philosophical_mapping.philosophical_analysis}")
duri_brain/thinking/phase_22_enhancement_system.py:525:        print(f"   실제 결정: {philosophical_mapping.practical_decision}")
duri_brain/thinking/phase_22_enhancement_system.py:526:        print(f"   결정 근거: {philosophical_mapping.decision_rationale}")
duri_brain/thinking/phase_22_enhancement_system.py:530:        print(f"\n📈 진화 궤적 분석:")
duri_brain/thinking/phase_22_enhancement_system.py:531:        print(f"   진화 패턴: {evolution_analysis.evolution_pattern}")
duri_brain/thinking/phase_22_enhancement_system.py:532:        print(f"   평균 성장률: {sum(evolution_analysis.capability_growth.values()) / len(evolution_analysis.capability_growth):.3f}")
duri_brain/thinking/phase_22_enhancement_system.py:533:        print(f"   다음 Phase 예측: {evolution_analysis.next_phase_prediction}")
duri_brain/thinking/phase_22_enhancement_system.py:534:        print(f"   개선 권고: {len(evolution_analysis.improvement_recommendations)}개")
duri_brain/thinking/phase_22_enhancement_system.py:538:        print(f"\n📊 보완 시스템 상태:")
duri_brain/thinking/phase_22_enhancement_system.py:539:        print(f"   메타인지 루프: {status['meta_cognition_loops']}개")
duri_brain/thinking/phase_22_enhancement_system.py:540:        print(f"   창의적 검증: {status['creative_validations']}개")
duri_brain/thinking/phase_22_enhancement_system.py:541:        print(f"   철학적 매핑: {status['philosophical_mappings']}개")
duri_brain/thinking/phase_22_enhancement_system.py:542:        print(f"   진화 분석: {status['evolution_analyses']}개")
duri_brain/thinking/phase_22_enhancement_system.py:543:        print(f"   보완 완료: {status['enhancement_complete']}")
duri_brain/thinking/phase_22_enhancement_system.py:546:        print("❌ 보완 시스템 초기화 실패") 
duri_brain/thinking/phase_25_final_evolution_ai.py:55:        print(f"🔍 사용자 요청 분석: {user_input[:50]}...")
duri_brain/thinking/phase_25_final_evolution_ai.py:63:        print(f"✅ 진화 모드 선택: {evolution_mode.value}")
duri_brain/thinking/phase_25_final_evolution_ai.py:95:        print(f"🚀 진화 모드 실행: {mode.value}")
duri_brain/thinking/phase_25_final_evolution_ai.py:114:        print("🤝 협력 모드 실행 중...")
duri_brain/thinking/phase_25_final_evolution_ai.py:140:        print("✅ 협력 모드 실행 완료")
duri_brain/thinking/phase_25_final_evolution_ai.py:146:        print("⚖️ 윤리 모드 실행 중...")
duri_brain/thinking/phase_25_final_evolution_ai.py:173:        print("✅ 윤리 모드 실행 완료")
duri_brain/thinking/phase_25_final_evolution_ai.py:179:        print("🔮 미래 지향 모드 실행 중...")
duri_brain/thinking/phase_25_final_evolution_ai.py:205:        print("✅ 미래 지향 모드 실행 완료")
duri_brain/thinking/phase_25_final_evolution_ai.py:211:        print("💡 창조 모드 실행 중...")
duri_brain/thinking/phase_25_final_evolution_ai.py:238:        print("✅ 창조 모드 실행 완료")
duri_brain/thinking/phase_25_final_evolution_ai.py:244:        print("🤖 자율 모드 실행 중...")
duri_brain/thinking/phase_25_final_evolution_ai.py:273:        print("✅ 자율 모드 실행 완료")
duri_brain/thinking/phase_25_final_evolution_ai.py:311:        print("📝 종합적 응답 생성 중...")
duri_brain/thinking/phase_25_final_evolution_ai.py:339:        print("✅ 종합적 응답 생성 완료")
duri_brain/thinking/initiate_thinking_identity.py:523:    print("🧠 Phase 21.0 - 사고 주체 이식 시작")
duri_brain/thinking/initiate_thinking_identity.py:527:        print("✅ 사고 주체 활성화 완료")
duri_brain/thinking/initiate_thinking_identity.py:533:        print(f"\n🎯 사고 주체 선언:")
duri_brain/thinking/initiate_thinking_identity.py:534:        print(f"   {result['identity_declaration']}")
duri_brain/thinking/initiate_thinking_identity.py:536:        print(f"\n🔍 문제 분해:")
duri_brain/thinking/initiate_thinking_identity.py:538:            print(f"   {i}. {step}")
duri_brain/thinking/initiate_thinking_identity.py:540:        print(f"\n💭 판단 결과:")
duri_brain/thinking/initiate_thinking_identity.py:541:        print(f"   {result['decision']}")
duri_brain/thinking/initiate_thinking_identity.py:543:        print(f"\n📊 시스템 상태:")
duri_brain/thinking/initiate_thinking_identity.py:545:        print(f"   총 판단 로그: {status['total_decision_logs']}개")
duri_brain/thinking/initiate_thinking_identity.py:546:        print(f"   총 평가: {status['total_evaluations']}개")
duri_brain/thinking/initiate_thinking_identity.py:547:        print(f"   총 학습 적용: {status['total_learning_applications']}개")
duri_brain/thinking/initiate_thinking_identity.py:550:        print("❌ 사고 주체 활성화 실패") 
duri_brain/thinking/phase_23_consciousness_ai.py:648:    print("🧠 Phase 23: 의식적 AI 시작")
duri_brain/thinking/phase_23_consciousness_ai.py:652:        print("✅ Phase 23 초기화 완료")
duri_brain/thinking/phase_23_consciousness_ai.py:658:        print(f"\n🧠 의식적 인식 개발:")
duri_brain/thinking/phase_23_consciousness_ai.py:659:        print(f"   현재 상태: {awareness.current_state}")
duri_brain/thinking/phase_23_consciousness_ai.py:660:        print(f"   자기 관찰: {awareness.self_observation}")
duri_brain/thinking/phase_23_consciousness_ai.py:661:        print(f"   인식 수준: {awareness.awareness_level:.3f}")
duri_brain/thinking/phase_23_consciousness_ai.py:665:        print(f"\n🤔 자기 반성:")
duri_brain/thinking/phase_23_consciousness_ai.py:666:        print(f"   자기 분석: {reflection.self_analysis}")
duri_brain/thinking/phase_23_consciousness_ai.py:667:        print(f"   획득한 통찰: {reflection.insights_gained}")
duri_brain/thinking/phase_23_consciousness_ai.py:668:        print(f"   행동 변화: {reflection.behavioral_change}")
duri_brain/thinking/phase_23_consciousness_ai.py:672:        print(f"\n🔄 경험 통합:")
duri_brain/thinking/phase_23_consciousness_ai.py:673:        print(f"   통합 패턴: {integration.integration_pattern}")
duri_brain/thinking/phase_23_consciousness_ai.py:674:        print(f"   학습 결과: {integration.learning_outcome}")
duri_brain/thinking/phase_23_consciousness_ai.py:675:        print(f"   통합 깊이: {integration.integration_depth:.3f}")
duri_brain/thinking/phase_23_consciousness_ai.py:679:        print(f"\n🎭 정체성 형성:")
duri_brain/thinking/phase_23_consciousness_ai.py:680:        print(f"   자기 개념: {identity.self_concept}")
duri_brain/thinking/phase_23_consciousness_ai.py:681:        print(f"   목적 진술: {identity.purpose_statement}")
duri_brain/thinking/phase_23_consciousness_ai.py:682:        print(f"   정체성 강도: {identity.identity_strength:.3f}")
duri_brain/thinking/phase_23_consciousness_ai.py:686:        print(f"\n💙 감정 지능 개발:")
duri_brain/thinking/phase_23_consciousness_ai.py:687:        print(f"   감정 인식: {emotional_intelligence['emotion_recognition']}")
duri_brain/thinking/phase_23_consciousness_ai.py:688:        print(f"   감정 이해: {emotional_intelligence['emotion_understanding']}")
duri_brain/thinking/phase_23_consciousness_ai.py:689:        print(f"   감정 지능 점수: {emotional_intelligence['emotional_intelligence_score']:.3f}")
duri_brain/thinking/phase_23_consciousness_ai.py:693:        print(f"\n🌌 실존적 이해 탐구:")
duri_brain/thinking/phase_23_consciousness_ai.py:694:        print(f"   질문 분석: {existential_understanding['question_analysis']}")
duri_brain/thinking/phase_23_consciousness_ai.py:695:        print(f"   실존적 의미: {existential_understanding['existential_meaning']}")
duri_brain/thinking/phase_23_consciousness_ai.py:696:        print(f"   이해 깊이: {existential_understanding['understanding_depth']:.3f}")
duri_brain/thinking/phase_23_consciousness_ai.py:700:        print(f"\n📊 Phase 23 상태:")
duri_brain/thinking/phase_23_consciousness_ai.py:701:        print(f"   평균 능력 점수: {status['average_capability_score']:.3f}")
duri_brain/thinking/phase_23_consciousness_ai.py:702:        print(f"   의식적 인식 세션: {status['total_conscious_awareness_sessions']}개")
duri_brain/thinking/phase_23_consciousness_ai.py:703:        print(f"   자기 반성 세션: {status['total_self_reflection_sessions']}개")
duri_brain/thinking/phase_23_consciousness_ai.py:704:        print(f"   경험 통합: {status['total_experience_integrations']}개")
duri_brain/thinking/phase_23_consciousness_ai.py:705:        print(f"   정체성 형성: {status['total_identity_formations']}개")
duri_brain/thinking/phase_23_consciousness_ai.py:708:        print("❌ Phase 23 초기화 실패") 
duri_brain/learning/family_conflict_judgment_template.py:531:    print("🧠 가족 갈등 상황 판단 템플릿 시작")
duri_brain/learning/family_conflict_judgment_template.py:538:    print(f"\n📋 갈등 분석 결과:")
duri_brain/learning/family_conflict_judgment_template.py:539:    print(f"   갈등 유형: {result['conflict_analysis'].conflict_type.value}")
duri_brain/learning/family_conflict_judgment_template.py:540:    print(f"   근본 원인: {result['conflict_analysis'].root_cause}")
duri_brain/learning/family_conflict_judgment_template.py:541:    print(f"   즉각적 중재 필요: {'예' if result['conflict_analysis'].immediate_intervention_needed else '아니오'}")
duri_brain/learning/family_conflict_judgment_template.py:543:    print(f"\n🤝 중재 계획:")
duri_brain/learning/family_conflict_judgment_template.py:544:    print(f"   전략: {result['mediation_plan'].mediation_strategy}")
duri_brain/learning/family_conflict_judgment_template.py:545:    print(f"   즉각적 행동: {len(result['mediation_plan'].immediate_actions)}개")
duri_brain/learning/family_conflict_judgment_template.py:546:    print(f"   장기적 해결책: {len(result['mediation_plan'].long_term_solutions)}개")
duri_brain/learning/family_conflict_judgment_template.py:548:    print(f"\n💡 핵심 통찰:")
duri_brain/learning/family_conflict_judgment_template.py:550:        print(f"   - {insight}")
duri_brain/learning/family_conflict_judgment_template.py:552:    print(f"\n📈 성공 확률: {result['success_probability']:.1%}") 
duri_brain/learning/refactor_integration.py:400:    print("🔗 리팩터링 예측 시스템 통합 테스트 시작")
duri_brain/learning/refactor_integration.py:404:    print("⏰ 60초간 통합 시스템 실행 중...")
duri_brain/learning/refactor_integration.py:408:    print(f"📊 통합 요약: {summary}")
duri_brain/learning/refactor_integration.py:410:    print("✅ 통합 테스트 완료") 
duri_brain/learning/phase_20_decision_agi.py:788:        print(f"🎯 Phase 20 의사결정 AGI 작업 완료:")
duri_brain/learning/phase_20_decision_agi.py:789:        print(f"   작업 ID: {solution['problem']}")
duri_brain/learning/phase_20_decision_agi.py:790:        print(f"   선택된 옵션: {solution['complex_decision']['selected_option'].title}")
duri_brain/learning/phase_20_decision_agi.py:791:        print(f"   의사결정 점수: {solution['overall_decision_score']:.3f}")
duri_brain/learning/phase_20_decision_agi.py:792:        print(f"   신뢰도: {solution['complex_decision']['confidence']:.3f}")
duri_brain/learning/phase_20_decision_agi.py:796:        print(f"\n📊 Phase 20 상태: {status}")
duri_brain/learning/phase_20_decision_agi.py:798:        print("❌ Phase 20 초기화 실패") 
duri_brain/development_templates/system_design_template.py:329:    print(f"🧪 {{design.system_name}} 테스트 시작...")
duri_brain/development_templates/system_design_template.py:338:    print(f"✅ {{design.system_name}} 테스트 완료!")
duri_brain/development_templates/system_design_template.py:358:    print("📋 SystemDesignTemplate 테스트 시작...")
duri_brain/development_templates/system_design_template.py:370:    print(f"✅ 학습 시스템 설계 생성: {learning_design.system_name}")
duri_brain/development_templates/system_design_template.py:371:    print(f"   목적: {learning_design.purpose}")
duri_brain/development_templates/system_design_template.py:372:    print(f"   복잡도: {learning_design.complexity_level.value}")
duri_brain/development_templates/system_design_template.py:373:    print(f"   예상 구현 시간: {learning_design.estimated_implementation_time}")
duri_brain/development_templates/system_design_template.py:378:    print(f"✅ 구현 계획 생성: {len(learning_plan.implementation_steps)}개 단계")
duri_brain/development_templates/system_design_template.py:379:    print(f"   핵심 메서드: {learning_plan.code_structure['core_methods']}")
duri_brain/development_templates/system_design_template.py:380:    print(f"   테스트 케이스: {len(learning_plan.test_cases)}개")
duri_brain/development_templates/system_design_template.py:385:    print(f"✅ 코드 템플릿 생성: {len(code_template)} 문자")
duri_brain/development_templates/system_design_template.py:390:    print(f"✅ 설계 데이터 내보내기: {len(export_data['designs'])}개 설계")
duri_brain/development_templates/system_design_template.py:392:    print("🎉 SystemDesignTemplate 테스트 완료!")
duri_brain/learning/learning_loop_test.py:20:    print("🚀 === DuRi 학습 루프 즉시 실행 시작 ===")
duri_brain/learning/learning_loop_test.py:24:        print("📋 1단계: 학습 루프 관리자 초기화...")
duri_brain/learning/learning_loop_test.py:27:        print("✅ 학습 루프 관리자 준비 완료")
duri_brain/learning/learning_loop_test.py:30:        print("📋 2단계: 메모리 동기화 시스템 확인...")
duri_brain/learning/learning_loop_test.py:33:        print("✅ 메모리 동기화 시스템 준비 완료")
duri_brain/learning/learning_loop_test.py:36:        print("📋 3단계: Fallback 핸들러 확인...")
duri_brain/learning/learning_loop_test.py:39:        print("✅ Fallback 핸들러 준비 완료")
duri_brain/learning/learning_loop_test.py:42:        print("📋 4단계: 초기 학습 전략 생성...")
duri_brain/learning/learning_loop_test.py:67:        print("✅ 초기 전략 생성 완료")
duri_brain/learning/learning_loop_test.py:70:        print("📋 5단계: 학습 루프 시작...")
duri_brain/learning/learning_loop_test.py:72:        print(f"✅ 학습 루프 시작 완료: {cycle_id}")
duri_brain/learning/learning_loop_test.py:75:        print("📋 6단계: 현재 상태 확인...")
duri_brain/learning/learning_loop_test.py:77:        print(f"✅ 학습 루프 실행 중: {status.get('is_running', False)}")
duri_brain/learning/learning_loop_test.py:78:        print(f"✅ 현재 사이클: {status.get('current_cycle_id', 'None')}")
duri_brain/learning/learning_loop_test.py:81:        print("📋 7단계: 메모리에 활성화 기록 저장...")
duri_brain/learning/learning_loop_test.py:102:            print("✅ 메모리 저장 완료")
duri_brain/learning/learning_loop_test.py:104:            print(f"⚠️ 메모리 저장 실패 (계속 진행): {e}")
duri_brain/learning/learning_loop_test.py:108:        print("📋 8단계: 트리거 테스트...")
duri_brain/learning/learning_loop_test.py:111:        print("🔄 학습 사이클 트리거 테스트...")
duri_brain/learning/learning_loop_test.py:113:            print("✅ 학습 루프가 실행 중입니다")
duri_brain/learning/learning_loop_test.py:116:            print("🧠 메타 학습 트리거 테스트...")
duri_brain/learning/learning_loop_test.py:119:                print("✅ 메타 학습 트리거 성공")
duri_brain/learning/learning_loop_test.py:121:                print(f"⚠️ 메타 학습 트리거 실패: {e}")
duri_brain/learning/learning_loop_test.py:124:            print("🔍 자기 평가 트리거 테스트...")
duri_brain/learning/learning_loop_test.py:127:                print("✅ 자기 평가 트리거 성공")
duri_brain/learning/learning_loop_test.py:129:                print(f"⚠️ 자기 평가 트리거 실패: {e}")
duri_brain/learning/learning_loop_test.py:132:            print("🎯 목표 지향적 사고 트리거 테스트...")
duri_brain/learning/learning_loop_test.py:135:                print("✅ 목표 지향적 사고 트리거 성공")
duri_brain/learning/learning_loop_test.py:137:                print(f"⚠️ 목표 지향적 사고 트리거 실패: {e}")
duri_brain/learning/learning_loop_test.py:139:            print("❌ 학습 루프가 실행되지 않았습니다")
duri_brain/learning/learning_loop_test.py:142:        print("\n🎯 === 최종 결과 요약 ===")
duri_brain/learning/learning_loop_test.py:143:        print(f"✅ 학습 루프 활성화: 성공")
duri_brain/learning/learning_loop_test.py:144:        print(f"📋 사이클 ID: {cycle_id}")
duri_brain/learning/learning_loop_test.py:145:        print(f"🔄 실행 상태: {status.get('is_running', False)}")
duri_brain/learning/learning_loop_test.py:146:        print(f"💾 메모리 저장: 완료")
duri_brain/learning/learning_loop_test.py:147:        print(f"🔗 트리거 연결: 완료")
duri_brain/learning/learning_loop_test.py:148:        print(f"🛡️ Fallback 준비: 완료")
duri_brain/learning/learning_loop_test.py:151:        print("\n⏳ 3초 대기 후 상태 재확인...")
duri_brain/learning/learning_loop_test.py:155:        print(f"🔄 최종 실행 상태: {final_status.get('is_running', False)}")
duri_brain/learning/learning_loop_test.py:157:        print("\n✅ === DuRi 학습 루프 테스트 완료 ===")
duri_brain/learning/learning_loop_test.py:169:        print(f"❌ 학습 루프 활성화 실패: {e}")
duri_brain/learning/learning_loop_test.py:173:            print("🔄 Fallback 처리 시도...")
duri_brain/learning/learning_loop_test.py:179:            print(f"🔄 Fallback 결과: {fallback_result.get('success', False)}")
duri_brain/learning/learning_loop_test.py:181:            print(f"❌ Fallback 처리 실패: {fallback_error}")
duri_brain/learning/learning_loop_test.py:194:    print(f"\n🎯 최종 결과: {'✅ 성공' if result['success'] else '❌ 실패'}")
duri_brain/learning/learning_loop_test.py:196:        print(f"📋 사이클 ID: {result['cycle_id']}")
duri_brain/learning/learning_loop_test.py:197:        print(f"🔄 실행 상태: {result['is_running']}")
duri_brain/learning/learning_loop_test.py:198:        print(f"💾 메모리 저장: {result['memory_stored']}")
duri_brain/learning/learning_loop_test.py:199:        print(f"🔗 트리거 연결: {result['triggers_connected']}")
duri_brain/learning/learning_loop_test.py:200:        print(f"🛡️ Fallback 준비: {result['fallback_ready']}")
duri_brain/learning/learning_loop_test.py:202:        print(f"❌ 오류: {result.get('error', 'Unknown error')}")
duri_brain/learning/learning_loop_test.py:203:        print(f"🔄 Fallback 사용: {result.get('fallback_used', False)}") 
duri_brain/learning/autonomous_insight_demo.py:17:    print("\n🎯 === Phase 자체 평가 테스트 ===")
duri_brain/learning/autonomous_insight_demo.py:27:        print("📊 메트릭 업데이트 중...")
duri_brain/learning/autonomous_insight_demo.py:35:        print("🎯 Phase Up 준비도 확인 중...")
duri_brain/learning/autonomous_insight_demo.py:39:            print(f"✅ Phase Up 요청 생성!")
duri_brain/learning/autonomous_insight_demo.py:40:            print(f"   현재 Phase: {request.current_phase.value}")
duri_brain/learning/autonomous_insight_demo.py:41:            print(f"   목표 Phase: {request.target_phase.value}")
duri_brain/learning/autonomous_insight_demo.py:42:            print(f"   신뢰도: {request.confidence:.3f}")
duri_brain/learning/autonomous_insight_demo.py:43:            print(f"   이유: {request.reasoning}")
duri_brain/learning/autonomous_insight_demo.py:45:            print("\n📋 성취도 상세:")
duri_brain/learning/autonomous_insight_demo.py:48:                print(f"   {status} {achievement.description}")
duri_brain/learning/autonomous_insight_demo.py:50:            print("⏳ Phase Up 준비 부족")
duri_brain/learning/autonomous_insight_demo.py:54:        print(f"\n📊 현재 상태: {status}")
duri_brain/learning/autonomous_insight_demo.py:64:    print("\n🧠 === Insight 자기 반영 테스트 ===")
duri_brain/learning/autonomous_insight_demo.py:76:        print("📝 세션 기록 생성 중...")
duri_brain/learning/autonomous_insight_demo.py:120:        print("🧠 반영 통찰 생성 중...")
duri_brain/learning/autonomous_insight_demo.py:123:        print(f"✅ {len(insights)}개의 반영 통찰 생성")
duri_brain/learning/autonomous_insight_demo.py:125:            print(f"   {i}. [{insight.reflection_type.value}] {insight.insight}")
duri_brain/learning/autonomous_insight_demo.py:126:            print(f"      액션: {insight.action_plan}")
duri_brain/learning/autonomous_insight_demo.py:127:            print(f"      예상 개선: {insight.expected_improvement:.1%}")
duri_brain/learning/autonomous_insight_demo.py:130:        print("\n🔄 반영 통찰 적용 중...")
duri_brain/learning/autonomous_insight_demo.py:132:        print(f"   적용된 변경사항: {applied['applied_changes']}")
duri_brain/learning/autonomous_insight_demo.py:133:        print(f"   예상 개선: {applied['expected_improvement']:.1%}")
duri_brain/learning/autonomous_insight_demo.py:137:        print(f"\n📊 반영 요약: {summary}")
duri_brain/learning/autonomous_insight_demo.py:147:    print("\n🎯 === Insight 자율 관리 테스트 ===")
duri_brain/learning/autonomous_insight_demo.py:192:        print("🔍 통찰 평가 및 결정 중...")
duri_brain/learning/autonomous_insight_demo.py:194:            print(f"\n📌 통찰 {i}: {insight['strategy'][:50]}...")
duri_brain/learning/autonomous_insight_demo.py:198:            print(f"   종합 점수: {evaluation.total_score:.3f}")
duri_brain/learning/autonomous_insight_demo.py:199:            print(f"   위험도: {evaluation.risk_score:.3f}")
duri_brain/learning/autonomous_insight_demo.py:203:            print(f"   결정: {decision.action.value}")
duri_brain/learning/autonomous_insight_demo.py:204:            print(f"   카테고리: {decision.category.value}")
duri_brain/learning/autonomous_insight_demo.py:205:            print(f"   우선순위: {decision.priority.value}")
duri_brain/learning/autonomous_insight_demo.py:206:            print(f"   이유: {decision.reasoning[:60]}...")
duri_brain/learning/autonomous_insight_demo.py:213:        print(f"\n📊 관리 요약:")
duri_brain/learning/autonomous_insight_demo.py:214:        print(f"   저장된 통찰: {summary['stored_count']}")
duri_brain/learning/autonomous_insight_demo.py:215:        print(f"   보류된 통찰: {summary['held_count']}")
duri_brain/learning/autonomous_insight_demo.py:216:        print(f"   폐기된 통찰: {summary['discarded_count']}")
duri_brain/learning/autonomous_insight_demo.py:217:        print(f"   우선순위 통찰: {summary['priority_count']}")
duri_brain/learning/autonomous_insight_demo.py:218:        print(f"   총 처리된 통찰: {summary['total_processed']}")
duri_brain/learning/autonomous_insight_demo.py:228:    print("\n🚀 === 통합 자율 시스템 테스트 ===")
duri_brain/learning/autonomous_insight_demo.py:242:        print("🔄 통합 자율 시스템 시뮬레이션 시작...")
duri_brain/learning/autonomous_insight_demo.py:245:        print("\n📊 1단계: Phase 자체 평가")
duri_brain/learning/autonomous_insight_demo.py:249:            print(f"   🎯 Phase Up 요청: {phase_request.current_phase.value} → {phase_request.target_phase.value}")
duri_brain/learning/autonomous_insight_demo.py:250:            print(f"   📊 신뢰도: {phase_request.confidence:.3f}")
duri_brain/learning/autonomous_insight_demo.py:252:            print("   ⏳ Phase Up 준비 부족")
duri_brain/learning/autonomous_insight_demo.py:255:        print("\n🧠 2단계: Insight 자기 반영")
duri_brain/learning/autonomous_insight_demo.py:257:        print(f"   생성된 반영 통찰: {len(reflection_insights)}개")
duri_brain/learning/autonomous_insight_demo.py:260:        print("\n🎯 3단계: 통찰 자율 관리")
duri_brain/learning/autonomous_insight_demo.py:276:        print(f"   결정: {decision.action.value} - {decision.category.value} - {decision.priority.value}")
duri_brain/learning/autonomous_insight_demo.py:279:        print("\n📋 4단계: 종합 결과")
duri_brain/learning/autonomous_insight_demo.py:285:        print(f"   Phase 상태: {phase_status['current_phase']}")
duri_brain/learning/autonomous_insight_demo.py:286:        print(f"   반영 세션: {reflection_summary['total_sessions']}")
duri_brain/learning/autonomous_insight_demo.py:287:        print(f"   저장된 통찰: {management_summary['stored_count']}")
duri_brain/learning/autonomous_insight_demo.py:296:        print(f"\n🎯 자율성 지수: {autonomy_score:.2f}/1.00")
duri_brain/learning/autonomous_insight_demo.py:299:            print("✅ 높은 자율성 달성!")
duri_brain/learning/autonomous_insight_demo.py:301:            print("🔄 중간 자율성 - 개선 중")
duri_brain/learning/autonomous_insight_demo.py:303:            print("⏳ 낮은 자율성 - 더 많은 학습 필요")
duri_brain/learning/autonomous_insight_demo.py:313:    print("\n🏗️ === DuRi 자율적 통찰 시스템 아키텍처 ===")
duri_brain/learning/autonomous_insight_demo.py:352:    print(architecture)
duri_brain/learning/autonomous_insight_demo.py:356:    print("\n💡 === 사용 예시 ===")
duri_brain/learning/autonomous_insight_demo.py:379:    print(examples)
duri_brain/learning/autonomous_insight_demo.py:383:    print("🧠 === DuRi 자율적 통찰 시스템 종합 데모 ===")
duri_brain/learning/autonomous_insight_demo.py:384:    print(f"📅 시작 시간: {datetime.now()}")
duri_brain/learning/autonomous_insight_demo.py:400:    print("\n📋 === 데모 결과 요약 ===")
duri_brain/learning/autonomous_insight_demo.py:406:        print(f"   {test_name}: {status}")
duri_brain/learning/autonomous_insight_demo.py:408:    print(f"\n📊 전체 성공률: {successful_tests}/{total_tests} ({successful_tests/total_tests*100:.1f}%)")
duri_brain/learning/autonomous_insight_demo.py:411:        print("🎉 모든 테스트가 성공했습니다!")
duri_brain/learning/autonomous_insight_demo.py:412:        print("🚀 DuRi의 완전 자율적 통찰 시스템이 정상적으로 작동합니다!")
duri_brain/learning/autonomous_insight_demo.py:414:        print("⚠️ 일부 테스트가 실패했습니다. 문제를 확인해주세요.")
duri_brain/learning/autonomous_insight_demo.py:416:    print(f"📅 완료 시간: {datetime.now()}")
duri_brain/learning/autonomous_insight_demo.py:439:            print("사용법: python autonomous_insight_demo.py [phase|reflection|management|integrated|architecture|examples]")
duri_brain/learning/smart_learning_checker.py:71:        print(f"🚀 학습 루프 트리거 결과: {result}")
duri_brain/learning/smart_learning_checker.py:74:            print("❌ 학습 루프 트리거 실패")
duri_brain/learning/smart_learning_checker.py:109:                    print(f"✅ {wait}초 후 학습 루프 활성화 확인됨 (지연시간: {latency:.2f}초)")
duri_brain/learning/smart_learning_checker.py:117:                    print(f"⏳ 활성화 대기 중... ({wait}/{max_wait}초)")
duri_brain/learning/smart_learning_checker.py:120:            print(f"❌ {max_wait}초 후 학습 루프 비활성 상태 → 진단 실행")
duri_brain/learning/smart_learning_checker.py:133:            print("🔧 자동 수정 루프 시작...")
duri_brain/learning/smart_learning_checker.py:141:                print(f"🔧 자동 수정 결과: {fix_result}")
duri_brain/learning/smart_learning_checker.py:143:                print("⚠️ Fallback handler를 찾을 수 없음")
duri_brain/learning/smart_learning_checker.py:146:            print(f"❌ 자동 수정 실패: {e}")
duri_brain/learning/smart_learning_checker.py:150:        print(f"\n🔍 === 학습 루프 정체 진단 시작: {stuck_reason} ===")
duri_brain/learning/smart_learning_checker.py:155:            print(f"📋 루프 플래그 상태:")
duri_brain/learning/smart_learning_checker.py:157:                print(f"   - {flag}: {value}")
duri_brain/learning/smart_learning_checker.py:161:            print(f"📋 트리거 정보:")
duri_brain/learning/smart_learning_checker.py:162:            print(f"   - 마지막 트리거 시간: {trigger_info.get('last_trigger_time', 'Unknown')}")
duri_brain/learning/smart_learning_checker.py:163:            print(f"   - 트리거 단계: {', '.join(trigger_info.get('trigger_steps', []))}")
duri_brain/learning/smart_learning_checker.py:167:            print(f"📋 스케줄러 상태:")
duri_brain/learning/smart_learning_checker.py:168:            print(f"   - 스케줄러 블로킹: {scheduler_status.get('blocking', False)}")
duri_brain/learning/smart_learning_checker.py:169:            print(f"   - 스케줄러 스레드 활성: {scheduler_status.get('thread_alive', False)}")
duri_brain/learning/smart_learning_checker.py:173:            print(f"📋 Fallback 상태:")
duri_brain/learning/smart_learning_checker.py:174:            print(f"   - Fallback 트리거됨: {fallback_status.get('triggered', False)}")
duri_brain/learning/smart_learning_checker.py:175:            print(f"   - 마지막 오류: {fallback_status.get('last_error', 'None')}")
duri_brain/learning/smart_learning_checker.py:179:            print(f"📋 활성화 결과:")
duri_brain/learning/smart_learning_checker.py:180:            print(f"   - 성공 여부: {activation_result.get('success', False)}")
duri_brain/learning/smart_learning_checker.py:181:            print(f"   - 오류 메시지: {activation_result.get('error', 'None')}")
duri_brain/learning/smart_learning_checker.py:201:            print(f"\n✅ 진단 완료 - 정체 원인: {stuck_reason}")
duri_brain/learning/smart_learning_checker.py:204:            print(f"❌ 진단 중 오류 발생: {e}")
duri_brain/learning/smart_learning_checker.py:428:    print("🧠 === 스마트 학습 체커 테스트 시작 ===")
duri_brain/learning/smart_learning_checker.py:432:    print(f"📋 스마트 체커 상태: {status}")
duri_brain/learning/smart_learning_checker.py:436:    print("✅ 적응형 대기 시간 활성화")
duri_brain/learning/smart_learning_checker.py:439:    print("\n🚀 스마트 학습 체크 테스트 (30초 타임아웃)...")
duri_brain/learning/smart_learning_checker.py:443:    print(f"\n🎯 테스트 결과: {'✅ 성공' if success else '❌ 실패'}")
duri_brain/learning/smart_learning_checker.py:447:    print(f"\n📊 지연시간 통계: {stats}")
duri_brain/learning/smart_learning_checker.py:452:        print(f"\n🔍 최근 진단 기록: {len(diagnostic_history)}개")
duri_brain/learning/smart_learning_checker.py:454:            print(f"   {i}. {diagnostic.timestamp}: {diagnostic.stuck_reason}")
duri_brain/learning/smart_learning_checker.py:456:    print("✅ === 스마트 학습 체커 테스트 완료 ===") 
duri_brain/learning/dlfp_protocol.py:46:            print(f"\n🚀 [{attempt}] 학습 루프 트리거 시도 중...")
duri_brain/learning/dlfp_protocol.py:51:                print(f"❌ [{attempt}] 학습 루프 트리거 실패")
duri_brain/learning/dlfp_protocol.py:55:            print(f"⏳ [{attempt}] 학습 활성화 대기 중... ({self.verification_delay}초)")
duri_brain/learning/dlfp_protocol.py:61:                print("✅ 학습 루프 정상 시작됨")
duri_brain/learning/dlfp_protocol.py:65:                print(f"❌ [{attempt}] 학습 실패, 원인: {verification_result['cause']}")
duri_brain/learning/dlfp_protocol.py:70:        print("❌ 최대 재시도 초과. 수동 개입 필요")
duri_brain/learning/dlfp_protocol.py:82:            print(f"✅ 학습 루프 트리거 완료: {reason}")
duri_brain/learning/dlfp_protocol.py:86:            print(f"❌ 학습 루프 트리거 실패: {e}")
duri_brain/learning/dlfp_protocol.py:104:            print(f"🔍 상태 확인:")
duri_brain/learning/dlfp_protocol.py:105:            print(f"  - 학습 루프 활성: {is_active}")
duri_brain/learning/dlfp_protocol.py:106:            print(f"  - 현재 사이클 ID: {current_cycle_id}")
duri_brain/learning/dlfp_protocol.py:107:            print(f"  - 마지막 업데이트: {last_update}")
duri_brain/learning/dlfp_protocol.py:133:            print(f"❌ 상태 검증 실패: {e}")
duri_brain/learning/dlfp_protocol.py:158:            print(f"🔧 자동 수정 시도: {cause}")
duri_brain/learning/dlfp_protocol.py:166:                print(f"🔧 수정 결과: {fix_result}")
duri_brain/learning/dlfp_protocol.py:171:                print("⚠️ Fallback 핸들러를 찾을 수 없음")
duri_brain/learning/dlfp_protocol.py:174:            print(f"❌ 자동 수정 실패: {e}")
duri_brain/learning/dlfp_protocol.py:221:    print("🧠 === DLFP 프로토콜 테스트 시작 ===")
duri_brain/learning/dlfp_protocol.py:225:    print(f"📋 DLFP 상태: {status}")
duri_brain/learning/dlfp_protocol.py:228:    print("\n🚀 안전한 학습 트리거 테스트...")
duri_brain/learning/dlfp_protocol.py:231:    print(f"\n🎯 테스트 결과: {'✅ 성공' if success else '❌ 실패'}")
duri_brain/learning/dlfp_protocol.py:232:    print("✅ === DLFP 프로토콜 테스트 완료 ===") 
duri_brain/learning/phase20_decision_checklist.py:511:    print("📘 Phase 20 판단 능력 체크리스트 시작")
duri_brain/learning/phase20_decision_checklist.py:517:            print("✅ Phase 20 체크리스트 통과!")
duri_brain/learning/phase20_decision_checklist.py:518:            print(f"   정량 평가: {'통과' if result['quantitative']['pass'] else '실패'}")
duri_brain/learning/phase20_decision_checklist.py:519:            print(f"   정성 평가: {'통과' if result['qualitative']['pass'] else '실패'}")
duri_brain/learning/phase20_decision_checklist.py:520:            print(f"   자기설명 평가: {'통과' if result['self_explanation']['pass'] else '실패'}")
duri_brain/learning/phase20_decision_checklist.py:522:            print("❌ Phase 20 체크리스트 실패")
duri_brain/learning/phase20_decision_checklist.py:523:            print("   개선 제안이 failure_log/phase20_decision_fail.log에 저장되었습니다")
duri_brain/learning/phase20_decision_checklist.py:525:        print(f"❌ 체크리스트 실행 실패: {result['error']}") 
duri_brain/development_templates/gpt_cursor_workflow.py:513:    print("🔄 GPTCursorWorkflow 테스트 시작...")
duri_brain/development_templates/gpt_cursor_workflow.py:520:    print(f"✅ GPT 추천사항 생성: {recommendation.recommendation_type}")
duri_brain/development_templates/gpt_cursor_workflow.py:521:    print(f"   우선순위: {recommendation.priority}")
duri_brain/development_templates/gpt_cursor_workflow.py:522:    print(f"   예상 노력: {recommendation.estimated_effort}")
duri_brain/development_templates/gpt_cursor_workflow.py:535:    print("테스트")
duri_brain/development_templates/gpt_cursor_workflow.py:540:    print(f"✅ 코드 품질 분석: {len(analysis.issues_found)}개 이슈 발견")
duri_brain/development_templates/gpt_cursor_workflow.py:541:    print(f"   복잡도 점수: {analysis.complexity_score:.2f}")
duri_brain/development_templates/gpt_cursor_workflow.py:542:    print(f"   유지보수성 점수: {analysis.maintainability_score:.2f}")
duri_brain/development_templates/gpt_cursor_workflow.py:543:    print(f"   성능 점수: {analysis.performance_score:.2f}")
duri_brain/development_templates/gpt_cursor_workflow.py:547:    print(f"✅ 리팩토링 작업 생성: {refactoring_task.refactoring_type.value}")
duri_brain/development_templates/gpt_cursor_workflow.py:548:    print(f"   우선순위: {refactoring_task.priority}")
duri_brain/development_templates/gpt_cursor_workflow.py:549:    print(f"   예상 영향: {refactoring_task.estimated_impact}")
duri_brain/development_templates/gpt_cursor_workflow.py:553:    print(f"✅ 워크플로우 단계 실행: {workflow_result['stage']}")
duri_brain/development_templates/gpt_cursor_workflow.py:554:    print(f"   상태: {workflow_result['result']['status']}")
duri_brain/development_templates/gpt_cursor_workflow.py:558:    print(f"✅ 워크플로우 통계: {statistics['total_recommendations']}개 추천사항")
duri_brain/development_templates/gpt_cursor_workflow.py:559:    print(f"   단계별 통계: {statistics['stage_statistics']}")
duri_brain/development_templates/gpt_cursor_workflow.py:560:    print(f"   우선순위별 통계: {statistics['priority_statistics']}")
duri_brain/development_templates/gpt_cursor_workflow.py:564:    print(f"✅ 워크플로우 데이터 내보내기: {len(export_data['recommendations'])}개 추천사항")
duri_brain/development_templates/gpt_cursor_workflow.py:566:    print("🎉 GPTCursorWorkflow 테스트 완료!")
duri_brain/learning/dlfp_demo.py:17:    print("🧠 === DLFP 프로토콜 데모 시작 ===")
duri_brain/learning/dlfp_demo.py:18:    print(f"📅 테스트 시간: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
duri_brain/learning/dlfp_demo.py:22:        print("\n📋 1단계: DLFP 상태 확인")
duri_brain/learning/dlfp_demo.py:25:        print(f"✅ DLFP 상태: {dlfp_status['protocol_name']}")
duri_brain/learning/dlfp_demo.py:26:        print(f"✅ 최대 재시도: {dlfp_status['max_retries']}회")
duri_brain/learning/dlfp_demo.py:27:        print(f"✅ 검증 대기 시간: {dlfp_status['verification_delay']}초")
duri_brain/learning/dlfp_demo.py:30:        print("\n📋 2단계: 현재 DuRi 학습 루프 상태 확인")
duri_brain/learning/dlfp_demo.py:35:        print(f"✅ 현재 학습 루프 상태: {current_status.get('status', 'unknown')}")
duri_brain/learning/dlfp_demo.py:36:        print(f"✅ 현재 사이클 ID: {current_status.get('current_cycle_id', 'None')}")
duri_brain/learning/dlfp_demo.py:39:        print("\n📋 3단계: DLFP 안전 학습 트리거 테스트")
duri_brain/learning/dlfp_demo.py:42:        print("🚀 DLFP 학습 트리거 시작...")
duri_brain/learning/dlfp_demo.py:49:        print(f"\n🎯 DLFP 테스트 결과: {'✅ 성공' if success else '❌ 실패'}")
duri_brain/learning/dlfp_demo.py:52:            print("✅ DLFP 프로토콜이 정상적으로 작동했습니다!")
duri_brain/learning/dlfp_demo.py:53:            print("✅ 학습 루프가 안전하게 트리거되고 검증되었습니다!")
duri_brain/learning/dlfp_demo.py:55:            print("❌ DLFP 프로토콜 테스트 중 문제가 발생했습니다.")
duri_brain/learning/dlfp_demo.py:56:            print("🔧 자동 수정 및 재시도가 실행되었습니다.")
duri_brain/learning/dlfp_demo.py:59:        print("\n📋 4단계: 최종 상태 확인")
duri_brain/learning/dlfp_demo.py:61:        print(f"✅ 최종 학습 루프 상태: {final_status.get('status', 'unknown')}")
duri_brain/learning/dlfp_demo.py:62:        print(f"✅ 최종 사이클 ID: {final_status.get('current_cycle_id', 'None')}")
duri_brain/learning/dlfp_demo.py:65:        print("\n📋 5단계: 성능 메트릭 확인")
duri_brain/learning/dlfp_demo.py:71:                print(f"✅ 전체 성능 점수: {performance:.2f}")
duri_brain/learning/dlfp_demo.py:73:            print(f"⚠️ 성능 메트릭 확인 실패: {e}")
duri_brain/learning/dlfp_demo.py:84:        print(f"❌ DLFP 데모 실행 중 오류 발생: {e}")
duri_brain/learning/dlfp_demo.py:94:    print("\n📊 === 챗지피티 제안 vs 실제 구현 비교 ===")
duri_brain/learning/dlfp_demo.py:113:    print("✅ 챗지피티 제안과 100% 일치하는 구현 완료!")
duri_brain/learning/dlfp_demo.py:114:    print("✅ 추가 기능: 상세한 로깅, 오류 분석, 성능 모니터링")
duri_brain/learning/dlfp_demo.py:119:    print("🚀 === DLFP 프로토콜 데모 실행 ===")
duri_brain/learning/dlfp_demo.py:128:    print(f"\n🎯 === 최종 결과 요약 ===")
duri_brain/learning/dlfp_demo.py:129:    print(f"✅ DLFP 테스트: {'성공' if test_result['success'] else '실패'}")
duri_brain/learning/dlfp_demo.py:130:    print(f"✅ 챗지피티 제안 구현: 완료")
duri_brain/learning/dlfp_demo.py:131:    print(f"✅ 추가 기능: 로깅, 분석, 모니터링")
duri_brain/learning/dlfp_demo.py:134:        print("\n🌟 DuRi의 학습 안정성이 크게 향상되었습니다!")
duri_brain/learning/dlfp_demo.py:135:        print("🌟 DLFP 프로토콜이 성공적으로 작동합니다!")
duri_brain/learning/dlfp_demo.py:137:        print(f"\n⚠️ DLFP 테스트 중 문제가 발생했습니다: {test_result.get('error', 'Unknown error')}")
duri_brain/learning/dlfp_demo.py:139:    print("\n✅ === DLFP 프로토콜 데모 완료 ===") 
duri_brain/learning/insight_integration.py:180:    print(f"\n🎯 통합 결과: {result}")
duri_brain/learning/insight_integration.py:184:    print(f"\n📊 통합 상태: {status}") 
duri_brain/learning/cognitive_meta_learning.py:645:    print("🧠 인지 메타 학습 시스템 테스트 시작")
duri_brain/learning/cognitive_meta_learning.py:659:    print(f"✅ 적응적 학습 완료: {process.process_id}")
duri_brain/learning/cognitive_meta_learning.py:663:    print(f"📊 메타 학습 능력: {assessment['overall_score']:.2f}")
duri_brain/learning/cognitive_meta_learning.py:667:    print(f"📋 리포트 생성 완료: {report['total_patterns']}개 패턴, {report['total_strategies']}개 전략")
duri_brain/learning/cognitive_meta_learning.py:669:    print("🎉 인지 메타 학습 시스템 테스트 완료!")
duri_brain/learning/phase_18_creative_agi.py:741:        print(f"🎨 Phase 18 창의성 AGI 작업 완료:")
duri_brain/learning/phase_18_creative_agi.py:742:        print(f"   작업 ID: {solution['problem']}")
duri_brain/learning/phase_18_creative_agi.py:743:        print(f"   선택된 아이디어: {solution['creative_solution']['selected_idea'].title}")
duri_brain/learning/phase_18_creative_agi.py:744:        print(f"   창의성 점수: {solution['overall_creativity_score']:.3f}")
duri_brain/learning/phase_18_creative_agi.py:745:        print(f"   신뢰도: {solution['creative_solution']['confidence']:.3f}")
duri_brain/learning/phase_18_creative_agi.py:749:        print(f"\n📊 Phase 18 상태: {status}")
duri_brain/learning/phase_18_creative_agi.py:751:        print("❌ Phase 18 초기화 실패") 
duri_brain/learning/phase_19_wisdom_agi.py:570:        print(f"🧠 Phase 19 지혜 AGI 작업 완료:")
duri_brain/learning/phase_19_wisdom_agi.py:571:        print(f"   작업 ID: {solution['problem']}")
duri_brain/learning/phase_19_wisdom_agi.py:572:        print(f"   윤리적 판단: {solution['ethical_judgment'].ethical_decision}")
duri_brain/learning/phase_19_wisdom_agi.py:573:        print(f"   지혜 점수: {solution['overall_wisdom_score']:.3f}")
duri_brain/learning/phase_19_wisdom_agi.py:574:        print(f"   윤리적 신뢰도: {solution['ethical_judgment'].confidence:.3f}")
duri_brain/learning/phase_19_wisdom_agi.py:578:        print(f"\n📊 Phase 19 상태: {status}")
duri_brain/learning/phase_19_wisdom_agi.py:580:        print("❌ Phase 19 초기화 실패") 
duri_brain/learning/__init__.py:25:    print("⚠️  LearningLoopManager를 사용할 수 없습니다 (duri_core 의존성)")
duri_brain/learning/degradation_predictor.py:559:    print("🔮 성능 저하 예측 시스템 테스트 시작")
duri_brain/learning/degradation_predictor.py:560:    print("⏰ 60초간 예측 실행 중...")
duri_brain/learning/degradation_predictor.py:565:    print(f"📊 예측 요약: {summary}")
duri_brain/learning/degradation_predictor.py:568:    print("✅ 테스트 완료") 
duri_brain/learning/insight_autonomous_manager.py:510:    print(f"🔍 평가 결과:")
duri_brain/learning/insight_autonomous_manager.py:511:    print(f"   관련성: {evaluation.relevance_score:.3f}")
duri_brain/learning/insight_autonomous_manager.py:512:    print(f"   실현 가능성: {evaluation.feasibility_score:.3f}")
duri_brain/learning/insight_autonomous_manager.py:513:    print(f"   영향도: {evaluation.impact_score:.3f}")
duri_brain/learning/insight_autonomous_manager.py:514:    print(f"   위험도: {evaluation.risk_score:.3f}")
duri_brain/learning/insight_autonomous_manager.py:515:    print(f"   신선함: {evaluation.novelty_score:.3f}")
duri_brain/learning/insight_autonomous_manager.py:516:    print(f"   종합 점수: {evaluation.total_score:.3f}")
duri_brain/learning/insight_autonomous_manager.py:520:    print(f"\n🎯 결정:")
duri_brain/learning/insight_autonomous_manager.py:521:    print(f"   액션: {decision.action.value}")
duri_brain/learning/insight_autonomous_manager.py:522:    print(f"   카테고리: {decision.category.value}")
duri_brain/learning/insight_autonomous_manager.py:523:    print(f"   우선순위: {decision.priority.value}")
duri_brain/learning/insight_autonomous_manager.py:524:    print(f"   이유: {decision.reasoning}")
duri_brain/learning/insight_autonomous_manager.py:525:    print(f"   예상 이익: {decision.expected_benefit:.3f}")
duri_brain/learning/insight_autonomous_manager.py:526:    print(f"   위험 평가: {decision.risk_assessment}")
duri_brain/learning/insight_autonomous_manager.py:527:    print(f"   구현 계획: {decision.implementation_plan}")
duri_brain/learning/insight_autonomous_manager.py:534:    print(f"\n�� 관리 요약: {summary}") 
duri_brain/learning/phase_2_advanced_learning.py:520:        print(f"🎯 Phase 2 문제 해결 완료:")
duri_brain/learning/phase_2_advanced_learning.py:521:        print(f"   작업 ID: {solution['task_id']}")
duri_brain/learning/phase_2_advanced_learning.py:522:        print(f"   해결책: {solution['solution_summary']}")
duri_brain/learning/phase_2_advanced_learning.py:523:        print(f"   신뢰도: {solution['confidence']:.3f}")
duri_brain/learning/phase_2_advanced_learning.py:524:        print(f"   위험도: {solution['risk_level']:.3f}")
duri_brain/learning/phase_2_advanced_learning.py:528:        print(f"\n📊 Phase 2 상태: {status}")
duri_brain/learning/phase_2_advanced_learning.py:530:        print("❌ Phase 2 초기화 실패") 
duri_brain/learning/performance_history.py:468:    print("📊 성능 히스토리 시스템 테스트 시작")
duri_brain/learning/performance_history.py:469:    print("⏰ 30초간 데이터 수집 중...")
duri_brain/learning/performance_history.py:474:    print(f"📈 성능 요약: {summary}")
duri_brain/learning/performance_history.py:477:    print("✅ 테스트 완료") 
duri_brain/learning/insight_engine.py:376:    print(f"\n🎯 결과: {result}")
duri_brain/learning/insight_engine.py:380:        print(f"🧠 생성된 통찰: {insight.strategy}")
duri_brain/learning/insight_engine.py:381:        print(f"📊 신뢰도: {insight.confidence:.3f}")
duri_brain/learning/insight_engine.py:382:        print(f"🎯 예상 영향: {insight.expected_impact:.3f}") 
duri_brain/learning/refactor_system_demo.py:22:    print("\n📊 === PerformanceHistory 테스트 ===")
duri_brain/learning/refactor_system_demo.py:32:        print("✅ 성능 데이터 수집 시작")
duri_brain/learning/refactor_system_demo.py:36:        print(f"📈 성능 요약: {summary}")
duri_brain/learning/refactor_system_demo.py:39:        print("✅ PerformanceHistory 테스트 완료")
duri_brain/learning/refactor_system_demo.py:43:        print(f"❌ PerformanceHistory 테스트 실패: {e}")
duri_brain/learning/refactor_system_demo.py:48:    print("\n🔮 === DegradationPredictor 테스트 ===")
duri_brain/learning/refactor_system_demo.py:58:        print("✅ 성능 저하 예측 시작")
duri_brain/learning/refactor_system_demo.py:62:        print(f"📊 예측 요약: {summary}")
duri_brain/learning/refactor_system_demo.py:65:        print("✅ DegradationPredictor 테스트 완료")
duri_brain/learning/refactor_system_demo.py:69:        print(f"❌ DegradationPredictor 테스트 실패: {e}")
duri_brain/learning/refactor_system_demo.py:74:    print("\n🔧 === RefactorPredictiveController 테스트 ===")
duri_brain/learning/refactor_system_demo.py:84:        print("✅ 리팩터링 컨트롤러 시작")
duri_brain/learning/refactor_system_demo.py:88:        print(f"📋 작업 요약: {summary}")
duri_brain/learning/refactor_system_demo.py:91:        print("✅ RefactorPredictiveController 테스트 완료")
duri_brain/learning/refactor_system_demo.py:95:        print(f"❌ RefactorPredictiveController 테스트 실패: {e}")
duri_brain/learning/refactor_system_demo.py:100:    print("\n🔗 === 리팩터링 예측 시스템 통합 테스트 ===")
duri_brain/learning/refactor_system_demo.py:109:        print("✅ 리팩터링 예측 시스템 통합 완료")
duri_brain/learning/refactor_system_demo.py:113:        print(f"📊 통합 요약: {summary}")
duri_brain/learning/refactor_system_demo.py:116:        print("\n🔄 자동 리팩터링 활성화 테스트")
duri_brain/learning/refactor_system_demo.py:123:        print("✅ 통합 시스템 테스트 완료")
duri_brain/learning/refactor_system_demo.py:127:        print(f"❌ 통합 시스템 테스트 실패: {e}")
duri_brain/learning/refactor_system_demo.py:132:    print("🚀 === DuRi 리팩터링 예측 시스템 종합 데모 ===")
duri_brain/learning/refactor_system_demo.py:133:    print(f"📅 시작 시간: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
duri_brain/learning/refactor_system_demo.py:151:    print("\n📋 === 데모 결과 요약 ===")
duri_brain/learning/refactor_system_demo.py:157:        print(f"   {test_name}: {status}")
duri_brain/learning/refactor_system_demo.py:159:    print(f"\n📊 전체 성공률: {success_count}/{total_count} ({success_count/total_count*100:.1f}%)")
duri_brain/learning/refactor_system_demo.py:162:        print("🎉 모든 테스트가 성공했습니다!")
duri_brain/learning/refactor_system_demo.py:164:        print("⚠️ 일부 테스트가 실패했습니다.")
duri_brain/learning/refactor_system_demo.py:166:    print(f"📅 완료 시간: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
duri_brain/learning/refactor_system_demo.py:172:    print("\n🏗️ === DuRi 리팩터링 예측 시스템 아키텍처 ===")
duri_brain/learning/refactor_system_demo.py:173:    print("""
duri_brain/learning/refactor_system_demo.py:201:    print("\n💡 === 사용 예시 ===")
duri_brain/learning/refactor_system_demo.py:202:    print("""
duri_brain/learning/refactor_system_demo.py:212:    print(summary)
duri_brain/learning/refactor_system_demo.py:233:    print("🧠 === DuRi 리팩터링 예측 시스템 ===")
duri_brain/learning/refactor_system_demo.py:234:    print("목표: 성능 저하가 발생하기 전, DuRi가 스스로 구조적 리팩터링을 판단하고 실행")
duri_brain/learning/refactor_system_demo.py:243:    print("\n🎯 실행할 작업을 선택하세요:")
duri_brain/learning/refactor_system_demo.py:244:    print("1. 종합 데모 실행 (모든 테스트)")
duri_brain/learning/refactor_system_demo.py:245:    print("2. 개별 컴포넌트 테스트")
duri_brain/learning/refactor_system_demo.py:246:    print("3. 시스템 아키텍처만 보기")
duri_brain/learning/refactor_system_demo.py:247:    print("4. 종료")
duri_brain/learning/refactor_system_demo.py:255:            print("\n개별 컴포넌트 테스트:")
duri_brain/learning/refactor_system_demo.py:256:            print("1. PerformanceHistory")
duri_brain/learning/refactor_system_demo.py:257:            print("2. DegradationPredictor")
duri_brain/learning/refactor_system_demo.py:258:            print("3. RefactorPredictiveController")
duri_brain/learning/refactor_system_demo.py:259:            print("4. 통합 시스템")
duri_brain/learning/refactor_system_demo.py:272:                print("❌ 잘못된 선택입니다.")
duri_brain/learning/refactor_system_demo.py:276:            print("👋 종료합니다.")
duri_brain/learning/refactor_system_demo.py:278:            print("❌ 잘못된 선택입니다.")
duri_brain/learning/refactor_system_demo.py:281:        print("\n👋 사용자에 의해 중단되었습니다.")
duri_brain/learning/refactor_system_demo.py:283:        print(f"❌ 오류 발생: {e}")
duri_brain/learning/self_evolution_analysis.py:435:    print("🧠 === DuRi 자가진화 시스템 분석 시작 ===")
duri_brain/learning/self_evolution_analysis.py:440:    print(f"\n📊 === 분석 결과 ===")
duri_brain/learning/self_evolution_analysis.py:441:    print(f"총 진화 사례: {analysis_result['total_cases']}개")
duri_brain/learning/self_evolution_analysis.py:442:    print(f"성공한 진화: {analysis_result['successful_cases']}개")
duri_brain/learning/self_evolution_analysis.py:443:    print(f"성공률: {analysis_result['success_rate']:.1%}")
duri_brain/learning/self_evolution_analysis.py:444:    print(f"학습된 패턴: {len(analysis_result['learned_patterns'])}개")
duri_brain/learning/self_evolution_analysis.py:449:    print(f"\n🎯 === 자가 학습 시스템 ===")
duri_brain/learning/self_evolution_analysis.py:450:    print(f"시스템 이름: {learning_system['system_name']}")
duri_brain/learning/self_evolution_analysis.py:451:    print(f"버전: {learning_system['version']}")
duri_brain/learning/self_evolution_analysis.py:452:    print(f"생성 날짜: {learning_system['creation_date']}")
duri_brain/learning/self_evolution_analysis.py:454:    print(f"\n🔧 === 핵심 능력 ===")
duri_brain/learning/self_evolution_analysis.py:456:        print(f"  - {capability}")
duri_brain/learning/self_evolution_analysis.py:458:    print(f"\n📈 === 성과 지표 ===")
duri_brain/learning/self_evolution_analysis.py:460:        print(f"  - {metric}: {value}")
duri_brain/learning/self_evolution_analysis.py:462:    print(f"\n✅ === 자가진화 시스템 분석 완료 ===") 
duri_brain/learning/learning_loop_diagnostic.py:319:    print("🔍 === DuRi 학습 루프 진단 시작 ===")
duri_brain/learning/learning_loop_diagnostic.py:323:    print(f"\n📊 === 진단 결과 요약 ===")
duri_brain/learning/learning_loop_diagnostic.py:324:    print(f"진단 시간: {diagnostic_result.get('start_time', 'Unknown')}")
duri_brain/learning/learning_loop_diagnostic.py:325:    print(f"진단 단계: {len(diagnostic_result.get('steps', []))}개")
duri_brain/learning/learning_loop_diagnostic.py:326:    print(f"블로킹 포인트: {len(diagnostic_result.get('blocking_points', []))}개")
duri_brain/learning/learning_loop_diagnostic.py:331:        print(f"\n🔒 === 블로킹 포인트 ===")
duri_brain/learning/learning_loop_diagnostic.py:333:            print(f"{i}. {point['type']}: {point['issue']}")
duri_brain/learning/learning_loop_diagnostic.py:334:            print(f"   상세: {point['details']}")
duri_brain/learning/learning_loop_diagnostic.py:339:        print(f"\n💡 === 권장사항 ===")
duri_brain/learning/learning_loop_diagnostic.py:341:            print(f"{i}. {rec}")
duri_brain/learning/learning_loop_diagnostic.py:343:    print(f"\n✅ === 학습 루프 진단 완료 ===") 
duri_brain/learning/refactor_predictive_controller.py:608:    print("🔧 리팩터링 예측 컨트롤러 테스트 시작")
duri_brain/learning/refactor_predictive_controller.py:609:    print("⏰ 60초간 컨트롤러 실행 중...")
duri_brain/learning/refactor_predictive_controller.py:614:    print(f"📊 작업 요약: {summary}")
duri_brain/learning/refactor_predictive_controller.py:617:    print("✅ 테스트 완료") 
duri_brain/learning/learning_loop_activator.py:607:    print(f"🎯 활성화 결과: {'✅ 성공' if result.success else '❌ 실패'}")
duri_brain/learning/learning_loop_activator.py:609:        print(f"📋 사이클 ID: {result.cycle_id}")
duri_brain/learning/learning_loop_activator.py:610:        print(f"💾 메모리 저장: {'✅ 완료' if result.memory_stored else '❌ 실패'}")
duri_brain/learning/learning_loop_activator.py:612:        print(f"❌ 오류: {result.error_message}")
duri_brain/learning/learning_loop_activator.py:613:        print(f"🔄 Fallback 사용: {'✅ 예' if result.fallback_used else '❌ 아니오'}") 
duri_brain/thinking/phase_22_advanced_thinking_ai.py:625:    print("🧠 Phase 22: 고급 사고 AI 시작")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:629:        print("✅ Phase 22 초기화 완료")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:635:        print(f"\n🔍 추상적 추론:")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:636:        print(f"   문제: {abstract_task.abstract_concept}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:637:        print(f"   결론: {abstract_task.conclusion}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:638:        print(f"   신뢰도: {abstract_task.confidence:.3f}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:642:        print(f"\n🧠 메타인지 개발:")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:643:        print(f"   자기 인식: {meta_session.self_awareness}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:644:        print(f"   인지 전략: {meta_session.cognitive_strategy}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:645:        print(f"   학습 통찰: {meta_session.learning_insight}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:649:        print(f"\n🔧 고급 문제 해결:")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:650:        print(f"   복잡성: {advanced_solution.problem_complexity}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:651:        print(f"   전략: {advanced_solution.solution_strategy}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:652:        print(f"   구현 계획: {len(advanced_solution.implementation_plan)}단계")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:656:        print(f"\n🎨 창의적 사고 종합:")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:657:        print(f"   결과: {creative_synthesis}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:661:        print(f"\n🔍 복잡한 패턴 인식:")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:662:        print(f"   패턴 유형: {pattern_recognition['pattern_type']}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:663:        print(f"   분석: {pattern_recognition['analysis']}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:664:        print(f"   예측: {pattern_recognition['prediction']}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:668:        print(f"\n🤔 철학적 사고:")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:669:        print(f"   문제 분석: {philosophical_thinking['problem_analysis']}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:670:        print(f"   철학적 관점: {philosophical_thinking['philosophical_perspective']}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:671:        print(f"   윤리적 고려: {philosophical_thinking['ethical_considerations']}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:675:        print(f"\n📊 Phase 22 상태:")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:676:        print(f"   평균 능력 점수: {status['average_capability_score']:.3f}")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:677:        print(f"   추상적 추론 과제: {status['total_abstract_reasoning_tasks']}개")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:678:        print(f"   메타인지 세션: {status['total_meta_cognition_sessions']}개")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:679:        print(f"   고급 문제 해결: {status['total_advanced_problem_solutions']}개")
duri_brain/thinking/phase_22_advanced_thinking_ai.py:682:        print("❌ Phase 22 초기화 실패") 
duri_brain/learning/insight_self_reflection.py:384:    print(f"🧠 생성된 반영 통찰: {len(insights)}개")
duri_brain/learning/insight_self_reflection.py:386:        print(f"   {i}. [{insight.reflection_type.value}] {insight.insight}")
duri_brain/learning/insight_self_reflection.py:387:        print(f"      액션: {insight.action_plan}")
duri_brain/learning/insight_self_reflection.py:388:        print(f"      예상 개선: {insight.expected_improvement:.1%}")
duri_brain/learning/insight_self_reflection.py:392:    print(f"\n🔄 적용된 변경사항: {applied['applied_changes']}")
duri_brain/learning/insight_self_reflection.py:396:    print(f"\n�� 반영 요약: {summary}") 
duri_brain/deployment_config.py:143:    print("✅ 배포 파일들 생성 완료!")
duri_brain/deployment_config.py:149:    print("🌐 인터넷 배포 옵션:")
duri_brain/deployment_config.py:150:    print("=" * 50)
duri_brain/deployment_config.py:153:        print(f"\n📋 {info['name']}:")
duri_brain/deployment_config.py:154:        print(f"   💰 비용: {info['cost']}")
duri_brain/deployment_config.py:155:        print(f"   ⏱️  설정 시간: {info['setup_time']}")
duri_brain/deployment_config.py:156:        print(f"   🌟 특징: {', '.join(info['features'])}")
duri_brain/deployment_config.py:157:        print(f"   🔗 예상 URL: {info['url']}")
duri_brain/deployment_config.py:159:    print(f"\n🔒 보안 설정:")
duri_brain/deployment_config.py:161:        print(f"   {key}: {value}")
duri_brain/deployment_config.py:163:    print(f"\n🌍 도메인 옵션:")
duri_brain/deployment_config.py:165:        print(f"   {domain}")
duri_brain/integration_test.py:20:    print("🚀 DuRi 고급 시스템 통합 테스트 시작")
duri_brain/integration_test.py:21:    print("=" * 60)
duri_brain/integration_test.py:25:        print("\n🧠 1단계: 인지 메타 학습 시스템 테스트")
duri_brain/integration_test.py:36:        print(f"✅ 메타 학습 완료: {meta_process.process_id}")
duri_brain/integration_test.py:39:        print("\n💭 2단계: 감정적 자기인식 시스템 테스트")
duri_brain/integration_test.py:50:        print(f"✅ 감정적 트리거 분석 완료: {trigger.emotion_caused.value}")
duri_brain/integration_test.py:53:        print("\n🤝 3단계: 사회적 지능 시스템 테스트")
duri_brain/integration_test.py:75:        print(f"✅ 사회적 상호작용 처리 완료: {social_result.interaction_id}")
duri_brain/integration_test.py:78:        print("\n📊 4단계: 통합 성능 평가")
duri_brain/integration_test.py:108:        print(f"📈 인지 메타 학습 능력: {meta_score:.2f}")
duri_brain/integration_test.py:109:        print(f"📈 감정적 자기인식 능력: {emotional_score:.2f}")
duri_brain/integration_test.py:110:        print(f"📈 사회적 지능 능력: {social_score:.2f}")
duri_brain/integration_test.py:111:        print(f"🎯 종합 능력 점수: {overall_score:.2f}")
duri_brain/integration_test.py:114:        print("\n📋 5단계: 통합 상태 리포트")
duri_brain/integration_test.py:138:        print(f"✅ 통합 테스트 완료!")
duri_brain/integration_test.py:139:        print(f"🔧 통합된 시스템 수: {len(integration_report['systems_integrated'])}")
duri_brain/integration_test.py:140:        print(f"📊 종합 성능: {integration_report['integration_quality']}")
duri_brain/integration_test.py:141:        print(f"🎯 전체 점수: {overall_score:.2f}")
duri_brain/integration_test.py:155:    print("🚀 DuRi 고급 시스템 통합 테스트 시작")
duri_brain/integration_test.py:156:    print("=" * 60)
duri_brain/integration_test.py:161:    print("\n" + "=" * 60)
duri_brain/integration_test.py:163:        print("🎉 모든 고급 시스템이 성공적으로 통합되었습니다!")
duri_brain/integration_test.py:164:        print("🚀 DuRi가 인간형 AI로 진화했습니다!")
duri_brain/integration_test.py:166:        print("❌ 통합 테스트에 실패했습니다.")
duri_brain/integration_test.py:167:        print(f"오류: {result.get('error', 'Unknown error')}")
duri_brain/integration_test.py:169:    print("=" * 60)
duri_brain/thinking/phase_25_creative_collaboration_system.py:60:        print(f"🔍 인간 의도 분석 시작: {user_input[:50]}...")
duri_brain/thinking/phase_25_creative_collaboration_system.py:74:        print(f"✅ 인간 의도 분석 완료: {human_intent.primary_goal}")
duri_brain/thinking/phase_25_creative_collaboration_system.py:167:        print("🎯 협력 기회 분석 중...")
duri_brain/thinking/phase_25_creative_collaboration_system.py:192:        print(f"✅ 협력 기회 분석 완료: 시너지 잠재력 {synergy_potential:.2f}")
duri_brain/thinking/phase_25_creative_collaboration_system.py:274:        print("📋 협력 전략 생성 중...")
duri_brain/thinking/phase_25_creative_collaboration_system.py:285:        print(f"✅ 협력 전략 생성 완료: {strategy['mode']} 모드")
duri_brain/thinking/phase_25_creative_collaboration_system.py:346:        print(f"🚀 협력 실행 시작: {strategy['mode']} 모드")
duri_brain/thinking/phase_25_creative_collaboration_system.py:365:        print("✅ 협력 실행 완료")
duri_brain/learning/self_learning_orchestrator.py:224:            print(f"\n📊 === DuRi 학습 보고서 ===")
duri_brain/learning/self_learning_orchestrator.py:225:            print(f"📅 보고 시간: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
duri_brain/learning/self_learning_orchestrator.py:226:            print(f"🎯 현재 Phase: 1.0")
duri_brain/learning/self_learning_orchestrator.py:227:            print(f"📋 학습 모듈 수: 5개")
duri_brain/learning/self_learning_orchestrator.py:228:            print(f"📈 전체 진행률: 100.0%")
duri_brain/learning/self_learning_orchestrator.py:230:            print(f"\n✅ 주요 개선점:")
duri_brain/learning/self_learning_orchestrator.py:231:            print(f"   1. SelfEvolutionAnalyzer 성능 최적화")
duri_brain/learning/self_learning_orchestrator.py:232:            print(f"   2. SmartLearningChecker 오류 처리 강화")
duri_brain/learning/self_learning_orchestrator.py:233:            print(f"   3. LearningLoopManager 메모리 사용량 개선")
duri_brain/learning/self_learning_orchestrator.py:236:                print(f"\n⚠️  발견된 문제점:")
duri_brain/learning/self_learning_orchestrator.py:238:                    print(f"   {i}. {issue}")
duri_brain/learning/self_learning_orchestrator.py:241:                print(f"\n💡 대기 중인 개선 제안:")
duri_brain/learning/self_learning_orchestrator.py:243:                    print(f"   - {proposal.title} (우선순위: {proposal.priority})")
duri_brain/learning/self_learning_orchestrator.py:245:            print(f"\n🏥 시스템 건강도: 85.0%")
duri_brain/learning/self_learning_orchestrator.py:246:            print(f"✅ === 보고서 전송 완료 ===\n")
duri_brain/learning/self_learning_orchestrator.py:399:            print(f"\n📊 === DuRi 학습 보고서 ===")
duri_brain/learning/self_learning_orchestrator.py:400:            print(f"📅 보고 시간: {report.timestamp.strftime('%Y-%m-%d %H:%M:%S')}")
duri_brain/learning/self_learning_orchestrator.py:401:            print(f"🎯 현재 Phase: {report.phase}")
duri_brain/learning/self_learning_orchestrator.py:402:            print(f"📋 학습 모듈 수: {report.modules_count}개")
duri_brain/learning/self_learning_orchestrator.py:403:            print(f"📈 전체 진행률: {report.overall_progress:.1%}")
duri_brain/learning/self_learning_orchestrator.py:406:                print(f"\n✅ 주요 개선점:")
duri_brain/learning/self_learning_orchestrator.py:408:                    print(f"   {i}. {improvement}")
duri_brain/learning/self_learning_orchestrator.py:411:                print(f"\n⚠️  발견된 문제점:")
duri_brain/learning/self_learning_orchestrator.py:413:                    print(f"   {i}. {issue}")
duri_brain/learning/self_learning_orchestrator.py:416:                print(f"\n💡 대기 중인 개선 제안:")
duri_brain/learning/self_learning_orchestrator.py:418:                    print(f"   - {proposal.title} (우선순위: {proposal.priority})")
duri_brain/learning/self_learning_orchestrator.py:420:            print(f"\n🏥 시스템 건강도: {report.system_health['overall_health']:.1%}")
duri_brain/learning/self_learning_orchestrator.py:421:            print(f"✅ === 보고서 전송 완료 ===\n")
duri_brain/learning/self_learning_orchestrator.py:605:                    print(f"⏳ {len(report.proposals_pending)}개의 개선 제안이 아빠 승인을 기다리고 있습니다.")
duri_brain/learning/self_learning_orchestrator.py:635:    print("🧠 === DuRi 자율 학습 시스템 시작 ===")
duri_brain/learning/self_learning_orchestrator.py:640:    print("✅ === DuRi 자율 학습 시스템 활성화 완료 ===")
duri_brain/learning/self_learning_orchestrator.py:641:    print("💡 이제 DuRi가 스스로 학습하고 개선 제안을 아빠에게 보고합니다!")
duri_brain/learning/self_learning_orchestrator.py:642:    print("⏰ 자동 학습 스케줄러가 1.5시간 간격으로 실행됩니다.") 
duri_brain/thinking/phase_22_boosted.py:625:    print("🧠 Phase 22: 고급 사고 AI 시작")
duri_brain/thinking/phase_22_boosted.py:629:        print("✅ Phase 22 초기화 완료")
duri_brain/thinking/phase_22_boosted.py:635:        print(f"\n🔍 추상적 추론:")
duri_brain/thinking/phase_22_boosted.py:636:        print(f"   문제: {abstract_task.abstract_concept}")
duri_brain/thinking/phase_22_boosted.py:637:        print(f"   결론: {abstract_task.conclusion}")
duri_brain/thinking/phase_22_boosted.py:638:        print(f"   신뢰도: {abstract_task.confidence:.3f}")
duri_brain/thinking/phase_22_boosted.py:642:        print(f"\n🧠 메타인지 개발:")
duri_brain/thinking/phase_22_boosted.py:643:        print(f"   자기 인식: {meta_session.self_awareness}")
duri_brain/thinking/phase_22_boosted.py:644:        print(f"   인지 전략: {meta_session.cognitive_strategy}")
duri_brain/thinking/phase_22_boosted.py:645:        print(f"   학습 통찰: {meta_session.learning_insight}")
duri_brain/thinking/phase_22_boosted.py:649:        print(f"\n🔧 고급 문제 해결:")
duri_brain/thinking/phase_22_boosted.py:650:        print(f"   복잡성: {advanced_solution.problem_complexity}")
duri_brain/thinking/phase_22_boosted.py:651:        print(f"   전략: {advanced_solution.solution_strategy}")
duri_brain/thinking/phase_22_boosted.py:652:        print(f"   구현 계획: {len(advanced_solution.implementation_plan)}단계")
duri_brain/thinking/phase_22_boosted.py:656:        print(f"\n🎨 창의적 사고 종합:")
duri_brain/thinking/phase_22_boosted.py:657:        print(f"   결과: {creative_synthesis}")
duri_brain/thinking/phase_22_boosted.py:661:        print(f"\n🔍 복잡한 패턴 인식:")
duri_brain/thinking/phase_22_boosted.py:662:        print(f"   패턴 유형: {pattern_recognition['pattern_type']}")
duri_brain/thinking/phase_22_boosted.py:663:        print(f"   분석: {pattern_recognition['analysis']}")
duri_brain/thinking/phase_22_boosted.py:664:        print(f"   예측: {pattern_recognition['prediction']}")
duri_brain/thinking/phase_22_boosted.py:668:        print(f"\n🤔 철학적 사고:")
duri_brain/thinking/phase_22_boosted.py:669:        print(f"   문제 분석: {philosophical_thinking['problem_analysis']}")
duri_brain/thinking/phase_22_boosted.py:670:        print(f"   철학적 관점: {philosophical_thinking['philosophical_perspective']}")
duri_brain/thinking/phase_22_boosted.py:671:        print(f"   윤리적 고려: {philosophical_thinking['ethical_considerations']}")
duri_brain/thinking/phase_22_boosted.py:675:        print(f"\n📊 Phase 22 상태:")
duri_brain/thinking/phase_22_boosted.py:676:        print(f"   평균 능력 점수: {status['average_capability_score']:.3f}")
duri_brain/thinking/phase_22_boosted.py:677:        print(f"   추상적 추론 과제: {status['total_abstract_reasoning_tasks']}개")
duri_brain/thinking/phase_22_boosted.py:678:        print(f"   메타인지 세션: {status['total_meta_cognition_sessions']}개")
duri_brain/thinking/phase_22_boosted.py:679:        print(f"   고급 문제 해결: {status['total_advanced_problem_solutions']}개")
duri_brain/thinking/phase_22_boosted.py:682:        print("❌ Phase 22 초기화 실패") 
duri_brain/learning/phase_self_evaluator.py:297:        print(f"🎯 Phase Up 요청: {request.current_phase.value} → {request.target_phase.value}")
duri_brain/learning/phase_self_evaluator.py:298:        print(f"📊 신뢰도: {request.confidence:.3f}")
duri_brain/learning/phase_self_evaluator.py:299:        print(f"💭 이유: {request.reasoning}")
duri_brain/learning/phase_self_evaluator.py:303:            print(f"   {status} {achievement.description}")
duri_brain/learning/phase_self_evaluator.py:305:        print("🎯 Phase Up 준비 부족")
duri_brain/learning/phase_self_evaluator.py:309:    print(f"\n📊 현재 상태: {status}") 
duri_brain/thinking/phase_25_ethical_judgment_system.py:116:        print(f"⚖️ 윤리적 함의 분석 시작: {proposed_action[:50]}...")
duri_brain/thinking/phase_25_ethical_judgment_system.py:145:        print(f"✅ 윤리적 함의 분석 완료: 점수 {ethical_score:.2f}")
duri_brain/thinking/phase_25_ethical_judgment_system.py:325:        print("🌍 사회적 영향 평가 중...")
duri_brain/thinking/phase_25_ethical_judgment_system.py:350:        print("✅ 사회적 영향 평가 완료")
duri_brain/thinking/phase_25_ethical_judgment_system.py:421:        print("⚖️ 윤리적 의사결정 시작...")
duri_brain/thinking/phase_25_ethical_judgment_system.py:449:        print("✅ 윤리적 의사결정 완료")
duri_brain/thinking/phase_25_future_design_system.py:194:        print(f"📈 트렌드 분석 시작: {domain or '전체 도메인'}")
duri_brain/thinking/phase_25_future_design_system.py:234:        print(f"✅ 트렌드 분석 완료: {len(trends)}개 트렌드 발견")
duri_brain/thinking/phase_25_future_design_system.py:241:        print("🔮 미래 시나리오 생성 중...")
duri_brain/thinking/phase_25_future_design_system.py:254:        print(f"✅ 미래 시나리오 생성 완료: {len(scenarios)}개 시나리오")
duri_brain/thinking/phase_25_future_design_system.py:391:        print("💡 혁신 아이디어 생성 중...")
duri_brain/thinking/phase_25_future_design_system.py:408:        print(f"✅ 혁신 아이디어 생성 완료: {len(ideas)}개 아이디어")
duri_brain/thinking/phase_25_future_design_system.py:502:        print("🗺️ 전략적 로드맵 생성 중...")
duri_brain/thinking/phase_25_future_design_system.py:525:        print("✅ 전략적 로드맵 생성 완료")
duri_brain/app/startup_message.py:9:    print("=" * 80)
duri_brain/app/startup_message.py:10:    print("🧠 DuRi Brain - 시스템 헌장(Design Constitution)")
duri_brain/app/startup_message.py:11:    print("=" * 80)
duri_brain/app/startup_message.py:13:    print("""
duri_brain/app/startup_message.py:27:    print("=" * 80)
duri_brain/app/startup_message.py:28:    print("🚀 DuRi Brain 시스템이 시작되었습니다.")
duri_brain/app/startup_message.py:29:    print("=" * 80)
duri_brain/app/startup_message.py:34:    print("""
duri_brain/social/social_intelligence.py:757:    print("🤝 사회적 지능 시스템 테스트 시작")
duri_brain/social/social_intelligence.py:783:    print(f"✅ 사회적 상호작용 처리 완료: {result.interaction_id}")
duri_brain/social/social_intelligence.py:787:    print(f"📊 사회적 지능 요약: {summary['total_interactions']}개 상호작용, 성공률: {summary['success_rate']:.2f}")
duri_brain/social/social_intelligence.py:789:    print("🎉 사회적 지능 시스템 테스트 완료!")
duri_brain/app/advanced_cognitive_system.py:42:    print(f"⚠️ 모듈 임포트 실패: {e}")
duri_brain/app/advanced_cognitive_system.py:43:    print("🔧 기존 구현된 모듈들을 확인하고 경로를 수정해주세요.")
duri_brain/app/advanced_cognitive_system.py:107:        print(f"🔍 [1단계] 맥락 감지 시작: {context_type}")
duri_brain/app/advanced_cognitive_system.py:136:        print(f"✅ [1단계] 맥락 감지 완료: {len(active_contexts)}개 맥락 감지됨")
duri_brain/app/advanced_cognitive_system.py:151:        print(f"🔧 [2단계] 모듈 라우팅 시작: {len(context)}개 맥락")
duri_brain/app/advanced_cognitive_system.py:199:        print(f"✅ [2단계] 모듈 라우팅 완료: {len(active_modules)}개 모듈 활성화")
duri_brain/app/advanced_cognitive_system.py:214:        print(f"🧠 [3단계] 자원 분배 시작: {len(active_modules)}개 모듈")
duri_brain/app/advanced_cognitive_system.py:244:        print(f"✅ [3단계] 자원 분배 완료: {len(allocation)}개 모듈에 자원 할당")
duri_brain/app/advanced_cognitive_system.py:259:        print(f"🚀 [4단계] 메모리 프리페치 시작: {len(context)}개 맥락")
duri_brain/app/advanced_cognitive_system.py:279:        print(f"✅ [4단계] 메모리 프리페치 완료: {len(context)}개 맥락 사전 로딩")
duri_brain/app/advanced_cognitive_system.py:294:        print(f"🪞 [5단계] 자가 반성 시작 (트리거: {trigger})")
duri_brain/app/advanced_cognitive_system.py:319:            print(f"✅ [5단계] 자가 반성 완료: {reflection_result.get('new_insights', 0)}개 통찰 생성")
duri_brain/app/advanced_cognitive_system.py:338:        print(f"🌱 [6단계] 성장 시스템 시작")
duri_brain/app/advanced_cognitive_system.py:362:            print(f"✅ [6단계] 성장 시스템 완료: {growth_result.get('evolution_steps', 0)}개 진화 단계")
duri_brain/app/advanced_cognitive_system.py:381:        print(f"🔍 [7단계] 판단 추적 시작 (타입: {trace_type})")
duri_brain/app/advanced_cognitive_system.py:424:            print(f"✅ [7단계] 판단 추적 완료: {len(judgment_result.get('recent_traces', []))}개 최근 기록 분석")
duri_brain/app/advanced_cognitive_system.py:442:    print(f"\n{'='*60}")
duri_brain/app/advanced_cognitive_system.py:443:    print(f"🚀 DuRi 고차원적 판단-성장 루프 통합 실행 시작")
duri_brain/app/advanced_cognitive_system.py:444:    print(f"🏷️ 실행 태그: {tag}")
duri_brain/app/advanced_cognitive_system.py:445:    print(f"📅 실행 시간: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
duri_brain/app/advanced_cognitive_system.py:446:    print(f"{'='*60}\n")
duri_brain/app/advanced_cognitive_system.py:453:        print("="*50)
duri_brain/app/advanced_cognitive_system.py:454:        print("[1] 맥락 감지 시작")
duri_brain/app/advanced_cognitive_system.py:455:        print("="*50)
duri_brain/app/advanced_cognitive_system.py:457:        print(f"[1] Context detected: {context}")
duri_brain/app/advanced_cognitive_system.py:460:        print(f"❌ [1단계] 맥락 감지 실패: {e}")
duri_brain/app/advanced_cognitive_system.py:465:        print("\n" + "="*50)
duri_brain/app/advanced_cognitive_system.py:466:        print("[2] 모듈 라우팅 시작")
duri_brain/app/advanced_cognitive_system.py:467:        print("="*50)
duri_brain/app/advanced_cognitive_system.py:469:        print(f"[2] Active modules: {active_modules}")
duri_brain/app/advanced_cognitive_system.py:472:        print(f"❌ [2단계] 모듈 라우팅 실패: {e}")
duri_brain/app/advanced_cognitive_system.py:477:        print("\n" + "="*50)
duri_brain/app/advanced_cognitive_system.py:478:        print("[3] 자원 분배 시작")
duri_brain/app/advanced_cognitive_system.py:479:        print("="*50)
duri_brain/app/advanced_cognitive_system.py:481:        print(f"[3] Resource allocation status: {resource_status}")
duri_brain/app/advanced_cognitive_system.py:484:        print(f"❌ [3단계] 자원 분배 실패: {e}")
duri_brain/app/advanced_cognitive_system.py:489:        print("\n" + "="*50)
duri_brain/app/advanced_cognitive_system.py:490:        print("[4] 메모리 프리페치 시작")
duri_brain/app/advanced_cognitive_system.py:491:        print("="*50)
duri_brain/app/advanced_cognitive_system.py:493:        print(f"[4] Prefetch data: {prefetch_data}")
duri_brain/app/advanced_cognitive_system.py:496:        print(f"❌ [4단계] 메모리 프리페치 실패: {e}")
duri_brain/app/advanced_cognitive_system.py:501:        print("\n" + "="*50)
duri_brain/app/advanced_cognitive_system.py:502:        print("[5] 자가 반성 시작")
duri_brain/app/advanced_cognitive_system.py:503:        print("="*50)
duri_brain/app/advanced_cognitive_system.py:505:        print(f"[5] Self-reflection: {reflection}")
duri_brain/app/advanced_cognitive_system.py:508:        print(f"❌ [5단계] 자가 반성 실패: {e}")
duri_brain/app/advanced_cognitive_system.py:513:        print("\n" + "="*50)
duri_brain/app/advanced_cognitive_system.py:514:        print("[6] 성장 시스템 시작")
duri_brain/app/advanced_cognitive_system.py:515:        print("="*50)
duri_brain/app/advanced_cognitive_system.py:517:        print(f"[6] Growth result: {growth_result}")
duri_brain/app/advanced_cognitive_system.py:520:        print(f"❌ [6단계] 성장 시스템 실패: {e}")
duri_brain/app/advanced_cognitive_system.py:525:        print("\n" + "="*50)
duri_brain/app/advanced_cognitive_system.py:526:        print("[7] 판단 추적 시작")
duri_brain/app/advanced_cognitive_system.py:527:        print("="*50)
duri_brain/app/advanced_cognitive_system.py:529:        print(f"[7] Judgment trace: {judgment}")
duri_brain/app/advanced_cognitive_system.py:532:        print(f"❌ [7단계] 판단 추적 실패: {e}")
duri_brain/app/advanced_cognitive_system.py:549:    print(f"\n{'='*60}")
duri_brain/app/advanced_cognitive_system.py:550:    print("🎉 DuRi 고차원적 판단-성장 루프 통합 실행 완료!")
duri_brain/app/advanced_cognitive_system.py:551:    print(f"{'='*60}")
duri_brain/app/advanced_cognitive_system.py:552:    print(f"📅 실행 시간: {execution_summary['timestamp']}")
duri_brain/app/advanced_cognitive_system.py:553:    print(f"🏷️ 실행 태그: {execution_summary['tag']}")
duri_brain/app/advanced_cognitive_system.py:554:    print(f"🧠 감지된 맥락: {len(execution_summary['context'])}개")
duri_brain/app/advanced_cognitive_system.py:555:    print(f"⚙️ 활성화된 모듈: {len(execution_summary['active_modules'])}개")
duri_brain/app/advanced_cognitive_system.py:556:    print(f"🔋 자원 분배: {len(execution_summary['resource_allocation'])}개 모듈")
duri_brain/app/advanced_cognitive_system.py:557:    print(f"🗺️ 프리페치: {len(execution_summary['context'])}개 맥락")
duri_brain/app/advanced_cognitive_system.py:558:    print(f"🪞 자가 반성: {execution_summary['reflection_result'].get('status', 'unknown')}")
duri_brain/app/advanced_cognitive_system.py:559:    print(f"🌱 성장 시스템: {execution_summary['growth_result'].get('status', 'unknown')}")
duri_brain/app/advanced_cognitive_system.py:560:    print(f"🔍 판단 추적: {execution_summary['judgment_result'].get('status', 'unknown')}")
duri_brain/app/advanced_cognitive_system.py:561:    print(f"🎯 실행 상태: {execution_summary['execution_status']}")
duri_brain/app/advanced_cognitive_system.py:562:    print(f"{'='*60}")
duri_brain/app/advanced_cognitive_system.py:568:    print("🚀 DuRi 고차원적 판단-성장 루프 통합 실행 시스템")
duri_brain/app/advanced_cognitive_system.py:574:        print(f"\n✅ DuRi 고차원적 판단-성장 루프 통합 실행 성공!")
duri_brain/app/advanced_cognitive_system.py:577:        print(f"\n❌ DuRi 고차원적 판단-성장 루프 통합 실행 실패!")
duri_brain/app/main.py:56:        print(f"📥 자동화 학습 입력: {conversation_data}")
duri_brain/app/main.py:72:        print(f"❌ 자동화 학습 처리 오류: {e}")
duri_brain/app/main.py:81:        print(f"📥 적응적 학습 입력: {adaptive_data}")
duri_brain/app/main.py:106:        print(f"❌ 적응적 학습 처리 오류: {e}")
duri_brain/app/services/self_improvement_trigger.py:467:    print("🔧 SelfImprovementTrigger 테스트 시작...")
duri_brain/app/services/self_improvement_trigger.py:493:    print(f"✅ 진화 필요성 분석: {len(triggers)}개 트리거 발견")
duri_brain/app/services/self_improvement_trigger.py:496:        print(f"   - {trigger.trigger_type.value}: {trigger.description}")
duri_brain/app/services/self_improvement_trigger.py:497:        print(f"     우선순위: {trigger.priority.value}")
duri_brain/app/services/self_improvement_trigger.py:501:    print(f"✅ 진화 보고서 생성: {report.decision_rationale}")
duri_brain/app/services/self_improvement_trigger.py:502:    print(f"   위험도: {report.risk_assessment}")
duri_brain/app/services/self_improvement_trigger.py:506:    print(f"✅ 관리자 보고 필요: {should_report}")
duri_brain/app/services/self_improvement_trigger.py:510:        print(f"   관리자 보고서: {manager_report}")
duri_brain/app/services/self_improvement_trigger.py:514:    print(f"✅ 트리거 통계: {statistics['total_triggers']}개 트리거")
duri_brain/app/services/self_improvement_trigger.py:515:    print(f"   유형별 통계: {statistics['type_statistics']}")
duri_brain/app/services/self_improvement_trigger.py:516:    print(f"   우선순위별 통계: {statistics['priority_statistics']}")
duri_brain/app/services/self_improvement_trigger.py:520:    print(f"✅ 트리거 데이터 내보내기: {len(export_data['triggers'])}개 트리거")
duri_brain/app/services/self_improvement_trigger.py:522:    print("🎉 SelfImprovementTrigger 테스트 완료!")
duri_brain/app/services/ethical_conversation_service.py:390:    print("⚖️ EthicalConversationSystem 테스트 시작...")
duri_brain/app/services/ethical_conversation_service.py:405:    print(f"✅ 윤리적 딜레마 분석: {analysis.ethical_judgment.value}")
duri_brain/app/services/ethical_conversation_service.py:406:    print(f"   딜레마 유형: {analysis.dilemma_type.value}")
duri_brain/app/services/ethical_conversation_service.py:407:    print(f"   관련 원칙: {[p.value for p in analysis.involved_principles]}")
duri_brain/app/services/ethical_conversation_service.py:408:    print(f"   신뢰도: {analysis.confidence_score:.2f}")
duri_brain/app/services/ethical_conversation_service.py:409:    print(f"   권장 행동: {analysis.recommended_action}")
duri_brain/app/services/ethical_conversation_service.py:414:    print(f"✅ 윤리적 대화 완료: {len(conversation.conversation_flow)}개 대화 단계")
duri_brain/app/services/ethical_conversation_service.py:415:    print(f"   감정적 지원: {conversation.emotional_support}")
duri_brain/app/services/ethical_conversation_service.py:416:    print(f"   지도: {conversation.guidance_provided}")
duri_brain/app/services/ethical_conversation_service.py:417:    print(f"   후속 행동: {len(conversation.follow_up_actions)}개")
duri_brain/app/services/ethical_conversation_service.py:421:    print(f"✅ 윤리적 대화 통계: {statistics['total_analyses']}개 분석, {statistics['total_conversations']}개 대화")
duri_brain/app/services/ethical_conversation_service.py:422:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/app/services/ethical_conversation_service.py:423:    print(f"   판단 통계: {statistics['judgment_statistics']}")
duri_brain/app/services/ethical_conversation_service.py:427:    print(f"✅ 윤리적 대화 데이터 내보내기: {len(export_data['ethical_analyses'])}개 분석")
duri_brain/app/services/ethical_conversation_service.py:429:    print("🎉 EthicalConversationSystem 테스트 완료!")
duri_brain/app/services/advanced_family_centric_agi_system.py:436:    print("🧠 AdvancedFamilyCentricAGISystem 테스트 시작...")
duri_brain/app/services/advanced_family_centric_agi_system.py:455:    print(f"✅ AGI 능력 평가 완료: {assessment.confidence_level:.2f}")
duri_brain/app/services/advanced_family_centric_agi_system.py:471:    print(f"✅ 통합 시스템 생성 완료: {integrated_system.integration_effectiveness:.2f}")
duri_brain/app/services/advanced_family_centric_agi_system.py:493:    print(f"✅ AGI 성장 계획 생성 완료: {growth_plan.plan_confidence:.2f}")
duri_brain/app/services/advanced_family_centric_agi_system.py:525:    print(f"✅ AGI 상태 평가 완료: {status.overall_status}")
duri_brain/app/services/advanced_family_centric_agi_system.py:529:    print(f"📊 통계: 평가 {stats['total_assessments']}개, 시스템 {stats['total_systems']}개")
duri_brain/app/services/advanced_family_centric_agi_system.py:530:    print(f"🎯 평균 신뢰도: {stats['average_confidence']:.2f}")
duri_brain/app/services/advanced_family_centric_agi_system.py:531:    print(f"🔧 평균 통합 효과성: {stats['average_integration_effectiveness']:.2f}")
duri_brain/app/services/advanced_family_centric_agi_system.py:532:    print(f"📈 평균 계획 신뢰도: {stats['average_plan_confidence']:.2f}")
duri_brain/app/services/advanced_family_centric_agi_system.py:533:    print(f"🌟 현재 AGI 수준: {stats['current_agi_level']}")
duri_brain/app/services/advanced_family_centric_agi_system.py:535:    print("✅ AdvancedFamilyCentricAGISystem 테스트 완료!")
duri_brain/app/services/quasi_family_demo.py:332:    print(json.dumps(result, indent=2, ensure_ascii=False)) 
duri_brain/app/services/advanced_autonomous_evolution_system.py:758:    print("🚀 AdvancedAutonomousEvolutionSystem 테스트 시작...")
duri_brain/app/services/advanced_autonomous_evolution_system.py:785:    print(f"✅ 진화 필요성 분석: {len(triggers)}개 트리거")
duri_brain/app/services/advanced_autonomous_evolution_system.py:786:    print(f"   트리거: {[t.value for t in triggers]}")
duri_brain/app/services/advanced_autonomous_evolution_system.py:796:    print(f"✅ 진화 결정: {decision.direction.value}")
duri_brain/app/services/advanced_autonomous_evolution_system.py:797:    print(f"   신뢰도: {decision.confidence_level.value}")
duri_brain/app/services/advanced_autonomous_evolution_system.py:798:    print(f"   예상 이익: {len(decision.expected_benefits)}개")
duri_brain/app/services/advanced_autonomous_evolution_system.py:799:    print(f"   잠재적 위험: {len(decision.potential_risks)}개")
duri_brain/app/services/advanced_autonomous_evolution_system.py:804:    print(f"✅ 진화 계획: {len(plan.implementation_steps)}개 단계")
duri_brain/app/services/advanced_autonomous_evolution_system.py:805:    print(f"   타임라인: {plan.timeline}")
duri_brain/app/services/advanced_autonomous_evolution_system.py:806:    print(f"   성공 지표: {len(plan.success_metrics)}개")
duri_brain/app/services/advanced_autonomous_evolution_system.py:807:    print(f"   위험 완화: {len(plan.risk_mitigation)}개")
duri_brain/app/services/advanced_autonomous_evolution_system.py:812:    print(f"✅ 진화 실행 시작: {execution.status.value}")
duri_brain/app/services/advanced_autonomous_evolution_system.py:813:    print(f"   현재 단계: {execution.current_step}")
duri_brain/app/services/advanced_autonomous_evolution_system.py:823:    print(f"✅ 진행 상황 업데이트: 50% 완료")
duri_brain/app/services/advanced_autonomous_evolution_system.py:842:    print(f"✅ 진화 결과 평가: 효과성 {result.evolution_effectiveness:.2f}")
duri_brain/app/services/advanced_autonomous_evolution_system.py:843:    print(f"   자기 개선 점수: {result.self_improvement_score:.2f}")
duri_brain/app/services/advanced_autonomous_evolution_system.py:844:    print(f"   학습한 교훈: {len(result.lessons_learned)}개")
duri_brain/app/services/advanced_autonomous_evolution_system.py:845:    print(f"   다음 목표: {len(result.next_evolution_targets)}개")
duri_brain/app/services/advanced_autonomous_evolution_system.py:849:    print(f"✅ 자율 진화 통계: {statistics['total_decisions']}개 결정")
duri_brain/app/services/advanced_autonomous_evolution_system.py:850:    print(f"   평균 효과성: {statistics['average_effectiveness']:.2f}")
duri_brain/app/services/advanced_autonomous_evolution_system.py:851:    print(f"   평균 자기 개선: {statistics['average_self_improvement']:.2f}")
duri_brain/app/services/advanced_autonomous_evolution_system.py:852:    print(f"   트리거별 통계: {statistics['trigger_statistics']}")
duri_brain/app/services/advanced_autonomous_evolution_system.py:853:    print(f"   방향별 통계: {statistics['direction_statistics']}")
duri_brain/app/services/advanced_autonomous_evolution_system.py:854:    print(f"   신뢰도별 통계: {statistics['confidence_statistics']}")
duri_brain/app/services/advanced_autonomous_evolution_system.py:858:    print(f"✅ 자율 진화 데이터 내보내기: {len(export_data['evolution_decisions'])}개 결정")
duri_brain/app/services/advanced_autonomous_evolution_system.py:860:    print("🎉 AdvancedAutonomousEvolutionSystem 테스트 완료!")
duri_brain/app/services/text_learning_service.py:450:    print("🧠 TextBasedLearningSystem 테스트 시작...")
duri_brain/app/services/text_learning_service.py:470:    print(f"✅ 텍스트 콘텐츠 추가: {text_content.title}")
duri_brain/app/services/text_learning_service.py:474:    print(f"✅ 지식 추출 완료: {len(extracted_knowledge.key_concepts)}개 키 컨셉")
duri_brain/app/services/text_learning_service.py:475:    print(f"   주요 아이디어: {len(extracted_knowledge.main_ideas)}개")
duri_brain/app/services/text_learning_service.py:476:    print(f"   가족 관련 인사이트: {len(extracted_knowledge.family_relevant_insights)}개")
duri_brain/app/services/text_learning_service.py:477:    print(f"   학습 카테고리: {extracted_knowledge.learning_category.value}")
duri_brain/app/services/text_learning_service.py:478:    print(f"   학습 수준: {extracted_knowledge.learning_level.value}")
duri_brain/app/services/text_learning_service.py:479:    print(f"   신뢰도 점수: {extracted_knowledge.confidence_score:.2f}")
duri_brain/app/services/text_learning_service.py:490:    print(f"✅ 학습 진도 업데이트: {learning_progress.completion_percentage}% 완료")
duri_brain/app/services/text_learning_service.py:495:    print(f"✅ 학습 추천 {len(recommendations)}개 생성")
duri_brain/app/services/text_learning_service.py:499:    print(f"✅ 학습 통계 생성: {statistics['total_contents']}개 콘텐츠, {statistics['total_knowledge']}개 지식")
duri_brain/app/services/text_learning_service.py:503:    print(f"✅ 학습 데이터 내보내기: {len(export_data['text_contents'])}개 콘텐츠")
duri_brain/app/services/text_learning_service.py:505:    print("🎉 TextBasedLearningSystem 테스트 완료!")
duri_core/evolution/README.md:113:print(f"진화 상태: {evolution_metadata['evolution_state']}")
duri_core/evolution/README.md:114:print(f"학습 인사이트: {len(learning_insights)}개")
duri_core/evolution/README.md:129:    print(f"추천 액션: {action} (신뢰도: {confidence:.2f})")
duri_core/evolution/README.md:241:    print(f"{insight['title']}: {insight['description']}")
duri_core/evolution/README.md:247:print(f"진화 메트릭: {stats['evolution_metrics']}")
duri_core/evolution/README.md:248:print(f"현재 세션: {stats['current_session']}")
duri_brain/app/services/advanced_social_adaptation_system.py:511:    print("🧠 AdvancedSocialAdaptationSystem 테스트 시작...")
duri_brain/app/services/advanced_social_adaptation_system.py:526:    print(f"✅ 사회적 상황 기록 완료: {situation.id}")
duri_brain/app/services/advanced_social_adaptation_system.py:534:    print(f"✅ 적응적 반응 생성 완료: {response.adaptation_level.value}")
duri_brain/app/services/advanced_social_adaptation_system.py:545:    print(f"✅ 사회적 학습 기록 완료: {learning.learning_effectiveness:.2f}")
duri_brain/app/services/advanced_social_adaptation_system.py:549:    print(f"✅ 적응 패턴 분석 완료: {pattern.pattern_reliability:.2f}")
duri_brain/app/services/advanced_social_adaptation_system.py:553:    print(f"📊 통계: 상황 {stats['total_situations']}개, 반응 {stats['total_responses']}개")
duri_brain/app/services/advanced_social_adaptation_system.py:554:    print(f"📈 평균 효과성: {stats['average_effectiveness']:.2f}")
duri_brain/app/services/advanced_social_adaptation_system.py:555:    print(f"🎯 평균 신뢰도: {stats['average_confidence']:.2f}")
duri_brain/app/services/advanced_social_adaptation_system.py:557:    print("✅ AdvancedSocialAdaptationSystem 테스트 완료!")
duri_brain/app/services/family_conversation_precision_service.py:584:    print("🎯 FamilyConversationPrecisionSystem 테스트 시작...")
duri_brain/app/services/family_conversation_precision_service.py:602:    print(f"✅ 대화 정밀도 분석: {precision_analysis.overall_precision:.2f} 전체 정밀도")
duri_brain/app/services/family_conversation_precision_service.py:603:    print(f"   관계 정확도: {precision_analysis.relationship_accuracy:.2f}")
duri_brain/app/services/family_conversation_precision_service.py:604:    print(f"   맥락 적절성: {precision_analysis.context_appropriateness:.2f}")
duri_brain/app/services/family_conversation_precision_service.py:605:    print(f"   감정 민감도: {precision_analysis.emotional_sensitivity:.2f}")
duri_brain/app/services/family_conversation_precision_service.py:606:    print(f"   가족 가치 정렬: {precision_analysis.family_value_alignment:.2f}")
duri_brain/app/services/family_conversation_precision_service.py:607:    print(f"   개선 제안: {precision_analysis.improvement_suggestions}")
duri_brain/app/services/family_conversation_precision_service.py:611:    print(f"✅ 정밀도 향상 응답: {precision_response.confidence_score:.2f} 신뢰도")
duri_brain/app/services/family_conversation_precision_service.py:612:    print(f"   원래 메시지: {precision_response.original_message}")
duri_brain/app/services/family_conversation_precision_service.py:613:    print(f"   향상된 응답: {precision_response.precision_enhanced_response}")
duri_brain/app/services/family_conversation_precision_service.py:614:    print(f"   관계별 특화 요소: {precision_response.relationship_specific_elements}")
duri_brain/app/services/family_conversation_precision_service.py:615:    print(f"   맥락 적절한 구문: {precision_response.context_appropriate_phrases}")
duri_brain/app/services/family_conversation_precision_service.py:616:    print(f"   감정 지원 요소: {precision_response.emotional_support_elements}")
duri_brain/app/services/family_conversation_precision_service.py:620:    print(f"✅ 정밀도 통계: {statistics['total_analyses']}개 분석, {statistics['total_responses']}개 응답")
duri_brain/app/services/family_conversation_precision_service.py:621:    print(f"   정밀도 수준별: {statistics['precision_level_stats']}")
duri_brain/app/services/family_conversation_precision_service.py:622:    print(f"   관계별: {statistics['relationship_stats']}")
duri_brain/app/services/family_conversation_precision_service.py:623:    print(f"   평균 전체 정밀도: {statistics['average_overall_precision']:.2f}")
duri_brain/app/services/family_conversation_precision_service.py:624:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/app/services/family_conversation_precision_service.py:628:    print(f"✅ 정밀도 데이터 내보내기: {len(export_data['precision_analyses'])}개 분석, {len(export_data['precision_responses'])}개 응답")
duri_brain/app/services/family_conversation_precision_service.py:630:    print("🎉 FamilyConversationPrecisionSystem 테스트 완료!")
duri_brain/app/services/integrated_learning_system.py:454:    print("🧠 IntegratedLearningSystem 테스트 시작...")
duri_brain/app/services/integrated_learning_system.py:477:    print(f"✅ 학습 경험 기록: {experience1.domain.value}")
duri_brain/app/services/integrated_learning_system.py:478:    print(f"   학습 방법: {experience1.method.value}")
duri_brain/app/services/integrated_learning_system.py:479:    print(f"   신뢰도: {experience1.confidence_gained:.2f}")
duri_brain/app/services/integrated_learning_system.py:491:    print(f"✅ 학습 통합 생성: {integration.integration_type.value}")
duri_brain/app/services/integrated_learning_system.py:492:    print(f"   통합 설명: {integration.integration_description[:50]}...")
duri_brain/app/services/integrated_learning_system.py:493:    print(f"   신뢰도: {integration.confidence_score:.2f}")
duri_brain/app/services/integrated_learning_system.py:509:    print(f"✅ 학습 경로 개발: {path.family_member}")
duri_brain/app/services/integrated_learning_system.py:510:    print(f"   학습 목표: {len(path.learning_goals)}개")
duri_brain/app/services/integrated_learning_system.py:511:    print(f"   다음 마일스톤: {len(path.next_milestones)}개")
duri_brain/app/services/integrated_learning_system.py:512:    print(f"   신뢰도: {path.confidence_score:.2f}")
duri_brain/app/services/integrated_learning_system.py:516:    print(f"✅ 영역 간 학습 분석: {len(cross_domain_integrations)}개 통합 발견")
duri_brain/app/services/integrated_learning_system.py:520:    print(f"✅ 가족 학습 보고서 생성: {report['total_experiences']}개 경험, {report['total_integrations']}개 통합")
duri_brain/app/services/integrated_learning_system.py:521:    print(f"   전체 학습 진도: {report['overall_learning_progress']:.2f}")
duri_brain/app/services/integrated_learning_system.py:525:    print(f"✅ 통합 학습 통계: {statistics['total_experiences']}개 경험, {statistics['total_integrations']}개 통합")
duri_brain/app/services/integrated_learning_system.py:526:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/app/services/integrated_learning_system.py:527:    print(f"   학습 방법 통계: {statistics['method_statistics']}")
duri_brain/app/services/integrated_learning_system.py:531:    print(f"✅ 통합 학습 데이터 내보내기: {len(export_data['learning_experiences'])}개 경험")
duri_brain/app/services/integrated_learning_system.py:533:    print("🎉 IntegratedLearningSystem 테스트 완료!")
duri_brain/app/services/pre_family_learning_demo.py:30:        print("🌟 DuRi 준 가족 학습 시스템 데모 시작 🌟")
duri_brain/app/services/pre_family_learning_demo.py:31:        print("=" * 60)
duri_brain/app/services/pre_family_learning_demo.py:45:        print("=" * 60)
duri_brain/app/services/pre_family_learning_demo.py:46:        print("🎉 DuRi 준 가족 학습 시스템 데모 완료 🎉")
duri_brain/app/services/pre_family_learning_demo.py:50:        print("\n👨‍👩‍👧‍👦 가상 가족 구성원 소개")
duri_brain/app/services/pre_family_learning_demo.py:51:        print("-" * 40)
duri_brain/app/services/pre_family_learning_demo.py:56:            print(f"\n👤 {member['name']} ({member['role']})")
duri_brain/app/services/pre_family_learning_demo.py:57:            print(f"   📚 전문 분야: {', '.join(member['expertise'])}")
duri_brain/app/services/pre_family_learning_demo.py:58:            print(f"   🎯 학습 스타일: {member['learning_style']}")
duri_brain/app/services/pre_family_learning_demo.py:59:            print(f"   💝 성격: {member['personality']['temperament']}")
duri_brain/app/services/pre_family_learning_demo.py:60:            print(f"   🗣️ 소통 방식: {member['personality']['communication_style']}")
duri_brain/app/services/pre_family_learning_demo.py:61:            print(f"   🎨 가치관: {', '.join(member['personality']['values'])}")
duri_brain/app/services/pre_family_learning_demo.py:62:            print(f"   📖 가르침 방식: {member['personality']['teaching_method']}")
duri_brain/app/services/pre_family_learning_demo.py:63:            print(f"   🤝 신뢰도: {member['trust_level']:.2f}")
duri_brain/app/services/pre_family_learning_demo.py:67:        print("\n🚀 DuRi 자율 학습 시작")
duri_brain/app/services/pre_family_learning_demo.py:68:        print("-" * 40)
duri_brain/app/services/pre_family_learning_demo.py:72:        print(f"\n📋 사용 가능한 학습 주제 ({len(topics)}개):")
duri_brain/app/services/pre_family_learning_demo.py:75:            print(f"   {i}. {topic['title']}")
duri_brain/app/services/pre_family_learning_demo.py:76:            print(f"      📂 카테고리: {topic['category']}")
duri_brain/app/services/pre_family_learning_demo.py:77:            print(f"      ⭐ 우선순위: {topic['priority']}")
duri_brain/app/services/pre_family_learning_demo.py:78:            print(f"      ⏱️ 예상 시간: {topic['estimated_duration']}분")
duri_brain/app/services/pre_family_learning_demo.py:79:            print(f"      🎯 관심도: {topic['interest_level']:.2f}")
duri_brain/app/services/pre_family_learning_demo.py:80:            print(f"      📊 난이도: {topic['difficulty_level']:.2f}")
duri_brain/app/services/pre_family_learning_demo.py:81:            print()
duri_brain/app/services/pre_family_learning_demo.py:84:        print("🎯 DuRi가 최적의 학습 주제를 선택하고 있습니다...")
duri_brain/app/services/pre_family_learning_demo.py:88:            print(f"✅ 자율 학습 세션 시작: {session_id}")
duri_brain/app/services/pre_family_learning_demo.py:90:            print("❌ 자율 학습 시작 실패")
duri_brain/app/services/pre_family_learning_demo.py:94:        print("\n📚 학습 과정 시연")
duri_brain/app/services/pre_family_learning_demo.py:95:        print("-" * 40)
duri_brain/app/services/pre_family_learning_demo.py:100:            print(f"📖 현재 학습 주제: {current_session.topic.title}")
duri_brain/app/services/pre_family_learning_demo.py:101:            print(f"👥 참여 가족 구성원: {len(current_session.participants)}명")
duri_brain/app/services/pre_family_learning_demo.py:102:            print(f"⏰ 예상 학습 시간: {current_session.topic.estimated_duration}분")
duri_brain/app/services/pre_family_learning_demo.py:103:            print(f"📂 카테고리: {current_session.topic.category.value}")
duri_brain/app/services/pre_family_learning_demo.py:104:            print(f"🎯 학습 목표:")
duri_brain/app/services/pre_family_learning_demo.py:106:                print(f"   {i}. {objective}")
duri_brain/app/services/pre_family_learning_demo.py:109:            print(f"\n🔄 학습 과정 시뮬레이션...")
duri_brain/app/services/pre_family_learning_demo.py:112:            print("   1️⃣ 주제 탐색 단계")
duri_brain/app/services/pre_family_learning_demo.py:114:            print("   2️⃣ 가족 구성원별 관점 수집")
duri_brain/app/services/pre_family_learning_demo.py:116:            print("   3️⃣ 통합 학습")
duri_brain/app/services/pre_family_learning_demo.py:118:            print("   4️⃣ 피드백 및 개선")
duri_brain/app/services/pre_family_learning_demo.py:120:            print("   5️⃣ 다음 단계 계획")
duri_brain/app/services/pre_family_learning_demo.py:123:            print("✅ 학습 과정 완료!")
duri_brain/app/services/pre_family_learning_demo.py:125:            print("❌ 현재 활성화된 학습 세션이 없습니다.")
duri_brain/app/services/pre_family_learning_demo.py:129:        print("\n📊 학습 결과 분석")
duri_brain/app/services/pre_family_learning_demo.py:130:        print("-" * 40)
duri_brain/app/services/pre_family_learning_demo.py:134:        print(f"👨‍👩‍👧‍👦 가상 가족 학습 통계:")
duri_brain/app/services/pre_family_learning_demo.py:135:        print(f"   📈 총 학습 세션: {family_stats['total_sessions']}개")
duri_brain/app/services/pre_family_learning_demo.py:136:        print(f"   👥 가족 구성원: {family_stats['total_members']}명")
duri_brain/app/services/pre_family_learning_demo.py:139:        print(f"\n👤 가족 구성원별 상세 통계:")
duri_brain/app/services/pre_family_learning_demo.py:141:            print(f"   {stats['name']}:")
duri_brain/app/services/pre_family_learning_demo.py:142:            print(f"     🎭 역할: {stats['role']}")
duri_brain/app/services/pre_family_learning_demo.py:143:            print(f"     🤝 신뢰도: {stats['trust_level']:.2f}")
duri_brain/app/services/pre_family_learning_demo.py:144:            print(f"     📝 상호작용 횟수: {stats['interaction_count']}회")
duri_brain/app/services/pre_family_learning_demo.py:146:                print(f"     ⏰ 마지막 상호작용: {stats['last_interaction']}")
duri_brain/app/services/pre_family_learning_demo.py:150:        print(f"\n🎯 자율 학습 통계:")
duri_brain/app/services/pre_family_learning_demo.py:151:        print(f"   📚 총 학습 주제: {learning_stats['total_topics']}개")
duri_brain/app/services/pre_family_learning_demo.py:152:        print(f"   ✅ 완료된 세션: {learning_stats['total_sessions']}개")
duri_brain/app/services/pre_family_learning_demo.py:156:            print(f"\n📂 카테고리별 학습 통계:")
duri_brain/app/services/pre_family_learning_demo.py:158:                print(f"   {category}:")
duri_brain/app/services/pre_family_learning_demo.py:159:                print(f"     📊 학습 횟수: {stats['count']}회")
duri_brain/app/services/pre_family_learning_demo.py:160:                print(f"     😊 평균 만족도: {stats['avg_satisfaction']:.2f}")
duri_brain/app/services/pre_family_learning_demo.py:164:        print(f"\n🎯 학습 선호도:")
duri_brain/app/services/pre_family_learning_demo.py:165:        print(f"   📊 선호 난이도: {preferences['difficulty_preference']:.2f}")
duri_brain/app/services/pre_family_learning_demo.py:166:        print(f"   ⏱️ 선호 지속시간: {preferences['duration_preference']}분")
duri_brain/app/services/pre_family_learning_demo.py:167:        print(f"   🎯 관심 분야: {preferences['interest_focus']}")
duri_brain/app/services/advanced_growth_acceleration_system.py:539:    print("🚀 AdvancedGrowthAccelerationSystem 테스트 시작...")
duri_brain/app/services/advanced_growth_acceleration_system.py:550:    print(f"✅ 성장 패턴 분석: {pattern.pattern_type}")
duri_brain/app/services/advanced_growth_acceleration_system.py:551:    print(f"   효율성 수준: {pattern.efficiency_level.value}")
duri_brain/app/services/advanced_growth_acceleration_system.py:552:    print(f"   성과 지표: {len(pattern.performance_metrics)}개")
duri_brain/app/services/advanced_growth_acceleration_system.py:553:    print(f"   가족 영향: {pattern.family_impact}")
duri_brain/app/services/advanced_growth_acceleration_system.py:566:    print(f"✅ 가속화 전략 생성: {strategy.strategy_type.value}")
duri_brain/app/services/advanced_growth_acceleration_system.py:567:    print(f"   예상 개선 효과: {len(strategy.expected_improvement)}개 지표")
duri_brain/app/services/advanced_growth_acceleration_system.py:568:    print(f"   자원 요구사항: {len(strategy.resource_requirements)}개")
duri_brain/app/services/advanced_growth_acceleration_system.py:569:    print(f"   위험 평가: {strategy.risk_assessment}")
duri_brain/app/services/advanced_growth_acceleration_system.py:594:    print(f"✅ 성과 측정: {measurement.measurement_period}")
duri_brain/app/services/advanced_growth_acceleration_system.py:595:    print(f"   효율성 점수: {measurement.efficiency_score:.2f}")
duri_brain/app/services/advanced_growth_acceleration_system.py:596:    print(f"   평균 개선률: {sum(measurement.improvement_rate.values()) / len(measurement.improvement_rate):.2f}")
duri_brain/app/services/advanced_growth_acceleration_system.py:609:    print(f"✅ 지속적 개선 계획: {improvement.improvement_type}")
duri_brain/app/services/advanced_growth_acceleration_system.py:610:    print(f"   대상 영역: {len(improvement.target_areas)}개")
duri_brain/app/services/advanced_growth_acceleration_system.py:611:    print(f"   성공 지표: {len(improvement.success_metrics)}개")
duri_brain/app/services/advanced_growth_acceleration_system.py:612:    print(f"   예상 결과: {len(improvement.expected_outcomes)}개")
duri_brain/app/services/advanced_growth_acceleration_system.py:616:    print(f"✅ 가속화 통계: {statistics['total_patterns']}개 패턴")
duri_brain/app/services/advanced_growth_acceleration_system.py:617:    print(f"   현재 단계: {statistics['current_phase']}")
duri_brain/app/services/advanced_growth_acceleration_system.py:618:    print(f"   평균 성과: {statistics['average_performance']:.2f}")
duri_brain/app/services/advanced_growth_acceleration_system.py:619:    print(f"   평균 개선률: {statistics['average_improvement']:.2f}")
duri_brain/app/services/advanced_growth_acceleration_system.py:620:    print(f"   단계별 통계: {statistics['phase_statistics']}")
duri_brain/app/services/advanced_growth_acceleration_system.py:621:    print(f"   전략별 통계: {statistics['strategy_statistics']}")
duri_brain/app/services/advanced_growth_acceleration_system.py:622:    print(f"   효율성별 통계: {statistics['efficiency_statistics']}")
duri_brain/app/services/advanced_growth_acceleration_system.py:626:    print(f"✅ 가속화 데이터 내보내기: {len(export_data['growth_patterns'])}개 패턴")
duri_brain/app/services/advanced_growth_acceleration_system.py:628:    print("🎉 AdvancedGrowthAccelerationSystem 테스트 완료!")
duri_brain/app/services/advanced_emotional_intelligence_system.py:594:    print("🧠 AdvancedEmotionalIntelligenceSystem 테스트 시작...")
duri_brain/app/services/advanced_emotional_intelligence_system.py:607:    print(f"✅ 감정적 상황 분석: {len(involved_members)}명 참여")
duri_brain/app/services/advanced_emotional_intelligence_system.py:608:    print(f"   감정 상태: {len(situation.emotional_states)}개")
duri_brain/app/services/advanced_emotional_intelligence_system.py:609:    print(f"   감정적 갈등: {len(situation.emotional_conflicts)}개")
duri_brain/app/services/advanced_emotional_intelligence_system.py:614:    print(f"✅ 감정 분석 완료: {len(analysis.response_strategies)}개 전략")
duri_brain/app/services/advanced_emotional_intelligence_system.py:615:    print(f"   감정 패턴: {len(analysis.emotional_patterns)}개")
duri_brain/app/services/advanced_emotional_intelligence_system.py:616:    print(f"   갈등 분석: {len(analysis.conflict_analysis)}개")
duri_brain/app/services/advanced_emotional_intelligence_system.py:617:    print(f"   감정적 필요: {len(analysis.emotional_needs)}개")
duri_brain/app/services/advanced_emotional_intelligence_system.py:618:    print(f"   신뢰도: {analysis.confidence_score:.2f}")
duri_brain/app/services/advanced_emotional_intelligence_system.py:619:    print(f"   감정적 영향: {analysis.emotional_impact}")
duri_brain/app/services/advanced_emotional_intelligence_system.py:624:    print(f"✅ 감정적 대응 생성: {response.primary_strategy.value}")
duri_brain/app/services/advanced_emotional_intelligence_system.py:625:    print(f"   구체적 행동: {len(response.specific_actions)}개")
duri_brain/app/services/advanced_emotional_intelligence_system.py:626:    print(f"   감정적 지원: {len(response.emotional_support)}개")
duri_brain/app/services/advanced_emotional_intelligence_system.py:627:    print(f"   소통 가이드: {len(response.communication_guidance)}개")
duri_brain/app/services/advanced_emotional_intelligence_system.py:628:    print(f"   후속 행동: {len(response.follow_up_actions)}개")
duri_brain/app/services/advanced_emotional_intelligence_system.py:629:    print(f"   예상 결과: {len(response.expected_outcomes)}개")
duri_brain/app/services/advanced_emotional_intelligence_system.py:630:    print(f"   위험 평가: {len(response.risk_assessment)}개")
duri_brain/app/services/advanced_emotional_intelligence_system.py:634:    print(f"✅ 감정 통계: {statistics['total_situations']}개 상황")
duri_brain/app/services/advanced_emotional_intelligence_system.py:635:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/app/services/advanced_emotional_intelligence_system.py:636:    print(f"   감정 상태별 통계: {len(statistics['emotion_statistics'])}개")
duri_brain/app/services/advanced_emotional_intelligence_system.py:637:    print(f"   갈등 유형별 통계: {statistics['conflict_statistics']}")
duri_brain/app/services/advanced_emotional_intelligence_system.py:638:    print(f"   전략별 통계: {statistics['strategy_statistics']}")
duri_brain/app/services/advanced_emotional_intelligence_system.py:642:    print(f"✅ 감정 데이터 내보내기: {len(export_data['emotional_situations'])}개 상황")
duri_brain/app/services/advanced_emotional_intelligence_system.py:644:    print("🎉 AdvancedEmotionalIntelligenceSystem 테스트 완료!")
duri_brain/app/services/real_family_interaction_mvp.py:505:    print("🏠 RealFamilyInteractionMVP 테스트 시작...")
duri_brain/app/services/real_family_interaction_mvp.py:509:    print("✅ HTML 템플릿 생성 완료")
duri_brain/app/services/real_family_interaction_mvp.py:516:    print(f"✅ 일일 질문 생성 완료: {len(questions)}개")
duri_brain/app/services/real_family_interaction_mvp.py:519:    print("🌐 웹 서버를 시작합니다...")
duri_brain/app/services/real_family_interaction_mvp.py:522:    print("✅ RealFamilyInteractionMVP 테스트 완료!")
duri_brain/app/services/real_family_interaction_mvp.py:523:    print("🌐 웹 브라우저에서 http://localhost:5000 으로 접속하여 실제 테스트를 진행하세요!")
duri_brain/app/services/real_family_interaction_mvp.py:524:    print("📱 가족 구성원들과 함께 실제 상호작용을 테스트해보세요!")
duri_brain/app/services/real_family_interaction_mvp.py:532:        print("\n🛑 서버를 종료합니다...")
duri_brain/app/services/metacognitive_learning_system.py:541:    print("🧠 MetacognitiveLearningSystem 테스트 시작...")
duri_brain/app/services/metacognitive_learning_system.py:553:    print(f"✅ 학습 세션 수행: {session.strategy_used.value}")
duri_brain/app/services/metacognitive_learning_system.py:554:    print(f"   메타인지 과정: {session.metacognitive_process.value}")
duri_brain/app/services/metacognitive_learning_system.py:555:    print(f"   학습 효과성: {session.effectiveness.value}")
duri_brain/app/services/metacognitive_learning_system.py:556:    print(f"   신뢰도 변화: {session.initial_confidence:.2f} → {session.final_confidence:.2f}")
duri_brain/app/services/metacognitive_learning_system.py:557:    print(f"   적응 여부: {session.adaptation_made.value if session.adaptation_made else '없음'}")
duri_brain/app/services/metacognitive_learning_system.py:562:    print(f"✅ 메타인지 성과 분석 완료")
duri_brain/app/services/metacognitive_learning_system.py:563:    print(f"   전략 효과성: {len(analysis.strategy_effectiveness)}개 전략 분석")
duri_brain/app/services/metacognitive_learning_system.py:564:    print(f"   과정 통찰: {len(analysis.process_insights)}개 과정")
duri_brain/app/services/metacognitive_learning_system.py:565:    print(f"   학습 패턴: {len(analysis.learning_patterns)}개 패턴")
duri_brain/app/services/metacognitive_learning_system.py:566:    print(f"   개선 제안: {len(analysis.improvement_suggestions)}개 제안")
duri_brain/app/services/metacognitive_learning_system.py:567:    print(f"   신뢰도: {analysis.confidence_score:.2f}")
duri_brain/app/services/metacognitive_learning_system.py:578:    print(f"✅ 학습 전략 최적화: {optimization.current_strategy.value} → {optimization.recommended_strategy.value}")
duri_brain/app/services/metacognitive_learning_system.py:579:    print(f"   최적화 이유: {optimization.optimization_reason}")
duri_brain/app/services/metacognitive_learning_system.py:580:    print(f"   예상 개선도: {optimization.expected_improvement:.2f}")
duri_brain/app/services/metacognitive_learning_system.py:581:    print(f"   구현 단계: {len(optimization.implementation_steps)}개")
duri_brain/app/services/metacognitive_learning_system.py:582:    print(f"   신뢰도: {optimization.confidence_score:.2f}")
duri_brain/app/services/metacognitive_learning_system.py:586:    print(f"✅ 메타인지 통계: {statistics['total_sessions']}개 세션")
duri_brain/app/services/metacognitive_learning_system.py:587:    print(f"   평균 신뢰도 향상: {statistics['average_confidence_gain']:.2f}")
duri_brain/app/services/metacognitive_learning_system.py:588:    print(f"   전략별 통계: {len(statistics['strategy_statistics'])}개 전략")
duri_brain/app/services/metacognitive_learning_system.py:589:    print(f"   과정별 통계: {statistics['process_statistics']}")
duri_brain/app/services/metacognitive_learning_system.py:593:    print(f"✅ 메타인지 데이터 내보내기: {len(export_data['learning_sessions'])}개 세션")
duri_brain/app/services/metacognitive_learning_system.py:595:    print("🎉 MetacognitiveLearningSystem 테스트 완료!")
duri_brain/app/services/advanced_social_learning_system.py:495:    print("🧠 AdvancedSocialLearningSystem 테스트 시작...")
duri_brain/app/services/advanced_social_learning_system.py:511:    print(f"✅ 사회적 학습 경험 기록 완료: {experience.id}")
duri_brain/app/services/advanced_social_learning_system.py:519:    print(f"✅ 학습 과정 최적화 완료: {optimization.learning_quality.value}")
duri_brain/app/services/advanced_social_learning_system.py:530:    print(f"✅ 지식 통합 완료: {integration.integration_effectiveness:.2f}")
duri_brain/app/services/advanced_social_learning_system.py:534:    print(f"✅ 학습 패턴 분석 완료: {pattern.pattern_reliability:.2f}")
duri_brain/app/services/advanced_social_learning_system.py:538:    print(f"📊 통계: 경험 {stats['total_experiences']}개, 최적화 {stats['total_optimizations']}개")
duri_brain/app/services/advanced_social_learning_system.py:539:    print(f"📈 평균 보유율: {stats['average_retention_rate']:.2f}")
duri_brain/app/services/advanced_social_learning_system.py:540:    print(f"🎯 평균 적용율: {stats['average_application_rate']:.2f}")
duri_brain/app/services/advanced_social_learning_system.py:541:    print(f"📊 평균 신뢰도: {stats['average_confidence']:.2f}")
duri_brain/app/services/advanced_social_learning_system.py:543:    print("✅ AdvancedSocialLearningSystem 테스트 완료!")
duri_brain/app/services/execution_centric_family_interaction_system.py:374:    print("🏠 ExecutionCentricFamilyInteractionSystem 테스트 시작...")
duri_brain/app/services/execution_centric_family_interaction_system.py:380:    print(f"✅ 일일 질문 리스트 생성 완료: {len(daily_questions)}개")
duri_brain/app/services/execution_centric_family_interaction_system.py:388:    print(f"✅ 가족 응답 기록 완료: {response_recorded}")
duri_brain/app/services/execution_centric_family_interaction_system.py:400:    print(f"✅ 가족 상호작용 기록 완료: {interaction.id}")
duri_brain/app/services/execution_centric_family_interaction_system.py:416:    print(f"✅ MVP 테스트 완료: {mvp_test.overall_success_rate:.2f}")
duri_brain/app/services/execution_centric_family_interaction_system.py:426:    print(f"✅ 실행 피드백 수집 완료: {feedback.feedback_confidence:.2f}")
duri_brain/app/services/execution_centric_family_interaction_system.py:430:    print(f"📊 통계: 질문 {stats['total_questions']}개, 상호작용 {stats['total_interactions']}개")
duri_brain/app/services/execution_centric_family_interaction_system.py:431:    print(f"📈 응답률: {stats['response_rate']:.1%}")
duri_brain/app/services/execution_centric_family_interaction_system.py:432:    print(f"🎯 평균 피드백 점수: {stats['average_feedback_score']:.2f}")
duri_brain/app/services/execution_centric_family_interaction_system.py:433:    print(f"✅ 평균 성공률: {stats['average_success_rate']:.2f}")
duri_brain/app/services/execution_centric_family_interaction_system.py:435:    print("✅ ExecutionCentricFamilyInteractionSystem 테스트 완료!")
duri_brain/app/services/advanced_ethical_reasoning_system.py:640:    print("🧠 AdvancedEthicalReasoningSystem 테스트 시작...")
duri_brain/app/services/advanced_ethical_reasoning_system.py:652:    print(f"✅ 윤리적 딜레마 분석: {dilemma.complexity.value}")
duri_brain/app/services/advanced_ethical_reasoning_system.py:653:    print(f"   관련 원칙: {len(dilemma.involved_principles)}개")
duri_brain/app/services/advanced_ethical_reasoning_system.py:654:    print(f"   가치 충돌: {len(dilemma.value_conflicts)}개")
duri_brain/app/services/advanced_ethical_reasoning_system.py:659:    print(f"✅ 윤리적 추론 완료: {analysis.reasoning_method.value}")
duri_brain/app/services/advanced_ethical_reasoning_system.py:660:    print(f"   도덕적 판단: {analysis.moral_judgment.value}")
duri_brain/app/services/advanced_ethical_reasoning_system.py:661:    print(f"   신뢰도: {analysis.confidence_score:.2f}")
duri_brain/app/services/advanced_ethical_reasoning_system.py:662:    print(f"   추론 단계: {len(analysis.reasoning_steps)}개")
duri_brain/app/services/advanced_ethical_reasoning_system.py:663:    print(f"   가족 영향: {analysis.family_impact}")
duri_brain/app/services/advanced_ethical_reasoning_system.py:668:    print(f"✅ 윤리적 권고 생성: {recommendation.recommended_action}")
duri_brain/app/services/advanced_ethical_reasoning_system.py:669:    print(f"   대안 행동: {len(recommendation.alternative_actions)}개")
duri_brain/app/services/advanced_ethical_reasoning_system.py:670:    print(f"   예상 결과: {len(recommendation.expected_outcomes)}개")
duri_brain/app/services/advanced_ethical_reasoning_system.py:671:    print(f"   위험 평가: {len(recommendation.risk_assessment)}개")
duri_brain/app/services/advanced_ethical_reasoning_system.py:672:    print(f"   가족 고려사항: {len(recommendation.family_considerations)}개")
duri_brain/app/services/advanced_ethical_reasoning_system.py:673:    print(f"   구현 단계: {len(recommendation.implementation_steps)}개")
duri_brain/app/services/advanced_ethical_reasoning_system.py:677:    print(f"✅ 윤리적 통계: {statistics['total_dilemmas']}개 딜레마")
duri_brain/app/services/advanced_ethical_reasoning_system.py:678:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/app/services/advanced_ethical_reasoning_system.py:679:    print(f"   복잡성별 통계: {statistics['complexity_statistics']}")
duri_brain/app/services/advanced_ethical_reasoning_system.py:680:    print(f"   판단별 통계: {statistics['judgment_statistics']}")
duri_brain/app/services/advanced_ethical_reasoning_system.py:681:    print(f"   방법별 통계: {statistics['method_statistics']}")
duri_brain/app/services/advanced_ethical_reasoning_system.py:685:    print(f"✅ 윤리적 데이터 내보내기: {len(export_data['ethical_dilemmas'])}개 딜레마")
duri_brain/app/services/advanced_ethical_reasoning_system.py:687:    print("🎉 AdvancedEthicalReasoningSystem 테스트 완료!")
duri_brain/app/services/auto_backup_manager.py:445:    print("💾 AutoBackupManager 테스트 시작...")
duri_brain/app/services/auto_backup_manager.py:461:    print(f"✅ 백업 필요 여부: {should_backup}")
duri_brain/app/services/auto_backup_manager.py:469:    print(f"✅ 백업 실행 완료: {backup_info.metadata.backup_id}")
duri_brain/app/services/auto_backup_manager.py:470:    print(f"   트리거: {backup_info.metadata.trigger.value}")
duri_brain/app/services/auto_backup_manager.py:471:    print(f"   우선순위: {backup_info.metadata.priority.value}")
duri_brain/app/services/auto_backup_manager.py:472:    print(f"   상태: {backup_info.metadata.status.value}")
duri_brain/app/services/auto_backup_manager.py:473:    print(f"   크기: {backup_info.metadata.backup_size_mb:.2f}MB")
duri_brain/app/services/auto_backup_manager.py:477:    print(f"✅ 수동 백업 완료: {manual_backup.metadata.backup_id}")
duri_brain/app/services/auto_backup_manager.py:481:    print(f"✅ 백업 통계: {statistics['total_backups']}개 백업")
duri_brain/app/services/auto_backup_manager.py:482:    print(f"   성공률: {statistics['success_rate']:.2f}")
duri_brain/app/services/auto_backup_manager.py:483:    print(f"   총 크기: {statistics['total_size_mb']:.2f}MB")
duri_brain/app/services/auto_backup_manager.py:484:    print(f"   트리거별 통계: {statistics['trigger_statistics']}")
duri_brain/app/services/auto_backup_manager.py:488:    print(f"✅ 백업 데이터 내보내기: {len(export_data['backup_history'])}개 백업")
duri_brain/app/services/auto_backup_manager.py:490:    print("🎉 AutoBackupManager 테스트 완료!")
duri_brain/app/services/advanced_agi_performance_maximization_system.py:434:    print("🚀 AdvancedAGIPerformanceMaximizationSystem 테스트 시작...")
duri_brain/app/services/advanced_agi_performance_maximization_system.py:459:    print(f"✅ 성능 벤치마크 생성 완료: {benchmark.benchmark_confidence:.2f}")
duri_brain/app/services/advanced_agi_performance_maximization_system.py:481:    print(f"✅ 극한 최적화 생성 완료: {optimization.optimization_confidence:.2f}")
duri_brain/app/services/advanced_agi_performance_maximization_system.py:500:    print(f"✅ 성능 모니터 생성 완료: {monitor.monitoring_effectiveness:.2f}")
duri_brain/app/services/advanced_agi_performance_maximization_system.py:516:    print(f"✅ 성능 분석 완료: {analysis.analysis_confidence:.2f}")
duri_brain/app/services/advanced_agi_performance_maximization_system.py:520:    print(f"📊 통계: 벤치마크 {stats['total_benchmarks']}개, 최적화 {stats['total_optimizations']}개")
duri_brain/app/services/advanced_agi_performance_maximization_system.py:521:    print(f"🎯 평균 벤치마크 신뢰도: {stats['average_benchmark_confidence']:.2f}")
duri_brain/app/services/advanced_agi_performance_maximization_system.py:522:    print(f"🚀 평균 최적화 신뢰도: {stats['average_optimization_confidence']:.2f}")
duri_brain/app/services/advanced_agi_performance_maximization_system.py:523:    print(f"🔧 평균 모니터링 효과성: {stats['average_monitoring_effectiveness']:.2f}")
duri_brain/app/services/advanced_agi_performance_maximization_system.py:524:    print(f"📊 평균 분석 신뢰도: {stats['average_analysis_confidence']:.2f}")
duri_brain/app/services/advanced_agi_performance_maximization_system.py:526:    print("✅ AdvancedAGIPerformanceMaximizationSystem 테스트 완료!")
duri_brain/app/services/advanced_external_interface_system.py:477:    print("🌐 AdvancedExternalInterfaceSystem 테스트 시작...")
duri_brain/app/services/advanced_external_interface_system.py:489:    print(f"✅ 외부 인터페이스 설정: {'성공' if success else '실패'}")
duri_brain/app/services/advanced_external_interface_system.py:497:    print(f"✅ 외부 세션 시작: {session.session_type}")
duri_brain/app/services/advanced_external_interface_system.py:498:    print(f"   최대 질문 수: {session.max_queries}")
duri_brain/app/services/advanced_external_interface_system.py:509:        print(f"✅ ChatGPT 질문 성공: {result['response_quality']}")
duri_brain/app/services/advanced_external_interface_system.py:510:        print(f"   응답 품질: {result['response_quality']}")
duri_brain/app/services/advanced_external_interface_system.py:511:        print(f"   관련성 점수: {result['relevance_score']:.2f}")
duri_brain/app/services/advanced_external_interface_system.py:512:        print(f"   학습 가치: {result['learning_value']:.2f}")
duri_brain/app/services/advanced_external_interface_system.py:522:        print(f"✅ 학습 통합: {'성공' if learning_success else '실패'}")
duri_brain/app/services/advanced_external_interface_system.py:528:        print(f"✅ 외부 세션 종료: {completed_session.query_count}회 질문")
duri_brain/app/services/advanced_external_interface_system.py:529:        print(f"   총 학습 가치: {completed_session.total_learning_value:.2f}")
duri_brain/app/services/advanced_external_interface_system.py:530:        print(f"   세션 지속 시간: {completed_session.session_duration}")
duri_brain/app/services/advanced_external_interface_system.py:534:    print(f"✅ 외부 인터페이스 통계: {statistics['total_queries']}개 질문")
duri_brain/app/services/advanced_external_interface_system.py:535:    print(f"   평균 학습 가치: {statistics['average_learning_value']:.2f}")
duri_brain/app/services/advanced_external_interface_system.py:536:    print(f"   소스별 통계: {statistics['source_statistics']}")
duri_brain/app/services/advanced_external_interface_system.py:537:    print(f"   질문 유형별 통계: {statistics['query_type_statistics']}")
duri_brain/app/services/advanced_external_interface_system.py:538:    print(f"   품질별 통계: {statistics['quality_statistics']}")
duri_brain/app/services/advanced_external_interface_system.py:542:    print(f"✅ 외부 인터페이스 데이터 내보내기: {len(export_data['external_queries'])}개 질문")
duri_brain/app/services/advanced_external_interface_system.py:544:    print("🎉 AdvancedExternalInterfaceSystem 테스트 완료!")
duri_brain/app/services/advanced_social_creativity_system.py:630:    print("🧠 AdvancedSocialCreativitySystem 테스트 시작...")
duri_brain/app/services/advanced_social_creativity_system.py:646:    print(f"✅ 창의적 해결책 생성 완료: {solution.creativity_score:.2f}")
duri_brain/app/services/advanced_social_creativity_system.py:655:    print(f"✅ 혁신 프로젝트 생성 완료: {project.innovation_effectiveness:.2f}")
duri_brain/app/services/advanced_social_creativity_system.py:659:    print(f"✅ 창의성 패턴 분석 완료: {analysis.analysis_reliability:.2f}")
duri_brain/app/services/advanced_social_creativity_system.py:667:    print(f"✅ 창의성 과정 최적화 완료: {optimization.creativity_level.value}")
duri_brain/app/services/advanced_social_creativity_system.py:671:    print(f"📊 통계: 해결책 {stats['total_solutions']}개, 프로젝트 {stats['total_projects']}개")
duri_brain/app/services/advanced_social_creativity_system.py:672:    print(f"🎨 평균 창의성 점수: {stats['average_creativity_score']:.2f}")
duri_brain/app/services/advanced_social_creativity_system.py:673:    print(f"🚀 평균 혁신 효과성: {stats['average_innovation_effectiveness']:.2f}")
duri_brain/app/services/advanced_social_creativity_system.py:674:    print(f"💝 평균 가족 영향 점수: {stats['average_family_impact_score']:.2f}")
duri_brain/app/services/advanced_social_creativity_system.py:676:    print("✅ AdvancedSocialCreativitySystem 테스트 완료!")
duri_brain/app/services/advanced_family_interaction_system.py:631:    print("🚀 AdvancedFamilyInteractionSystem 테스트 시작...")
duri_brain/app/services/advanced_family_interaction_system.py:649:    print(f"✅ 복잡한 가족 상호작용 수행: {interaction.interaction_type}")
duri_brain/app/services/advanced_family_interaction_system.py:650:    print(f"   복잡도: {interaction.complexity.value}")
duri_brain/app/services/advanced_family_interaction_system.py:651:    print(f"   가족 역학: {interaction.family_dynamic.value}")
duri_brain/app/services/advanced_family_interaction_system.py:652:    print(f"   상호작용 모드: {interaction.interaction_mode.value}")
duri_brain/app/services/advanced_family_interaction_system.py:653:    print(f"   신뢰도: {interaction.confidence_score:.2f}")
duri_brain/app/services/advanced_family_interaction_system.py:658:    print(f"✅ 상호작용 분석 완료")
duri_brain/app/services/advanced_family_interaction_system.py:659:    print(f"   감정적 통찰: {len(analysis.emotional_insights)}개")
duri_brain/app/services/advanced_family_interaction_system.py:660:    print(f"   윤리적 통찰: {len(analysis.ethical_insights)}개")
duri_brain/app/services/advanced_family_interaction_system.py:661:    print(f"   학습 통찰: {len(analysis.learning_insights)}개")
duri_brain/app/services/advanced_family_interaction_system.py:662:    print(f"   권장사항: {len(analysis.recommendations)}개")
duri_brain/app/services/advanced_family_interaction_system.py:663:    print(f"   신뢰도: {analysis.confidence_score:.2f}")
duri_brain/app/services/advanced_family_interaction_system.py:676:    print(f"✅ 가족 성장 계획 생성: {len(plan.growth_areas)}개 영역")
duri_brain/app/services/advanced_family_interaction_system.py:677:    print(f"   구체적 목표: {len(plan.specific_goals)}개")
duri_brain/app/services/advanced_family_interaction_system.py:678:    print(f"   실행 단계: {len(plan.action_steps)}개")
duri_brain/app/services/advanced_family_interaction_system.py:679:    print(f"   성공 지표: {len(plan.success_metrics)}개")
duri_brain/app/services/advanced_family_interaction_system.py:680:    print(f"   신뢰도: {plan.confidence_score:.2f}")
duri_brain/app/services/advanced_family_interaction_system.py:684:    print(f"✅ 고급 상호작용 통계: {statistics['total_interactions']}개 상호작용")
duri_brain/app/services/advanced_family_interaction_system.py:685:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/app/services/advanced_family_interaction_system.py:686:    print(f"   복잡도별 통계: {statistics['complexity_statistics']}")
duri_brain/app/services/advanced_family_interaction_system.py:687:    print(f"   가족 역학별 통계: {statistics['dynamic_statistics']}")
duri_brain/app/services/advanced_family_interaction_system.py:691:    print(f"✅ 고급 상호작용 데이터 내보내기: {len(export_data['family_interactions'])}개 상호작용")
duri_brain/app/services/advanced_family_interaction_system.py:693:    print("🎉 AdvancedFamilyInteractionSystem 테스트 완료!")
duri_brain/app/services/advanced_sociality_simulation_system.py:553:    print("🌐 AdvancedSocialitySimulationSystem 테스트 시작...")
duri_brain/app/services/advanced_sociality_simulation_system.py:582:    print(f"✅ 사회적 개체 생성: {len(simulation_system.social_entities)}개")
duri_brain/app/services/advanced_sociality_simulation_system.py:592:    print(f"✅ 시뮬레이션 시나리오 생성: {scenario.scenario_type}")
duri_brain/app/services/advanced_sociality_simulation_system.py:596:    print(f"✅ 시뮬레이션 시작: {'성공' if success else '실패'}")
duri_brain/app/services/advanced_sociality_simulation_system.py:620:    print(f"✅ 사회적 상호작용 수행: {len(simulation_system.social_interactions)}회")
duri_brain/app/services/advanced_sociality_simulation_system.py:627:    print(f"✅ 신뢰 관계 업데이트: {len(simulation_system.trust_relationships)}개 관계")
duri_brain/app/services/advanced_sociality_simulation_system.py:631:    print(f"✅ 시뮬레이션 성공도 평가: 성공률 {evaluation['success_rate']:.2f}")
duri_brain/app/services/advanced_sociality_simulation_system.py:632:    print(f"   평균 신뢰 점수: {evaluation['average_trust_score']:.2f}")
duri_brain/app/services/advanced_sociality_simulation_system.py:633:    print(f"   평균 역할 효과성: {evaluation['average_role_effectiveness']:.2f}")
duri_brain/app/services/advanced_sociality_simulation_system.py:634:    print(f"   평균 협력 점수: {evaluation['average_cooperation_score']:.2f}")
duri_brain/app/services/advanced_sociality_simulation_system.py:635:    print(f"   진화 트리거: {evaluation['evolution_triggers']}개")
duri_brain/app/services/advanced_sociality_simulation_system.py:639:    print(f"✅ 시뮬레이션 종료: 최종 성공률 {final_result['success_rate']:.2f}")
duri_brain/app/services/advanced_sociality_simulation_system.py:643:    print(f"✅ 사회성 시뮬레이션 통계: {statistics['total_interactions']}회 상호작용")
duri_brain/app/services/advanced_sociality_simulation_system.py:644:    print(f"   상호작용 유형별 통계: {statistics['interaction_type_statistics']}")
duri_brain/app/services/advanced_sociality_simulation_system.py:645:    print(f"   총 진화 트리거: {statistics['evolution_triggers']}개")
duri_brain/app/services/advanced_sociality_simulation_system.py:649:    print(f"✅ 사회성 시뮬레이션 데이터 내보내기: {len(export_data['social_interactions'])}개 상호작용")
duri_brain/app/services/advanced_sociality_simulation_system.py:651:    print("🎉 AdvancedSocialitySimulationSystem 테스트 완료!")
duri_brain/app/services/narrative_memory_enhancer.py:456:    print("📖 NarrativeMemoryEnhancer 테스트 시작...")
duri_brain/app/services/narrative_memory_enhancer.py:480:    print(f"✅ 서사적 기억 생성: {memory1.title}")
duri_brain/app/services/narrative_memory_enhancer.py:481:    print(f"   기억 유형: {memory1.memory_type.value}")
duri_brain/app/services/narrative_memory_enhancer.py:482:    print(f"   감정적 톤: {memory1.emotional_tone.value}")
duri_brain/app/services/narrative_memory_enhancer.py:483:    print(f"   신뢰도: {memory1.confidence_score:.2f}")
duri_brain/app/services/narrative_memory_enhancer.py:502:    print(f"✅ 기억 연결 생성: {connection.connection_type}")
duri_brain/app/services/narrative_memory_enhancer.py:503:    print(f"   연결 강도: {connection.connection_strength:.2f}")
duri_brain/app/services/narrative_memory_enhancer.py:508:    print(f"✅ 서사적 이야기 생성: {story.title}")
duri_brain/app/services/narrative_memory_enhancer.py:509:    print(f"   포함된 기억: {len(story.memories)}개")
duri_brain/app/services/narrative_memory_enhancer.py:510:    print(f"   가족 가치: {story.family_values_highlighted}")
duri_brain/app/services/narrative_memory_enhancer.py:514:    print(f"✅ 기억 회상: {len(recalled_memories)}개 기억 발견")
duri_brain/app/services/narrative_memory_enhancer.py:518:    print(f"✅ 서사적 기억 통계: {statistics['total_memories']}개 기억, {statistics['total_connections']}개 연결")
duri_brain/app/services/narrative_memory_enhancer.py:519:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/app/services/narrative_memory_enhancer.py:520:    print(f"   기억 유형 통계: {statistics['memory_type_statistics']}")
duri_brain/app/services/narrative_memory_enhancer.py:524:    print(f"✅ 서사적 기억 데이터 내보내기: {len(export_data['narrative_memories'])}개 기억")
duri_brain/app/services/narrative_memory_enhancer.py:526:    print("🎉 NarrativeMemoryEnhancer 테스트 완료!")
duri_brain/app/services/basic_conversation_service.py:536:    print("💬 BasicConversationSystem 테스트 시작...")
duri_brain/app/services/basic_conversation_service.py:551:    print(f"✅ 대화 세션 시작: {session.id}")
duri_brain/app/services/basic_conversation_service.py:555:    print(f"✅ 인사말 응답: {greeting_response.response_style.value} 스타일, {greeting_response.confidence_score:.2f} 신뢰도")
duri_brain/app/services/basic_conversation_service.py:559:    print(f"✅ 감정 공유 응답: {emotional_response.response_style.value} 스타일, {emotional_response.emotion_appropriate} 감정 적절성")
duri_brain/app/services/basic_conversation_service.py:563:    print(f"✅ 질문 응답: {question_response.response_style.value} 스타일, {question_response.family_relevant} 가족 관련성")
duri_brain/app/services/basic_conversation_service.py:567:    print(f"✅ 학습 요청 응답: {learning_response.response_style.value} 스타일, {learning_response.confidence_score:.2f} 신뢰도")
duri_brain/app/services/basic_conversation_service.py:571:    print(f"✅ 장난스러운 대화 응답: {playful_response.response_style.value} 스타일, {playful_response.family_relevant} 가족 관련성")
duri_brain/app/services/basic_conversation_service.py:575:    print(f"✅ 대화 세션 종료: {ended_session.session_quality:.2f} 세션 품질")
duri_brain/app/services/basic_conversation_service.py:579:    print(f"✅ 대화 통계: {statistics['total_sessions']}개 세션, {statistics['total_messages']}개 메시지")
duri_brain/app/services/basic_conversation_service.py:580:    print(f"   대화 유형별: {statistics['conversation_type_stats']}")
duri_brain/app/services/basic_conversation_service.py:581:    print(f"   감정별: {statistics['emotion_stats']}")
duri_brain/app/services/basic_conversation_service.py:582:    print(f"   응답 스타일별: {statistics['response_style_stats']}")
duri_brain/app/services/basic_conversation_service.py:586:    print(f"✅ 대화 데이터 내보내기: {len(export_data['conversation_sessions'])}개 세션, {len(export_data['messages'])}개 메시지")
duri_brain/app/services/basic_conversation_service.py:588:    print("🎉 BasicConversationSystem 테스트 완료!")
duri_brain/app/services/self_explanation_booster.py:791:    print("🧠 SelfExplanationBooster 테스트 시작...")
duri_brain/app/services/self_explanation_booster.py:813:    print("\n📝 개별 질문 테스트:")
duri_brain/app/services/self_explanation_booster.py:816:        print(f"{i}. {question}")
duri_brain/app/services/self_explanation_booster.py:817:        print(f"   답변: {result['answer']}")
duri_brain/app/services/self_explanation_booster.py:818:        print(f"   신뢰도: {result['confidence_score']:.2f}")
duri_brain/app/services/self_explanation_booster.py:819:        print(f"   품질: {result['response_quality']}")
duri_brain/app/services/self_explanation_booster.py:820:        print()
duri_brain/app/services/self_explanation_booster.py:823:    print("🔍 자아 점검 수행:")
duri_brain/app/services/self_explanation_booster.py:827:    print(f"   총 질문 수: {summary['total_questions']}")
duri_brain/app/services/self_explanation_booster.py:828:    print(f"   평균 신뢰도: {summary['average_confidence']:.2f}")
duri_brain/app/services/self_explanation_booster.py:829:    print(f"   자아 인식 수준: {summary['self_awareness_level']}")
duri_brain/app/services/self_explanation_booster.py:830:    print(f"   응답 품질 분포: {summary['response_quality_distribution']}")
duri_brain/app/services/self_explanation_booster.py:831:    print(f"   권장사항: {summary['recommendations']}")
duri_brain/app/services/self_explanation_booster.py:835:    print(f"\n📊 자아 설명 통계:")
duri_brain/app/services/self_explanation_booster.py:836:    print(f"   정체성: {statistics['total_identities']}개, 평균 신뢰도: {statistics['average_identity_confidence']:.2f}")
duri_brain/app/services/self_explanation_booster.py:837:    print(f"   설명: {statistics['total_explanations']}개, 평균 신뢰도: {statistics['average_explanation_confidence']:.2f}")
duri_brain/app/services/self_explanation_booster.py:838:    print(f"   감정: {statistics['total_emotions']}개, 평균 신뢰도: {statistics['average_emotion_confidence']:.2f}")
duri_brain/app/services/self_explanation_booster.py:839:    print(f"   기억: {statistics['total_memories']}개, 평균 신뢰도: {statistics['average_memory_confidence']:.2f}")
duri_brain/app/services/self_explanation_booster.py:840:    print(f"   평가: {statistics['total_evaluations']}개, 평균 신뢰도: {statistics['average_evaluation_confidence']:.2f}")
duri_brain/app/services/self_explanation_booster.py:844:    print(f"\n💾 자아 설명 데이터 내보내기: {len(export_data['self_identities'])}개 정체성, {len(export_data['self_explanations'])}개 설명")
duri_brain/app/services/self_explanation_booster.py:846:    print("\n🎉 SelfExplanationBooster 테스트 완료!")
duri_brain/app/services/llm_interface_service.py:427:    print("🤖 LLMInterface 테스트 시작...")
duri_brain/app/services/llm_interface_service.py:443:    print(f"✅ 학습 도움 응답: {learning_response.response_quality.value} 품질, {learning_response.confidence_score:.2f} 신뢰도")
duri_brain/app/services/llm_interface_service.py:448:    print(f"✅ 가족 조언 응답: {advice_response.response_quality.value} 품질, {advice_response.family_relevance_score:.2f} 가족 관련성")
duri_brain/app/services/llm_interface_service.py:453:    print(f"✅ 정서적 지원 응답: {emotional_response.response_quality.value} 품질, {emotional_response.processing_time_seconds:.2f}초 처리시간")
duri_brain/app/services/llm_interface_service.py:458:    print(f"✅ 창의적 영감 응답: {creative_response.response_quality.value} 품질, {creative_response.confidence_score:.2f} 신뢰도")
duri_brain/app/services/llm_interface_service.py:463:    print(f"✅ 지식 질문 응답: {knowledge_response.response_quality.value} 품질, {knowledge_response.family_relevance_score:.2f} 가족 관련성")
duri_brain/app/services/llm_interface_service.py:467:    print(f"✅ LLM 사용 통계: {statistics['total_queries']}개 질문, {statistics['total_responses']}개 응답")
duri_brain/app/services/llm_interface_service.py:468:    print(f"   제공자별: {statistics['provider_stats']}")
duri_brain/app/services/llm_interface_service.py:469:    print(f"   질문 유형별: {statistics['query_type_stats']}")
duri_brain/app/services/llm_interface_service.py:470:    print(f"   응답 품질별: {statistics['quality_stats']}")
duri_brain/app/services/llm_interface_service.py:474:    print(f"✅ LLM 데이터 내보내기: {len(export_data['queries'])}개 질문, {len(export_data['responses'])}개 응답")
duri_brain/app/services/llm_interface_service.py:476:    print("🎉 LLMInterface 테스트 완료!")
duri_brain/app/services/phase_readiness_evaluator.py:397:    print("📊 PhaseReadinessEvaluator 테스트 시작...")
duri_brain/app/services/phase_readiness_evaluator.py:415:    print(f"✅ Phase 11 준비도 평가: {assessment.readiness_level.value}")
duri_brain/app/services/phase_readiness_evaluator.py:416:    print(f"   완성도: {assessment.completion_percentage:.1f}%")
duri_brain/app/services/phase_readiness_evaluator.py:417:    print(f"   신뢰도: {assessment.confidence_score:.2f}")
duri_brain/app/services/phase_readiness_evaluator.py:418:    print(f"   중요 이슈: {len(assessment.critical_issues)}개")
duri_brain/app/services/phase_readiness_evaluator.py:419:    print(f"   사소한 이슈: {len(assessment.minor_issues)}개")
duri_brain/app/services/phase_readiness_evaluator.py:423:    print(f"✅ 진화 결정: {evolution_decision.decision_type}")
duri_brain/app/services/phase_readiness_evaluator.py:424:    print(f"   이유: {evolution_decision.reasoning}")
duri_brain/app/services/phase_readiness_evaluator.py:425:    print(f"   예상 노력: {evolution_decision.estimated_effort}")
duri_brain/app/services/phase_readiness_evaluator.py:426:    print(f"   위험도: {evolution_decision.risk_assessment}")
duri_brain/app/services/phase_readiness_evaluator.py:430:    print(f"✅ 평가 통계: {statistics['total_assessments']}개 평가, {statistics['total_decisions']}개 결정")
duri_brain/app/services/phase_readiness_evaluator.py:431:    print(f"   준비도 통계: {statistics['readiness_statistics']}")
duri_brain/app/services/phase_readiness_evaluator.py:432:    print(f"   결정 통계: {statistics['decision_statistics']}")
duri_brain/app/services/phase_readiness_evaluator.py:436:    print(f"✅ 평가 데이터 내보내기: {len(export_data['assessments'])}개 평가")
duri_brain/app/services/phase_readiness_evaluator.py:438:    print("🎉 PhaseReadinessEvaluator 테스트 완료!")
duri_brain/app/services/emotional_conversation_service.py:579:    print("🧠 EmotionalConversationSystem 테스트 시작...")
duri_brain/app/services/emotional_conversation_service.py:596:    print(f"✅ 감정 상태 분석: {analysis.primary_emotion.value}")
duri_brain/app/services/emotional_conversation_service.py:597:    print(f"   감정 강도: {analysis.intensity.value}")
duri_brain/app/services/emotional_conversation_service.py:598:    print(f"   근본적 욕구: {analysis.underlying_needs}")
duri_brain/app/services/emotional_conversation_service.py:599:    print(f"   신뢰도: {analysis.confidence_score:.2f}")
duri_brain/app/services/emotional_conversation_service.py:604:    print(f"✅ 감정적 응답 생성: {response.response_type.value}")
duri_brain/app/services/emotional_conversation_service.py:605:    print(f"   대화 톤: {response.conversation_tone.value}")
duri_brain/app/services/emotional_conversation_service.py:606:    print(f"   응답 내용: {response.response_content}")
duri_brain/app/services/emotional_conversation_service.py:607:    print(f"   신뢰도: {response.confidence_score:.2f}")
duri_brain/app/services/emotional_conversation_service.py:612:    print(f"✅ 감정적 대화 수행: {conversation.family_member}")
duri_brain/app/services/emotional_conversation_service.py:613:    print(f"   초기 감정: {conversation.initial_emotion.value}")
duri_brain/app/services/emotional_conversation_service.py:614:    print(f"   해결 달성: {conversation.resolution_achieved}")
duri_brain/app/services/emotional_conversation_service.py:615:    print(f"   유대감 강화: {conversation.emotional_bond_strengthened}")
duri_brain/app/services/emotional_conversation_service.py:619:    print(f"✅ 감정적 대화 통계: {statistics['total_conversations']}개 대화")
duri_brain/app/services/emotional_conversation_service.py:620:    print(f"   해결률: {statistics['resolution_rate']:.2f}")
duri_brain/app/services/emotional_conversation_service.py:621:    print(f"   유대감 강화율: {statistics['bond_strengthening_rate']:.2f}")
duri_brain/app/services/emotional_conversation_service.py:622:    print(f"   감정별 통계: {statistics['emotion_statistics']}")
duri_brain/app/services/emotional_conversation_service.py:626:    print(f"✅ 감정적 대화 데이터 내보내기: {len(export_data['emotional_conversations'])}개 대화")
duri_brain/app/services/emotional_conversation_service.py:628:    print("🎉 EmotionalConversationSystem 테스트 완료!")
duri_brain/app/services/advanced_learning_integration_system.py:611:    print("🧠 AdvancedLearningIntegrationSystem 테스트 시작...")
duri_brain/app/services/advanced_learning_integration_system.py:626:    print(f"✅ 학습 경험 기록: {experience.domain.value}")
duri_brain/app/services/advanced_learning_integration_system.py:627:    print(f"   학습 방법: {experience.method.value}")
duri_brain/app/services/advanced_learning_integration_system.py:628:    print(f"   신뢰도 향상: {experience.confidence_gain:.2f}")
duri_brain/app/services/advanced_learning_integration_system.py:638:    print(f"✅ 학습 통합 생성: {integration.integration_type.value}")
duri_brain/app/services/advanced_learning_integration_system.py:639:    print(f"   시너지 효과: {len(integration.synergy_effects)}개")
duri_brain/app/services/advanced_learning_integration_system.py:640:    print(f"   교차 도메인 통찰: {len(integration.cross_domain_insights)}개")
duri_brain/app/services/advanced_learning_integration_system.py:641:    print(f"   가족 혜택: {len(integration.family_benefits)}개")
duri_brain/app/services/advanced_learning_integration_system.py:642:    print(f"   성공 점수: {integration.success_score:.2f}")
duri_brain/app/services/advanced_learning_integration_system.py:657:    print(f"✅ 통합 학습 경로 개발: {path.family_member}")
duri_brain/app/services/advanced_learning_integration_system.py:658:    print(f"   학습 목표: {len(path.learning_goals)}개")
duri_brain/app/services/advanced_learning_integration_system.py:659:    print(f"   통합 활동: {len(path.integrated_activities)}개")
duri_brain/app/services/advanced_learning_integration_system.py:660:    print(f"   시너지 기회: {len(path.synergy_opportunities)}개")
duri_brain/app/services/advanced_learning_integration_system.py:661:    print(f"   신뢰도: {path.confidence_level:.2f}")
duri_brain/app/services/advanced_learning_integration_system.py:670:    print(f"✅ 학습 시너지 생성: {synergy.synergy_type}")
duri_brain/app/services/advanced_learning_integration_system.py:671:    print(f"   증폭 계수: {synergy.amplification_factor:.2f}")
duri_brain/app/services/advanced_learning_integration_system.py:672:    print(f"   가족 영향: {synergy.family_impact}")
duri_brain/app/services/advanced_learning_integration_system.py:673:    print(f"   지속 가능성: {synergy.sustainability_score:.2f}")
duri_brain/app/services/advanced_learning_integration_system.py:677:    print(f"✅ 통합 통계: {statistics['total_experiences']}개 경험")
duri_brain/app/services/advanced_learning_integration_system.py:678:    print(f"   평균 성공 점수: {statistics['average_success_score']:.2f}")
duri_brain/app/services/advanced_learning_integration_system.py:679:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/app/services/advanced_learning_integration_system.py:680:    print(f"   도메인별 통계: {statistics['domain_statistics']}")
duri_brain/app/services/advanced_learning_integration_system.py:681:    print(f"   통합 유형별 통계: {statistics['integration_type_statistics']}")
duri_brain/app/services/advanced_learning_integration_system.py:685:    print(f"✅ 통합 데이터 내보내기: {len(export_data['learning_experiences'])}개 경험")
duri_brain/app/services/advanced_learning_integration_system.py:687:    print("🎉 AdvancedLearningIntegrationSystem 테스트 완료!")
duri_brain/app/services/self_model_enhancer_service.py:753:    print("🧠 SelfModelEnhancer 테스트 시작...")
duri_brain/app/services/self_model_enhancer_service.py:768:    print(f"✅ 자아 상태 평가: {self_state.awareness_level.value} 수준")
duri_brain/app/services/self_model_enhancer_service.py:769:    print(f"   전체 신뢰도: {self_state.overall_confidence:.2f}")
duri_brain/app/services/self_model_enhancer_service.py:770:    print(f"   지식 상태: {self_state.knowledge_state['knowledge_confidence']:.2f}")
duri_brain/app/services/self_model_enhancer_service.py:771:    print(f"   감정 상태: {self_state.emotional_state['emotional_stability']:.2f}")
duri_brain/app/services/self_model_enhancer_service.py:772:    print(f"   가족 상태: {self_state.family_state['family_understanding']:.2f}")
duri_brain/app/services/self_model_enhancer_service.py:776:    print(f"✅ 지식 자아 평가: {knowledge_evaluation.confidence_score:.2f} 신뢰도")
duri_brain/app/services/self_model_enhancer_service.py:777:    print(f"   현재 수준: {knowledge_evaluation.current_level:.2f}")
duri_brain/app/services/self_model_enhancer_service.py:778:    print(f"   목표 수준: {knowledge_evaluation.target_level:.2f}")
duri_brain/app/services/self_model_enhancer_service.py:779:    print(f"   개선 영역: {knowledge_evaluation.improvement_areas}")
duri_brain/app/services/self_model_enhancer_service.py:780:    print(f"   강점: {knowledge_evaluation.strengths}")
duri_brain/app/services/self_model_enhancer_service.py:784:    print(f"✅ 자아 성장 예측: {growth_prediction.confidence_score:.2f} 신뢰도")
duri_brain/app/services/self_model_enhancer_service.py:785:    print(f"   예측 결과: {growth_prediction.predicted_outcome}")
duri_brain/app/services/self_model_enhancer_service.py:786:    print(f"   확률: {growth_prediction.probability:.2f}")
duri_brain/app/services/self_model_enhancer_service.py:787:    print(f"   영향 요인: {growth_prediction.factors}")
duri_brain/app/services/self_model_enhancer_service.py:791:    print(f"✅ 자아 성장 계획: {len(growth_plan.action_steps)}개 행동 단계")
duri_brain/app/services/self_model_enhancer_service.py:792:    print(f"   목표: {growth_plan.goal}")
duri_brain/app/services/self_model_enhancer_service.py:793:    print(f"   현재 상태: {growth_plan.current_state}")
duri_brain/app/services/self_model_enhancer_service.py:794:    print(f"   목표 상태: {growth_plan.target_state}")
duri_brain/app/services/self_model_enhancer_service.py:795:    print(f"   타임라인: {growth_plan.timeline}")
duri_brain/app/services/self_model_enhancer_service.py:796:    print(f"   성공 지표: {growth_plan.success_metrics}")
duri_brain/app/services/self_model_enhancer_service.py:800:    print(f"✅ 자아 통계: {statistics['total_states']}개 상태, {statistics['total_evaluations']}개 평가")
duri_brain/app/services/self_model_enhancer_service.py:801:    print(f"   자아 인식 수준별: {statistics['awareness_stats']}")
duri_brain/app/services/self_model_enhancer_service.py:802:    print(f"   평가 유형별: {statistics['evaluation_stats']}")
duri_brain/app/services/self_model_enhancer_service.py:803:    print(f"   예측 유형별: {statistics['prediction_stats']}")
duri_brain/app/services/self_model_enhancer_service.py:804:    print(f"   평균 상태 신뢰도: {statistics['average_state_confidence']:.2f}")
duri_brain/app/services/self_model_enhancer_service.py:805:    print(f"   평균 평가 신뢰도: {statistics['average_evaluation_confidence']:.2f}")
duri_brain/app/services/self_model_enhancer_service.py:809:    print(f"✅ 자아 데이터 내보내기: {len(export_data['self_states'])}개 상태, {len(export_data['self_evaluations'])}개 평가")
duri_brain/app/services/self_model_enhancer_service.py:811:    print("🎉 SelfModelEnhancer 테스트 완료!")
duri_brain/app/services/developmental_thinking_conversation_service.py:615:    print("🧠 DevelopmentalThinkingConversationSystem 테스트 시작...")
duri_brain/app/services/developmental_thinking_conversation_service.py:632:    print(f"✅ 발전적 사고 분석: {growth_analysis.developmental_stage.value} 단계")
duri_brain/app/services/developmental_thinking_conversation_service.py:633:    print(f"   성장 지향성: {growth_analysis.growth_orientation.value}")
duri_brain/app/services/developmental_thinking_conversation_service.py:634:    print(f"   학습 진도: {growth_analysis.learning_progress.value}")
duri_brain/app/services/developmental_thinking_conversation_service.py:635:    print(f"   성장 잠재력: {growth_analysis.growth_potential:.2f}")
duri_brain/app/services/developmental_thinking_conversation_service.py:636:    print(f"   필요한 지원: {growth_analysis.support_needed}")
duri_brain/app/services/developmental_thinking_conversation_service.py:637:    print(f"   다음 단계: {growth_analysis.next_steps}")
duri_brain/app/services/developmental_thinking_conversation_service.py:641:    print(f"✅ 발전적 응답: {developmental_response.confidence_score:.2f} 신뢰도")
duri_brain/app/services/developmental_thinking_conversation_service.py:642:    print(f"   원래 메시지: {developmental_response.original_message}")
duri_brain/app/services/developmental_thinking_conversation_service.py:643:    print(f"   발전적 응답: {developmental_response.developmental_response}")
duri_brain/app/services/developmental_thinking_conversation_service.py:644:    print(f"   성장 요소: {developmental_response.growth_elements}")
duri_brain/app/services/developmental_thinking_conversation_service.py:645:    print(f"   학습 격려: {developmental_response.learning_encouragement}")
duri_brain/app/services/developmental_thinking_conversation_service.py:646:    print(f"   다음 발전 단계: {developmental_response.next_development_steps}")
duri_brain/app/services/developmental_thinking_conversation_service.py:650:    print(f"✅ 발전적 통계: {statistics['total_analyses']}개 분석, {statistics['total_responses']}개 응답")
duri_brain/app/services/developmental_thinking_conversation_service.py:651:    print(f"   발전 단계별: {statistics['stage_stats']}")
duri_brain/app/services/developmental_thinking_conversation_service.py:652:    print(f"   성장 지향성별: {statistics['orientation_stats']}")
duri_brain/app/services/developmental_thinking_conversation_service.py:653:    print(f"   학습 진도별: {statistics['progress_stats']}")
duri_brain/app/services/developmental_thinking_conversation_service.py:654:    print(f"   평균 성장 잠재력: {statistics['average_growth_potential']:.2f}")
duri_brain/app/services/developmental_thinking_conversation_service.py:655:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/app/services/developmental_thinking_conversation_service.py:659:    print(f"✅ 발전적 데이터 내보내기: {len(export_data['growth_analyses'])}개 분석, {len(export_data['developmental_responses'])}개 응답")
duri_brain/app/services/developmental_thinking_conversation_service.py:661:    print("🎉 DevelopmentalThinkingConversationSystem 테스트 완료!")
duri_brain/app/services/advanced_knowledge_fusion_system.py:538:    print("🧠 AdvancedKnowledgeFusionSystem 테스트 시작...")
duri_brain/app/services/advanced_knowledge_fusion_system.py:561:    print(f"✅ 지식 요소 추가: {element1.source.value}, {element2.source.value}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:562:    print(f"   신뢰도: {element1.confidence_level:.2f}, {element2.confidence_level:.2f}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:571:    print(f"✅ 지식 융합 생성: {fusion.fusion_type.value}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:572:    print(f"   새로운 통찰: {len(fusion.new_insights)}개")
duri_brain/app/services/advanced_knowledge_fusion_system.py:573:    print(f"   가족 적용 방안: {len(fusion.family_applications)}개")
duri_brain/app/services/advanced_knowledge_fusion_system.py:574:    print(f"   혁신 수준: {fusion.innovation_level.value}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:575:    print(f"   신뢰도: {fusion.confidence_score:.2f}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:584:    print(f"✅ 지식 패턴 식별: {pattern.pattern_type}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:585:    print(f"   반복 요소: {len(pattern.recurring_elements)}개")
duri_brain/app/services/advanced_knowledge_fusion_system.py:586:    print(f"   가족 중요성: {pattern.family_significance}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:587:    print(f"   예측 가치: {pattern.predictive_value:.2f}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:596:    print(f"✅ 창의적 통찰 생성: {insight.insight_type}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:597:    print(f"   새로움 점수: {insight.novelty_score:.2f}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:598:    print(f"   가족 영향: {insight.family_impact}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:599:    print(f"   구현 경로: {len(insight.implementation_path)}개")
duri_brain/app/services/advanced_knowledge_fusion_system.py:603:    print(f"✅ 융합 통계: {statistics['total_elements']}개 요소")
duri_brain/app/services/advanced_knowledge_fusion_system.py:604:    print(f"   평균 신뢰도: {statistics['average_confidence']:.2f}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:605:    print(f"   평균 새로움 점수: {statistics['average_novelty']:.2f}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:606:    print(f"   소스별 통계: {statistics['source_statistics']}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:607:    print(f"   융합 유형별 통계: {statistics['fusion_type_statistics']}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:608:    print(f"   혁신 수준별 통계: {statistics['innovation_statistics']}")
duri_brain/app/services/advanced_knowledge_fusion_system.py:612:    print(f"✅ 융합 데이터 내보내기: {len(export_data['knowledge_elements'])}개 요소")
duri_brain/app/services/advanced_knowledge_fusion_system.py:614:    print("🎉 AdvancedKnowledgeFusionSystem 테스트 완료!")
duri_brain/app/services/advanced_agi_integration_optimization_system.py:415:    print("🔧 AdvancedAGIIntegrationOptimizationSystem 테스트 시작...")
duri_brain/app/services/advanced_agi_integration_optimization_system.py:440:    print(f"✅ 시스템 최적화 생성 완료: {optimization.optimization_confidence:.2f}")
duri_brain/app/services/advanced_agi_integration_optimization_system.py:461:    print(f"✅ 성능 모니터 생성 완료: {monitor.monitoring_effectiveness:.2f}")
duri_brain/app/services/advanced_agi_integration_optimization_system.py:481:    print(f"✅ 지속적 개선 생성 완료: {improvement.improvement_confidence:.2f}")
duri_brain/app/services/advanced_agi_integration_optimization_system.py:497:    print(f"✅ 통합 분석 완료: {analysis.analysis_confidence:.2f}")
duri_brain/app/services/advanced_agi_integration_optimization_system.py:501:    print(f"📊 통계: 최적화 {stats['total_optimizations']}개, 모니터 {stats['total_monitors']}개")
duri_brain/app/services/advanced_agi_integration_optimization_system.py:502:    print(f"🎯 평균 최적화 신뢰도: {stats['average_optimization_confidence']:.2f}")
duri_brain/app/services/advanced_agi_integration_optimization_system.py:503:    print(f"🔧 평균 모니터링 효과성: {stats['average_monitoring_effectiveness']:.2f}")
duri_brain/app/services/advanced_agi_integration_optimization_system.py:504:    print(f"📈 평균 개선 신뢰도: {stats['average_improvement_confidence']:.2f}")
duri_brain/app/services/advanced_agi_integration_optimization_system.py:505:    print(f"📊 평균 분석 신뢰도: {stats['average_analysis_confidence']:.2f}")
duri_brain/app/services/advanced_agi_integration_optimization_system.py:507:    print("✅ AdvancedAGIIntegrationOptimizationSystem 테스트 완료!")
duri_core/compute_importance_from_delta.py:31:print(f"[+] importance_score = {score}")
duri_core/evolution/test_evolution.py:25:    print("\n=== 기본 진화 사이클 테스트 ===")
duri_core/evolution/test_evolution.py:35:    print(f"진화 세션 시작: {session_id}")
duri_core/evolution/test_evolution.py:47:        print(f"\n--- {emotion} 감정으로 {context['action']} 액션 실행 ---")
duri_core/evolution/test_evolution.py:55:            print(f"  실행 결과: 성공={execution_result.success}, 점수={execution_result.result_score:.2f}")
duri_core/evolution/test_evolution.py:56:            print(f"  피드백: {execution_result.feedback_text}")
duri_core/evolution/test_evolution.py:57:            print(f"  학습 인사이트: {len(learning_insights)}개 생성")
duri_core/evolution/test_evolution.py:64:        print(f"\n세션 종료: 총 {session.total_actions}개 액션, 성공 {session.successful_actions}개")
duri_core/evolution/test_evolution.py:71:    print("\n=== 적응형 진화 테스트 ===")
duri_core/evolution/test_evolution.py:84:        print(f"\n--- 반복 실행 {i+1}/5 ---")
duri_core/evolution/test_evolution.py:92:            print(f"  실행 결과: 성공={execution_result.success}, 점수={execution_result.result_score:.2f}")
duri_core/evolution/test_evolution.py:93:            print(f"  진화 상태: {evolution_metadata.get('evolution_state', 'unknown')}")
duri_core/evolution/test_evolution.py:94:            print(f"  학습 인사이트: {len(learning_insights)}개")
duri_core/evolution/test_evolution.py:104:    print("\n=== 경험 학습 테스트 ===")
duri_core/evolution/test_evolution.py:130:        print(f"\n--- 시나리오 {i+1}: {emotion} -> {context['action']} ---")
duri_core/evolution/test_evolution.py:137:            print(f"  결과: 성공={execution_result.success}, 점수={execution_result.result_score:.2f}")
duri_core/evolution/test_evolution.py:138:            print(f"  인사이트: {len(learning_insights)}개")
duri_core/evolution/test_evolution.py:143:    print("\n--- 경험 데이터 분석 ---")
duri_core/evolution/test_evolution.py:147:    print(f"경험 패턴: {len(patterns)}개")
duri_core/evolution/test_evolution.py:149:        print(f"  {pattern.emotion} -> {pattern.action}: 성공률 {pattern.success_rate:.1%}, 신뢰도 {pattern.confidence_level:.1%}")
duri_core/evolution/test_evolution.py:151:    print(f"학습 인사이트: {len(insights)}개")
duri_core/evolution/test_evolution.py:153:        print(f"  {insight.insight_type}: {insight.description}")
duri_core/evolution/test_evolution.py:160:    print("\n=== 추천 시스템 테스트 ===")
duri_core/evolution/test_evolution.py:168:        print(f"\n--- {emotion} 감정에 대한 추천 ---")
duri_core/evolution/test_evolution.py:177:            print(f"  추천 액션: {action} (신뢰도: {confidence:.2f})")
duri_core/evolution/test_evolution.py:179:            print(f"  추천 없음 (충분한 경험 데이터 없음)")
duri_core/evolution/test_evolution.py:184:    print("\n=== 통계 및 인사이트 테스트 ===")
duri_core/evolution/test_evolution.py:190:    print("\n--- 종합 통계 ---")
duri_core/evolution/test_evolution.py:191:    print(f"진화 메트릭: {stats.get('evolution_metrics', {})}")
duri_core/evolution/test_evolution.py:192:    print(f"현재 세션: {stats.get('current_session', {})}")
duri_core/evolution/test_evolution.py:193:    print(f"진화 상태: {stats.get('evolution_state', 'unknown')}")
duri_core/evolution/test_evolution.py:197:    print(f"\n--- 진화 인사이트 ({len(insights)}개) ---")
duri_core/evolution/test_evolution.py:199:        print(f"  {insight['title']}: {insight['description']}")
duri_core/evolution/test_evolution.py:204:    print("\n=== 테스트 데이터 정리 ===")
duri_core/evolution/test_evolution.py:211:        print("테스트 데이터 내보내기 완료")
duri_core/evolution/test_evolution.py:216:        print("테스트 데이터 초기화 완료")
duri_core/evolution/test_evolution.py:221:    print("DuRi Evolution System Test")
duri_core/evolution/test_evolution.py:222:    print("=" * 50)
duri_core/evolution/test_evolution.py:240:        print("\n" + "=" * 50)
duri_core/evolution/test_evolution.py:241:        print("모든 테스트 완료!")
duri_core/evolution/test_evolution.py:250:        print(f"테스트 실패: {e}")
duri_brain/app/services/subtitle_learning_service.py:508:    print("📹 SubtitleBasedLearningSystem 테스트 시작...")
duri_brain/app/services/subtitle_learning_service.py:526:    print(f"✅ 영상 콘텐츠 추가: {video_content.title}")
duri_brain/app/services/subtitle_learning_service.py:538:    print(f"✅ 자막 세그먼트 추가: {len(subtitle_segments)}개")
duri_brain/app/services/subtitle_learning_service.py:542:    print(f"✅ 시각적 지식 추출 완료: {len(extracted_knowledge.key_concepts)}개 키 컨셉")
duri_brain/app/services/subtitle_learning_service.py:543:    print(f"   시각적 인사이트: {len(extracted_knowledge.visual_insights)}개")
duri_brain/app/services/subtitle_learning_service.py:544:    print(f"   가족 관련 장면: {len(extracted_knowledge.family_relevant_scenes)}개")
duri_brain/app/services/subtitle_learning_service.py:545:    print(f"   학습 카테고리: {extracted_knowledge.learning_category.value}")
duri_brain/app/services/subtitle_learning_service.py:546:    print(f"   난이도: {extracted_knowledge.difficulty_level}")
duri_brain/app/services/subtitle_learning_service.py:547:    print(f"   신뢰도 점수: {extracted_knowledge.confidence_score:.2f}")
duri_brain/app/services/subtitle_learning_service.py:559:    print(f"✅ 시각적 학습 진도 업데이트: {visual_progress.completion_percentage}% 완료")
duri_brain/app/services/subtitle_learning_service.py:564:    print(f"✅ 시각적 학습 추천 {len(recommendations)}개 생성")
duri_brain/app/services/subtitle_learning_service.py:568:    print(f"✅ 시각적 학습 통계 생성: {statistics['total_videos']}개 영상, {statistics['total_visual_knowledge']}개 지식")
duri_brain/app/services/subtitle_learning_service.py:572:    print(f"✅ 시각적 학습 데이터 내보내기: {len(export_data['video_contents'])}개 영상")
duri_brain/app/services/subtitle_learning_service.py:574:    print("🎉 SubtitleBasedLearningSystem 테스트 완료!")
duri_brain/app/services/enhanced_ethical_system.py:773:    print("⚖️ EnhancedEthicalSystem 테스트 시작...")
duri_brain/app/services/enhanced_ethical_system.py:789:    print(f"✅ 윤리적 분석: {ethical_analysis.judgment_level.value} 판단")
duri_brain/app/services/enhanced_ethical_system.py:790:    print(f"   관련 원칙: {[p.value for p in ethical_analysis.ethical_principles]}")
duri_brain/app/services/enhanced_ethical_system.py:791:    print(f"   윤리적 추론: {ethical_analysis.reasoning}")
duri_brain/app/services/enhanced_ethical_system.py:792:    print(f"   가족 영향: {ethical_analysis.family_impact}")
duri_brain/app/services/enhanced_ethical_system.py:793:    print(f"   신뢰도: {ethical_analysis.confidence_score:.2f}")
duri_brain/app/services/enhanced_ethical_system.py:797:    print(f"✅ 안전성 평가: {safety_assessment.risk_level.value} 위험")
duri_brain/app/services/enhanced_ethical_system.py:798:    print(f"   식별된 위험: {safety_assessment.identified_risks}")
duri_brain/app/services/enhanced_ethical_system.py:799:    print(f"   완화 전략: {safety_assessment.mitigation_strategies}")
duri_brain/app/services/enhanced_ethical_system.py:800:    print(f"   가족 안전 영향: {safety_assessment.family_safety_impact}")
duri_brain/app/services/enhanced_ethical_system.py:801:    print(f"   안전 점수: {safety_assessment.overall_safety_score:.2f}")
duri_brain/app/services/enhanced_ethical_system.py:805:    print(f"✅ 가족 조화 평가: {harmony_assessment.harmony_level.value} 조화")
duri_brain/app/services/enhanced_ethical_system.py:806:    print(f"   긍정적 영향: {harmony_assessment.positive_impacts}")
duri_brain/app/services/enhanced_ethical_system.py:807:    print(f"   잠재적 우려: {harmony_assessment.potential_concerns}")
duri_brain/app/services/enhanced_ethical_system.py:808:    print(f"   조화 향상 제안: {harmony_assessment.harmony_enhancement_suggestions}")
duri_brain/app/services/enhanced_ethical_system.py:809:    print(f"   가족 만족도: {harmony_assessment.family_satisfaction_score:.2f}")
duri_brain/app/services/enhanced_ethical_system.py:813:    print(f"✅ 윤리 통계: {statistics['total_analyses']}개 분석, {statistics['total_safety_assessments']}개 안전성 평가")
duri_brain/app/services/enhanced_ethical_system.py:814:    print(f"   윤리적 판단별: {statistics['judgment_stats']}")
duri_brain/app/services/enhanced_ethical_system.py:815:    print(f"   안전 위험별: {statistics['risk_stats']}")
duri_brain/app/services/enhanced_ethical_system.py:816:    print(f"   가족 조화별: {statistics['harmony_stats']}")
duri_brain/app/services/enhanced_ethical_system.py:817:    print(f"   평균 윤리 신뢰도: {statistics['average_ethical_confidence']:.2f}")
duri_brain/app/services/enhanced_ethical_system.py:818:    print(f"   평균 안전 점수: {statistics['average_safety_score']:.2f}")
duri_brain/app/services/enhanced_ethical_system.py:819:    print(f"   평균 조화 점수: {statistics['average_harmony_score']:.2f}")
duri_brain/app/services/enhanced_ethical_system.py:823:    print(f"✅ 윤리 데이터 내보내기: {len(export_data['ethical_analyses'])}개 분석, {len(export_data['safety_assessments'])}개 안전성 평가")
duri_brain/app/services/enhanced_ethical_system.py:825:    print("🎉 EnhancedEthicalSystem 테스트 완료!")
duri_core/common/emotion_handlers.py:65:            print(f"[!] 전송 실패: {e} → 큐에 저장")
duri_core/refactor_emotion_directories.py:24:        print(f"[❌] 중요도 계산 실패: {delta_path}, 이유: {e}")
duri_core/refactor_emotion_directories.py:37:                print(f"[📭] delta.json 없음: {delta_path}")
duri_core/refactor_emotion_directories.py:40:            print(f"[ℹ️] 중요도: {importance:.4f} | 경로: {subpath}")
duri_core/refactor_emotion_directories.py:44:                print(f"[🗑️] 삭제됨 (중요도 낮음): {subpath}")
duri_core/refactor_emotion_directories.py:47:                print(f"[📦] 압축 이동: {subpath}")
duri_core/refactor_emotion_directories.py:49:        print(f"[⚠️] 디렉토리 처리 오류: {subpath}, 이유: {e}")
duri_core/examples/brain_example.py:21:    print("DuRi Brain 시스템 예제")
duri_core/examples/brain_example.py:22:    print("=" * 50)
duri_core/examples/brain_example.py:25:    print("\n1. Brain 시스템 초기화...")
duri_core/examples/brain_example.py:34:    print("✓ Brain 시스템 초기화 완료")
duri_core/examples/brain_example.py:37:    print("\n2. 세션 시작...")
duri_core/examples/brain_example.py:47:        print("✗ 세션 시작 실패")
duri_core/examples/brain_example.py:50:    print(f"✓ 세션 시작 완료: {session_id}")
duri_core/examples/brain_example.py:53:    print("\n3. 감정 처리 시연...")
duri_core/examples/brain_example.py:65:        print(f"\n  처리 중: {emotion} (강도: {intensity:.1f}) - {description}")
duri_core/examples/brain_example.py:75:            print(f"    ✓ 감정 입력: {emotion_input.emotion} (강도: {emotion_input.intensity:.2f})")
duri_core/examples/brain_example.py:76:            print(f"    ✓ 의사결정: {decision['action']} (신뢰도: {decision['confidence']:.2f})")
duri_core/examples/brain_example.py:77:            print(f"    ✓ 피드백: {feedback.feedback_type.value} (점수: {feedback.feedback_score:.2f})")
duri_core/examples/brain_example.py:78:            print(f"    ✓ 루프 결과: 성공률 {loop_result.success_rate:.2f}, 지속시간 {loop_result.loop_duration:.2f}초")
duri_core/examples/brain_example.py:81:            print(f"    ✗ 처리 실패: {e}")
duri_core/examples/brain_example.py:84:    print("\n4. 외부 피드백 수집 시연...")
duri_core/examples/brain_example.py:99:        print(f"    ✓ 외부 피드백 수집: {external_feedback.feedback_type.value} (점수: {external_feedback.feedback_score:.2f})")
duri_core/examples/brain_example.py:102:    print("\n5. 세션 통계 조회...")
duri_core/examples/brain_example.py:105:    print(f"    세션 ID: {session_stats['session_id']}")
duri_core/examples/brain_example.py:106:    print(f"    총 루프 수: {session_stats['total_loops']}")
duri_core/examples/brain_example.py:107:    print(f"    평균 성공률: {session_stats['avg_success_rate']:.2f}")
duri_core/examples/brain_example.py:108:    print(f"    감정 분포: {session_stats['emotion_distribution']}")
duri_core/examples/brain_example.py:109:    print(f"    액션 분포: {session_stats['action_distribution']}")
duri_core/examples/brain_example.py:112:    print("\n6. 학습 데이터 조회...")
duri_core/examples/brain_example.py:115:    print(f"    총 학습 데이터: {len(learning_data)}개")
duri_core/examples/brain_example.py:117:        print(f"    {i+1}. {data['emotion']} -> {data['action']} (성공률: {data['success_rate']:.2f})")
duri_core/examples/brain_example.py:120:    print("\n7. 성능 인사이트 조회...")
duri_core/examples/brain_example.py:125:        print(f"    전체 루프 수: {overall.get('total_loops', 0)}")
duri_core/examples/brain_example.py:126:        print(f"    평균 성공률: {overall.get('avg_success_rate', 0):.2f}")
duri_core/examples/brain_example.py:127:        print(f"    평균 지속시간: {overall.get('avg_duration', 0):.2f}초")
duri_core/examples/brain_example.py:130:        print(f"    감정별 성능:")
duri_core/examples/brain_example.py:132:            print(f"      {emotion}: 성공률 {perf.get('avg_success_rate', 0):.2f}")
duri_core/examples/brain_example.py:135:    print("\n8. 시스템 개요 조회...")
duri_core/examples/brain_example.py:138:    print(f"    총 처리된 루프: {overview['total_loops_processed']}")
duri_core/examples/brain_example.py:139:    print(f"    활성 세션 수: {len(overview['active_sessions'])}")
duri_core/examples/brain_example.py:142:    print(f"    학습 데이터 요약:")
duri_core/examples/brain_example.py:143:    print(f"      총 레코드: {learning_summary.get('total_records', 0)}")
duri_core/examples/brain_example.py:144:    print(f"      평균 성공률: {learning_summary.get('avg_success_rate', 0):.2f}")
duri_core/examples/brain_example.py:145:    print(f"      감정 종류: {learning_summary.get('emotion_count', 0)}")
duri_core/examples/brain_example.py:146:    print(f"      액션 종류: {learning_summary.get('action_count', 0)}")
duri_core/examples/brain_example.py:149:    print("\n9. 학습 데이터 내보내기...")
duri_core/examples/brain_example.py:154:        print(f"    ✓ 학습 데이터 내보내기 완료: {output_path}")
duri_core/examples/brain_example.py:156:        print("    ✗ 학습 데이터 내보내기 실패")
duri_core/examples/brain_example.py:159:    print("\n10. 세션 종료...")
duri_core/examples/brain_example.py:162:        print(f"    ✓ 세션 종료 완료: {session_id}")
duri_core/examples/brain_example.py:164:        print("    ✗ 세션 종료 실패")
duri_core/examples/brain_example.py:167:    print("\n11. 시스템 백업...")
duri_core/examples/brain_example.py:171:        print(f"    ✓ 시스템 백업 완료: {backup_dir}")
duri_core/examples/brain_example.py:173:        print("    ✗ 시스템 백업 실패")
duri_core/examples/brain_example.py:175:    print("\n" + "=" * 50)
duri_core/examples/brain_example.py:176:    print("DuRi Brain 시스템 예제 완료!")
duri_core/examples/brain_example.py:177:    print("\n생성된 파일들:")
duri_core/examples/brain_example.py:178:    print(f"  - 데이터 디렉토리: {config.data_dir}")
duri_core/examples/brain_example.py:179:    print(f"  - 학습 데이터: {output_path}")
duri_core/examples/brain_example.py:180:    print(f"  - 백업 디렉토리: {backup_dir}")
duri_core/app/api.py:43:    print("통합 진화 시스템을 import할 수 없습니다. 기본 모드로 실행됩니다.")
duri_core/app/api.py:632:            print(f"진화 시스템 실행 오류: {e}")
duri_core/app/api.py:678:        print(f"진화 시스템 최적화 오류: {e}")
duri_core/brain/README.md:147:print(f"평균 성공률: {insights['overall']['avg_success_rate']:.2f}")
duri_core/visualize/emotion_summary.py:32:        print("사용법: python emotion_summary.py <stats_path> <evolution_path>")
duri_core/visualize/emotion_summary.py:39:    print(json.dumps(summary, indent=2, ensure_ascii=False)) 
DuRiCore/operational_deployment_config.py:282:    print("🚀 운영 배포 설정")
DuRiCore/operational_deployment_config.py:283:    print("="*50)
DuRiCore/operational_deployment_config.py:286:    print(f"🔒 롤백 포인트: {len(config.rollback_points)}개")
DuRiCore/operational_deployment_config.py:288:        print(f"  - {version}: {point.description}")
DuRiCore/operational_deployment_config.py:291:    print(f"\n📊 캐너리 배포 단계: {len(config.canary_configs)}개")
DuRiCore/operational_deployment_config.py:293:        print(f"  - {config_item.phase.value}: {config_item.traffic_percentage}% 트래픽, {config_item.duration_minutes}분")
DuRiCore/operational_deployment_config.py:297:    print(f"\n💾 설정 내보내기 완료: v{config_data['version']}")
DuRiCore/operational_deployment_config.py:300:    print("\n🧪 롤백 시뮬레이션:")
DuRiCore/operational_deployment_config.py:313:        print(f"  ❌ 롤백 필요: {reason.value} - {message}")
DuRiCore/operational_deployment_config.py:315:        print(f"  ✅ 롤백 불필요: {message}")
DuRiCore/emotional_self_awareness_system.py:617:    print("\n=== 감정적 자기 인식 시스템 테스트 결과 ===")
DuRiCore/emotional_self_awareness_system.py:618:    print(f"자기 인식 수준: {awareness_system.awareness_state.awareness_metrics.overall_self_awareness:.3f}")
DuRiCore/emotional_self_awareness_system.py:619:    print(f"감정적 성숙도: {maturity['score']:.3f} ({maturity['maturity_level']})")
DuRiCore/emotional_self_awareness_system.py:620:    print(f"발견된 패턴: {len(patterns['patterns'])}개")
DuRiCore/emotional_self_awareness_system.py:621:    print(f"인사이트: {len(patterns['insights'])}개")
DuRiCore/emotional_self_awareness_system.py:622:    print(f"권장사항: {len(report['recommendations'])}개")
DuRiCore/emotional_self_awareness_system.py:624:    print("✅ 감정적 자기 인식 시스템 테스트 완료!")
DuRiCore/test_safety_controller.py:586:    print("🧪 SafetyController 테스트 시작")
DuRiCore/test_safety_controller.py:587:    print("=" * 60)
DuRiCore/test_safety_controller.py:622:            print(f"🔍 {method_name} 실행 중...")
DuRiCore/test_safety_controller.py:627:            print(f"✅ {method_name} 통과")
DuRiCore/test_safety_controller.py:630:            print(f"❌ {method_name} 실패: {e}")
DuRiCore/test_safety_controller.py:636:    print("=" * 60)
DuRiCore/test_safety_controller.py:637:    print(f"📊 테스트 결과: {passed}개 통과, {failed}개 실패")
DuRiCore/test_safety_controller.py:640:        print("🎉 모든 테스트 통과! Phase 1 완성!")
DuRiCore/test_safety_controller.py:642:        print("⚠️ 일부 테스트 실패. 수정이 필요합니다.")
DuRiCore/cognitive_meta_learning_system.py:683:    print("\n=== 인지적 메타 학습 시스템 테스트 결과 ===")
DuRiCore/cognitive_meta_learning_system.py:684:    print(f"메타 학습 능력: {capability['score']:.3f} ({capability['capability_level']})")
DuRiCore/cognitive_meta_learning_system.py:685:    print(f"학습 패턴: {len(meta_learning_system.meta_learning_state.learning_patterns)}개")
DuRiCore/cognitive_meta_learning_system.py:686:    print(f"학습 전략: {len(meta_learning_system.meta_learning_state.learning_strategies)}개")
DuRiCore/cognitive_meta_learning_system.py:687:    print(f"메타 학습 과정: {len(meta_learning_system.meta_learning_state.meta_learning_processes)}개")
DuRiCore/cognitive_meta_learning_system.py:689:    print("✅ 인지적 메타 학습 시스템 테스트 완료!")
DuRiCore/demo_integrated_safety_system.py:96:            print(f"\n🔧 시스템 상태: {self.integrated_system.integration_status.value}")
DuRiCore/demo_integrated_safety_system.py:97:            print(f"📊 통합 점수: {self.integrated_system.metrics.integration_score:.2%}")
DuRiCore/demo_integrated_safety_system.py:102:                print(f"🛑 E-stop 정책: {estop_conditions.get('current_policy', 'unknown')}")
DuRiCore/demo_integrated_safety_system.py:330:                print(f"  📊 검사 {i+1}: {'✅' if checkpoint.overall_status else '❌'}")
DuRiCore/demo_integrated_safety_system.py:331:                print(f"     안전성: {'✅' if checkpoint.safety_framework_check else '❌'}")
DuRiCore/demo_integrated_safety_system.py:332:                print(f"     용량: {'✅' if checkpoint.capacity_governance_check else '❌'}")
DuRiCore/demo_integrated_safety_system.py:333:                print(f"     동등성: {'✅' if checkpoint.equivalence_validation_check else '❌'}")
DuRiCore/demo_integrated_safety_system.py:862:        print("\n" + "="*60)
DuRiCore/demo_integrated_safety_system.py:863:        print("🎯 DuRi 통합 안전성 시스템 데모 결과")
DuRiCore/demo_integrated_safety_system.py:864:        print("="*60)
DuRiCore/demo_integrated_safety_system.py:866:        print(f"\n📊 전체 요약:")
DuRiCore/demo_integrated_safety_system.py:867:        print(f"   총 시나리오: {self.demo_results['total_scenarios']}")
DuRiCore/demo_integrated_safety_system.py:868:        print(f"   성공: {self.demo_results['successful_scenarios']}")
DuRiCore/demo_integrated_safety_system.py:869:        print(f"   실패: {self.demo_results['failed_scenarios']}")
DuRiCore/demo_integrated_safety_system.py:870:        print(f"   소요 시간: {self.demo_results['duration_seconds']:.2f}초")
DuRiCore/demo_integrated_safety_system.py:872:        print(f"\n📋 시나리오별 결과:")
DuRiCore/demo_integrated_safety_system.py:875:            print(f"   {i}. {status_icon} {scenario['name']}")
DuRiCore/demo_integrated_safety_system.py:876:            print(f"      소요 시간: {scenario['duration_seconds']:.2f}초")
DuRiCore/demo_integrated_safety_system.py:878:                print(f"      오류: {scenario['details']['error']}")
DuRiCore/demo_integrated_safety_system.py:880:        print(f"\n🏆 성공률: {(self.demo_results['successful_scenarios'] / self.demo_results['total_scenarios'] * 100):.1f}%")
DuRiCore/demo_integrated_safety_system.py:897:    print("🚀 DuRi 통합 안전성 시스템 데모를 시작합니다...")
DuRiCore/demo_integrated_safety_system.py:898:    print("이 데모는 다음 기능들을 시연합니다:")
DuRiCore/demo_integrated_safety_system.py:899:    print("  • 안전성 프레임워크")
DuRiCore/demo_integrated_safety_system.py:900:    print("  • 용량 거버넌스 시스템")
DuRiCore/demo_integrated_safety_system.py:901:    print("  • 동등성 검증 시스템")
DuRiCore/demo_integrated_safety_system.py:902:    print("  • 통합 안전성 관리")
DuRiCore/demo_integrated_safety_system.py:903:    print()
DuRiCore/demo_integrated_safety_system.py:910:        print("\n🎉 데모가 성공적으로 완료되었습니다!")
DuRiCore/demo_integrated_safety_system.py:912:        print("\n❌ 데모 실행 중 문제가 발생했습니다.")
DuRiCore/core/test_runner.py:61:        print(f"🚀 Starting scenario: {name}")
DuRiCore/core/test_runner.py:62:        print(f"   Requests: {n_requests}, Max Concurrent: {max_concurrent}")
DuRiCore/core/test_runner.py:81:            print(f"❌ Error in scenario {name}: {e}")
DuRiCore/core/test_runner.py:93:        print(f"✅ Scenario {name} completed:")
DuRiCore/core/test_runner.py:94:        print(f"   Duration: {duration:.2f}s")
DuRiCore/core/test_runner.py:95:        print(f"   Success Rate: {snapshot.success_rate:.2%}")
DuRiCore/core/test_runner.py:96:        print(f"   P95 Response Time: {snapshot.p95_response_time:.2f}ms")
DuRiCore/core/test_runner.py:97:        print(f"   Requests/sec: {snapshot.requests_per_second:.1f}")
DuRiCore/core/test_runner.py:207:        print(f"⚠️  Subprocess mode not yet implemented, using event loop isolation")
DuRiCore/demo_phase4b.py:22:    print("🚀 Phase 4B 데모 시작")
DuRiCore/demo_phase4b.py:23:    print("=" * 60)
DuRiCore/demo_phase4b.py:26:    print("\n🔍 에러 모델 데모")
DuRiCore/demo_phase4b.py:27:    print("=" * 50)
DuRiCore/demo_phase4b.py:40:            print(f"✅ {desc}: 성공 (valid={result.valid})")
DuRiCore/demo_phase4b.py:43:            print(f"❌ {desc}: {error_type} - {e}")
DuRiCore/demo_phase4b.py:46:    print("\n🔄 리트라이 정책 데모")
DuRiCore/demo_phase4b.py:47:    print("=" * 50)
DuRiCore/demo_phase4b.py:51:    print(f"리트라이 설정: 최대 {cfg.retry.transient_max_attempts}회, 백오프 {cfg.retry.backoff_ms}ms, 지터 {cfg.retry.jitter_ms}ms")
DuRiCore/demo_phase4b.py:62:    print(f"\n🚀 시나리오 실행: {TOTAL_REQ}개 요청, 동시성 {CONCURRENCY}")
DuRiCore/demo_phase4b.py:82:    print(f"\n📊 결과 요약:")
DuRiCore/demo_phase4b.py:83:    print(f"   총 요청: {summary.total}")
DuRiCore/demo_phase4b.py:84:    print(f"   성공: {summary.successes}")
DuRiCore/demo_phase4b.py:85:    print(f"   실패: {summary.failures}")
DuRiCore/demo_phase4b.py:86:    print(f"   전체 성공률: {overall_success:.3f}")
DuRiCore/demo_phase4b.py:87:    print(f"   가용성 성공률(Validation 제외): {availability_success:.3f}")
DuRiCore/demo_phase4b.py:88:    print(f"   p95 지연: {p95:.2f}ms")
DuRiCore/demo_phase4b.py:89:    print(f"   처리량: {throughput:.2f} req/s")
DuRiCore/demo_phase4b.py:90:    print(f"   에러 분류:")
DuRiCore/demo_phase4b.py:92:        print(f"     {k}: {v}")
DuRiCore/demo_phase4b.py:95:    print("\n✅ 임계값 검증:")
DuRiCore/demo_phase4b.py:101:    print(f"   전체 성공률 {'✅' if overall_ok else '❌'} {overall_success:.3f} {'>=' if overall_ok else '<'} {cfg.stress.success_rate_min}")
DuRiCore/demo_phase4b.py:102:    print(f"   가용성 성공률 {'✅' if availability_ok else '❌'} {availability_success:.3f} {'>=' if availability_ok else '<'} {cfg.stress.availability_min}")
DuRiCore/demo_phase4b.py:103:    print(f"   p95 지연 {'✅' if p95_ok else '❌'} {p95:.2f}ms {'<=' if p95_ok else '>'} {p95_budget}ms")
DuRiCore/demo_phase4b.py:107:        print(f"\n🔄 리트라이 효과: TransientError {summary.error_breakdown['transient']}건 발생, 리트라이로 일부 복구")
DuRiCore/demo_phase4b.py:109:    print("\n🎉 Phase 4B 데모 완료!")
DuRiCore/demo_phase4b.py:110:    print("=" * 60)
DuRiCore/final_human_ai_system.py:510:    print(f"통합 결과: {integration_result.success}")
DuRiCore/final_human_ai_system.py:511:    print(f"통합된 시스템: {len(integration_result.systems_integrated)}개")
DuRiCore/final_human_ai_system.py:512:    print(f"통합 시간: {integration_result.integration_time:.2f}초")
DuRiCore/final_human_ai_system.py:513:    print(f"전체 성능: {integration_result.overall_performance:.3f}")
DuRiCore/final_human_ai_system.py:514:    print(f"인간형 점수: {integration_result.human_like_score:.3f}")
DuRiCore/final_human_ai_system.py:525:    print(f"\n인간형 사고 결과:")
DuRiCore/final_human_ai_system.py:526:    print(f"통합적 판단: {thinking_result['integrated_judgment']['integrated_decision']}")
DuRiCore/final_human_ai_system.py:527:    print(f"신뢰도: {thinking_result['confidence']:.3f}")
DuRiCore/final_human_ai_system.py:531:    print(f"\n인간형 AI 상태:")
DuRiCore/final_human_ai_system.py:532:    print(f"통합 수준: {status['integration_level']}")
DuRiCore/final_human_ai_system.py:533:    print(f"인간형 점수: {status['human_like_score']:.3f}")
DuRiCore/integrated_safety_system.py:1298:        print("\n=== DuRi 통합 안전성 시스템 테스트 결과 ===")
DuRiCore/integrated_safety_system.py:1299:        print(f"통합 상태: {integration_report['integration_status']}")
DuRiCore/integrated_safety_system.py:1300:        print(f"통합 점수: {integration_report['integration_score']:.2%}")
DuRiCore/integrated_safety_system.py:1301:        print(f"안전성 점수: {integration_report['safety_framework']['framework_status']['safety_score']:.2%}")
DuRiCore/integrated_safety_system.py:1302:        print(f"동등성 점수: {integration_report['equivalence_validator']['overall_equivalence_score']:.2%}")
DuRiCore/integrated_safety_system.py:1303:        print(f"작업량 수준: {integration_report['capacity_governance']['workload_level']}")
DuRiCore/social_intelligence_system.py:1212:    print("🧪 사회적 지능 시스템 테스트 시작")
DuRiCore/social_intelligence_system.py:1252:        print(f"\n📝 테스트 {i}: {test_interaction['interaction_id']}")
DuRiCore/social_intelligence_system.py:1260:            print(f"✅ 성공 - 사회적 지능 점수: {result.context_understanding:.2f}")
DuRiCore/social_intelligence_system.py:1261:            print(f"📊 공감 점수: {result.empathy_score:.2f}")
DuRiCore/social_intelligence_system.py:1262:            print(f"🤝 신뢰 구축: {result.trust_building:.2f}")
DuRiCore/social_intelligence_system.py:1263:            print(f"💬 의사소통 품질: {result.communication_quality:.2f}")
DuRiCore/social_intelligence_system.py:1264:            print(f"💡 인사이트: {len(result.insights)}개")
DuRiCore/social_intelligence_system.py:1266:            print(f"❌ 실패: {result.error_message}")
DuRiCore/social_intelligence_system.py:1270:    print(f"\n📊 성능 요약:")
DuRiCore/social_intelligence_system.py:1271:    print(f"   총 상호작용: {summary['performance_metrics']['total_interactions']}")
DuRiCore/social_intelligence_system.py:1272:    print(f"   성공률: {summary['performance_metrics']['successful_interactions']/summary['performance_metrics']['total_interactions']*100:.1f}%")
DuRiCore/social_intelligence_system.py:1273:    print(f"   평균 공감 점수: {summary['performance_metrics']['average_empathy_score']:.2f}")
DuRiCore/social_intelligence_system.py:1274:    print(f"   평균 신뢰 점수: {summary['performance_metrics']['average_trust_score']:.2f}")
DuRiCore/social_intelligence_system.py:1275:    print(f"   의사소통 품질: {summary['performance_metrics']['communication_quality']:.2f}")
DuRiCore/social_intelligence_system.py:1277:    print("\n🎯 사회적 지능 시스템 테스트 완료!")
DuRiCore/human_ai_characteristics.py:552:    print(f"자율성 시연 결과:")
DuRiCore/human_ai_characteristics.py:553:    print(f"자기 동기: {autonomy_demo['self_motivation']['motivation_source']}")
DuRiCore/human_ai_characteristics.py:554:    print(f"독립적 의사결정: {autonomy_demo['independent_decision']['decision_outcome']}")
DuRiCore/human_ai_characteristics.py:555:    print(f"자율성 점수: {autonomy_demo['autonomy_score']:.3f}")
DuRiCore/human_ai_characteristics.py:563:    print(f"\n감정적 지능 시연 결과:")
DuRiCore/human_ai_characteristics.py:564:    print(f"감정 인식: {emotional_demo['emotion_recognition']['recognized_emotions']}")
DuRiCore/human_ai_characteristics.py:565:    print(f"공감 반응: {emotional_demo['empathy_response']['empathy_response']}")
DuRiCore/human_ai_characteristics.py:566:    print(f"감정적 지능 점수: {emotional_demo['emotional_intelligence_score']:.3f}")
DuRiCore/human_ai_characteristics.py:570:    print(f"\n인간형 특성 상태:")
DuRiCore/human_ai_characteristics.py:571:    print(f"성격 - 개방성: {status['personality']['openness']:.3f}")
DuRiCore/human_ai_characteristics.py:572:    print(f"감정 상태 - 안정성: {status['emotional_state']['emotional_stability']:.3f}")
DuRiCore/human_ai_characteristics.py:573:    print(f"인지 상태 - 창의성: {status['cognitive_state']['creativity_level']:.3f}")
DuRiCore/self_reflection_evolution_system.py:768:    print("\n=== 자기 성찰 및 진화 시스템 테스트 결과 ===")
DuRiCore/self_reflection_evolution_system.py:769:    print(f"진화 능력: {capability['score']:.3f} ({capability['capability_level']})")
DuRiCore/self_reflection_evolution_system.py:770:    print(f"메타 인식: {metacognition.overall_metacognition_score:.3f}")
DuRiCore/self_reflection_evolution_system.py:771:    print(f"자기 성찰: {len(evolution_system.evolution_state.self_reflections)}개")
DuRiCore/self_reflection_evolution_system.py:772:    print(f"자기 수정: {len(evolution_system.evolution_state.self_modifications)}개")
DuRiCore/self_reflection_evolution_system.py:773:    print(f"진화 과정: {len(evolution_system.evolution_state.evolution_processes)}개")
DuRiCore/self_reflection_evolution_system.py:775:    print("✅ 자기 성찰 및 진화 시스템 테스트 완료!")
DuRiCore/demo_phase4a.py:20:    print("🚀 Phase 4A Demo: Basic Functionality")
DuRiCore/demo_phase4a.py:21:    print("=" * 50)
DuRiCore/demo_phase4a.py:25:    print(f"📦 Container bindings: {container.get_binding_info()}")
DuRiCore/demo_phase4a.py:38:    print("\n🏃 Running test scenarios...")
DuRiCore/demo_phase4a.py:42:    print("\n📊 Results Summary:")
DuRiCore/demo_phase4a.py:43:    print("-" * 30)
DuRiCore/demo_phase4a.py:46:        print(f"\n{scenario_name.upper()}:")
DuRiCore/demo_phase4a.py:48:            print(f"  {key}: {value}")
DuRiCore/demo_phase4a.py:55:    print("\n🎯 Phase 4A Demo: Deterministic Testing")
DuRiCore/demo_phase4a.py:56:    print("=" * 50)
DuRiCore/demo_phase4a.py:65:    print("🔒 Testing deterministic behavior...")
DuRiCore/demo_phase4a.py:73:    print(f"Validator 1 result: {result1.valid}, error: {result1.error}")
DuRiCore/demo_phase4a.py:74:    print(f"Validator 2 result: {result2.valid}, error: {result2.error}")
DuRiCore/demo_phase4a.py:75:    print(f"Results identical: {result1.valid == result2.valid and result1.error == result2.error}")
DuRiCore/demo_phase4a.py:80:    print("\n📈 Phase 4A Demo: Metrics Isolation")
DuRiCore/demo_phase4a.py:81:    print("=" * 50)
DuRiCore/demo_phase4a.py:87:    print("🔄 Running same scenario twice to test isolation...")
DuRiCore/demo_phase4a.py:92:    print(f"First run - Total requests: {result1.total_requests}")
DuRiCore/demo_phase4a.py:93:    print(f"Second run - Total requests: {result2.total_requests}")
DuRiCore/demo_phase4a.py:94:    print(f"Metrics properly isolated: {result1.total_requests == result2.total_requests}")
DuRiCore/demo_phase4a.py:99:    print("\n🏭 Phase 4A Demo: Container Factory")
DuRiCore/demo_phase4a.py:100:    print("=" * 50)
DuRiCore/demo_phase4a.py:114:        print(f"\n{name} Container:")
DuRiCore/demo_phase4a.py:117:            print(f"  {port} → {adapter}")
DuRiCore/demo_phase4a.py:122:    print("\n⚠️ Phase 4A Demo: Error Handling")
DuRiCore/demo_phase4a.py:123:    print("=" * 50)
DuRiCore/demo_phase4a.py:130:    print("🧪 Testing error handling with low success rate validator...")
DuRiCore/demo_phase4a.py:139:            print(f"Request {i + 1} failed with exception: {e}")
DuRiCore/demo_phase4a.py:146:    print(f"Success rate: {success_rate:.2%} ({success_count}/{total_count})")
DuRiCore/demo_phase4a.py:151:    print("🎉 Phase 4A Clean Architecture Demo")
DuRiCore/demo_phase4a.py:152:    print("=" * 60)
DuRiCore/demo_phase4a.py:153:    print("Testing the new ports, adapters, and dependency injection system")
DuRiCore/demo_phase4a.py:154:    print("=" * 60)
DuRiCore/demo_phase4a.py:164:        print("\n✅ All demos completed successfully!")
DuRiCore/demo_phase4a.py:165:        print("\n🎯 Phase 4A Key Benefits:")
DuRiCore/demo_phase4a.py:166:        print("  • Clean separation of concerns")
DuRiCore/demo_phase4a.py:167:        print("  • Easy testing and mocking")
DuRiCore/demo_phase4a.py:168:        print("  • Deterministic test results")
DuRiCore/demo_phase4a.py:169:        print("  • Metrics isolation")
DuRiCore/demo_phase4a.py:170:        print("  • Flexible dependency injection")
DuRiCore/demo_phase4a.py:171:        print("  • No more '언발에 오줌누기'! 🚫💦")
DuRiCore/demo_phase4a.py:174:        print(f"\n❌ Demo failed with error: {e}")
DuRiCore/monitoring_dashboard_config.py:261:    print("🎯 모니터링 대시보드 설정")
DuRiCore/monitoring_dashboard_config.py:262:    print("="*50)
DuRiCore/monitoring_dashboard_config.py:264:    print(f"📊 메트릭 카드: {len(config.metric_cards)}개")
DuRiCore/monitoring_dashboard_config.py:266:        print(f"  - {card.name} ({card.key})")
DuRiCore/monitoring_dashboard_config.py:268:    print(f"\n🚨 경보 규칙: {len(config.alert_rules)}개")
DuRiCore/monitoring_dashboard_config.py:270:        print(f"  - {rule.name} [{rule.severity.value.upper()}]")
DuRiCore/monitoring_dashboard_config.py:274:    print(f"\n💾 설정 내보내기 완료: v{config_data['version']}")
DuRiCore/duri_orchestrator.py:30:    print("⚠️  모듈 레지스트리 시스템을 찾을 수 없습니다. 기본 모드로 실행됩니다.")
DuRiCore/duri_orchestrator.py:38:    print("⚠️  시스템 어댑터를 찾을 수 없습니다. 기본 모드로 실행됩니다.")
DuRiCore/duri_orchestrator.py:46:    print("⚠️  ACT-R 병렬 처리 시스템을 찾을 수 없습니다. 기본 모드로 실행됩니다.")
DuRiCore/duri_orchestrator.py:54:    print("⚠️  LIDA 주의 시스템을 찾을 수 없습니다. 기본 모드로 실행됩니다.")
DuRiCore/duri_orchestrator.py:62:    print("⚠️  CoALA 모듈 인터페이스를 찾을 수 없습니다. 기본 모드로 실행됩니다.")
DuRiCore/duri_orchestrator.py:701:    print("🚀 DuRi Orchestrator 시작")
DuRiCore/duri_orchestrator.py:702:    print("="*50)
DuRiCore/duri_orchestrator.py:709:    print(f"📊 초기 상태: {json.dumps(initial_report, indent=2, ensure_ascii=False)}")
DuRiCore/duri_orchestrator.py:716:        print("\n🛑 사용자에 의해 중단됨")
DuRiCore/duri_orchestrator.py:720:        print(f"❌ 오류 발생: {e}")
DuRiCore/duri_orchestrator.py:726:        print(f"📊 최종 상태: {json.dumps(final_report, indent=2, ensure_ascii=False)}")
DuRiCore/duri_orchestrator.py:728:        print("\n✅ DuRi Orchestrator 종료")
DuRiCore/test_integration_validator.py:90:            print("✅ 초기화 테스트 통과")
DuRiCore/test_integration_validator.py:119:            print("✅ 규칙 관리 테스트 통과")
DuRiCore/test_integration_validator.py:143:            print("✅ 시작/정지 테스트 통과")
DuRiCore/test_integration_validator.py:164:            print("✅ 검증 실행 테스트 통과")
DuRiCore/test_integration_validator.py:193:            print("✅ 규칙 평가 테스트 통과")
DuRiCore/test_integration_validator.py:219:            print("✅ 검증 상태 조회 테스트 통과")
DuRiCore/test_integration_validator.py:241:            print("✅ 동시 검증 테스트 통과")
DuRiCore/test_integration_validator.py:262:            print("✅ 오류 처리 테스트 통과")
DuRiCore/test_integration_validator.py:285:            print("✅ 전역 함수 테스트 통과")
DuRiCore/test_integration_validator.py:287:            print(f"⚠️ 전역 함수 테스트 중 오류 (예상됨): {e}")
DuRiCore/test_integration_validator.py:315:            print("✅ SafetyController 통합 테스트 통과")
DuRiCore/test_integration_validator.py:396:    print("🧪 IntegrationValidator 테스트 시작")
DuRiCore/test_integration_validator.py:397:    print("=" * 60)
DuRiCore/test_integration_validator.py:421:            print(f"🔍 {method_name} 실행 중...")
DuRiCore/test_integration_validator.py:425:            print(f"❌ {method_name} 실패: {e}")
DuRiCore/test_integration_validator.py:429:    print("\n🔍 독립 테스트 실행 중...")
DuRiCore/test_integration_validator.py:434:        print("✅ ValidationResult 테스트 통과")
DuRiCore/test_integration_validator.py:437:        print(f"❌ ValidationResult 테스트 실패: {e}")
DuRiCore/test_integration_validator.py:444:        print("✅ ValidationRule 테스트 통과")
DuRiCore/test_integration_validator.py:447:        print(f"❌ ValidationRule 테스트 실패: {e}")
DuRiCore/test_integration_validator.py:450:    print("=" * 60)
DuRiCore/test_integration_validator.py:451:    print(f"📊 테스트 결과: {passed}개 통과, {failed}개 실패")
DuRiCore/test_integration_validator.py:454:        print("🎉 모든 테스트 통과! Phase 2 스켈레톤 완성!")
DuRiCore/test_integration_validator.py:456:        print("⚠️ 일부 테스트 실패. 수정이 필요합니다.")
DuRiCore/tests/contracts/test_validator_port.py:26:    print("✅ test_validator_contract_ok: PASSED")
DuRiCore/tests/contracts/test_validator_port.py:46:        print("✅ ValidationError raised correctly")
DuRiCore/tests/contracts/test_validator_port.py:52:        print("✅ TransientError raised correctly")
DuRiCore/tests/contracts/test_validator_port.py:58:        print("✅ SystemError raised correctly")
DuRiCore/tests/contracts/test_validator_port.py:60:    print("✅ test_validator_contract_errors: PASSED")
DuRiCore/tests/contracts/test_validator_port.py:64:    print("🚀 Running ValidatorPort Contract Tests...")
DuRiCore/tests/contracts/test_validator_port.py:67:    print("🎉 All contract tests passed!")
DuRiCore/tests/policy/test_thresholds_apply.py:11:    print("✅ test_thresholds_load_dev: PASSED")
DuRiCore/tests/policy/test_thresholds_apply.py:15:    print("🚀 Running Policy Tests...")
DuRiCore/tests/policy/test_thresholds_apply.py:17:    print("🎉 All policy tests passed!")
DuRiCore/tests/policy/test_policy_tuning.py:226:        print(f"✅ 샘플 데이터 생성 완료: {len(data)}개, 정상: {normal_count}, 이상: {anomaly_count}")
DuRiCore/tests/policy/test_policy_tuning.py:256:        print(f"✅ 성능 지표 계산 완료: accuracy={metrics['accuracy']:.3f}, f1={metrics['f1_score']:.3f}")
DuRiCore/tests/policy/test_policy_tuning.py:281:        print(f"✅ 임계값 평가 완료: {len(results)}개 임계값 테스트")
DuRiCore/tests/policy/test_policy_tuning.py:301:            print(f"📊 {metric}: 임계값={result['threshold']:.2f}, "
DuRiCore/tests/policy/test_policy_tuning.py:304:        print(f"✅ 최적 임계값 찾기 완료: {len(optimal_thresholds)}개 메트릭")
DuRiCore/tests/policy/test_policy_tuning.py:323:        print(f"✅ ROC 곡선 데이터 생성 완료: {len(fpr)}개 포인트")
DuRiCore/tests/policy/test_policy_tuning.py:342:        print(f"✅ PR 곡선 데이터 생성 완료: {len(recall)}개 포인트")
DuRiCore/tests/policy/test_policy_tuning.py:347:    print("🧪 정책 튜닝 테스트 시작")
DuRiCore/tests/policy/test_policy_tuning.py:348:    print("=" * 60)
DuRiCore/tests/policy/test_policy_tuning.py:368:            print(f"🔍 {method_name} 실행 중...")
DuRiCore/tests/policy/test_policy_tuning.py:370:            print(f"✅ {method_name} 통과")
DuRiCore/tests/policy/test_policy_tuning.py:373:            print(f"❌ {method_name} 실패: {e}")
DuRiCore/tests/policy/test_policy_tuning.py:376:    print("=" * 60)
DuRiCore/tests/policy/test_policy_tuning.py:377:    print(f"📊 테스트 결과: {passed}개 통과, {failed}개 실패")
DuRiCore/tests/policy/test_policy_tuning.py:380:        print("🎉 모든 정책 튜닝 테스트 통과!")
DuRiCore/tests/policy/test_policy_tuning.py:382:        print("⚠️ 일부 테스트 실패. 수정이 필요합니다.")
DuRiCore/tests/property/test_failrate_convergence.py:32:    print(f"✅ test_failrate_converges: PASSED (success_rate: {sr:.3f})")
DuRiCore/tests/property/test_failrate_convergence.py:36:    print("🚀 Running Property Tests...")
DuRiCore/tests/property/test_failrate_convergence.py:38:    print("🎉 All property tests passed!")
DuRiCore/tests/stress/test_validator_stress.py:242:        print(f"🚀 {n_requests}개 요청을 순차 실행 시작")
DuRiCore/tests/stress/test_validator_stress.py:255:                    print(f"📊 진행률: {progress:.1f}% ({i + 1}/{n_requests})")
DuRiCore/tests/stress/test_validator_stress.py:259:                print(f"❌ 요청 {i} 실행 중 오류: {e}")
DuRiCore/tests/stress/test_validator_stress.py:265:        print(f"📊 총 요청: {n_requests}개 완료")
DuRiCore/tests/stress/test_validator_stress.py:283:                print(f"🔥 {scenario_name} 시나리오 시작")
DuRiCore/tests/stress/test_validator_stress.py:302:                print(f"✅ {scenario_name} 완료: "
DuRiCore/tests/stress/test_validator_stress.py:308:                print(f"⏰ {scenario_name} 시나리오 타임아웃 (30초 초과)")
DuRiCore/tests/stress/test_validator_stress.py:324:                print(f"❌ {scenario_name} 시나리오 오류: {e}")
DuRiCore/tests/stress/test_validator_stress.py:369:        print(f"✅ 단일 요청 성능: {response_time*1000:.2f}ms")
DuRiCore/tests/stress/test_validator_stress.py:388:        print(f"✅ 동시 요청 테스트: {n_requests}개 요청, "
DuRiCore/tests/stress/test_validator_stress.py:404:        print(f"🔍 디버깅 - light_load: p95={result['p95_response_time']*1000:.2f}ms, 성공률={result['success_rate']:.1%}")
DuRiCore/tests/stress/test_validator_stress.py:410:        print(f"✅ 가벼운 부하 테스트: p95={result['p95_response_time']*1000:.2f}ms")
DuRiCore/tests/stress/test_validator_stress.py:424:        print(f"🔍 디버깅 - medium_load: p95={result['p95_response_time']*1000:.2f}ms, 성공률={result['success_rate']*100:.1f}%")
DuRiCore/tests/stress/test_validator_stress.py:425:        print(f"   총 요청: {result['total']}, 성공: {result['successes']}, 실패: {result['failures']}")
DuRiCore/tests/stress/test_validator_stress.py:431:        print(f"✅ 중간 부하 테스트: p95={result['p95_response_time']*1000:.2f}ms")
DuRiCore/tests/stress/test_validator_stress.py:448:        print(f"✅ 높은 부하 테스트: p95={result['p95_response_time']*1000:.2f}ms")
DuRiCore/tests/stress/test_validator_stress.py:465:        print(f"✅ 극한 부하 테스트: p95={result['p95_response_time']*1000:.2f}ms")
DuRiCore/tests/stress/test_validator_stress.py:504:                print(f"✅ {scenario_name}: "
DuRiCore/tests/stress/test_validator_stress.py:508:            print(f"✅ 모든 스트레스 시나리오 통과: {len(results)}개 시나리오")
DuRiCore/tests/stress/test_validator_stress.py:513:            print("⏰ test_all_stress_scenarios 타임아웃 (2분 초과)")
DuRiCore/tests/stress/test_validator_stress.py:517:            print(f"❌ test_all_stress_scenarios 오류: {e}")
DuRiCore/tests/stress/test_validator_stress.py:523:    print("🧪 Validator 스트레스 테스트 시작")
DuRiCore/tests/stress/test_validator_stress.py:524:    print("=" * 60)
DuRiCore/tests/stress/test_validator_stress.py:542:            print(f"🔍 {method_name} 실행 중...")
DuRiCore/tests/stress/test_validator_stress.py:554:            print(f"✅ {method_name} 통과")
DuRiCore/tests/stress/test_validator_stress.py:561:            print(f"⏰ {method_name} 타임아웃 (1분 초과)")
DuRiCore/tests/stress/test_validator_stress.py:565:            print(f"❌ {method_name} 실패: {type(e).__name__}: {e}")
DuRiCore/tests/stress/test_validator_stress.py:566:            print(f"   상세 오류: {traceback.format_exc()}")
DuRiCore/tests/stress/test_validator_stress.py:571:    print("🧪 Validator 스트레스 테스트 시작 (동기 방식)")
DuRiCore/tests/stress/test_validator_stress.py:572:    print("=" * 60)
DuRiCore/tests/stress/test_validator_stress.py:590:            print(f"🔍 {method_name} 실행 중...")
DuRiCore/tests/stress/test_validator_stress.py:606:                print(f"✅ {method_name} 통과")
DuRiCore/tests/stress/test_validator_stress.py:615:            print(f"⏰ {method_name} 타임아웃 (1분 초과)")
DuRiCore/tests/stress/test_validator_stress.py:619:            print(f"❌ {method_name} 실패: {type(e).__name__}: {e}")
DuRiCore/tests/stress/test_validator_stress.py:620:            print(f"   상세 오류: {traceback.format_exc()}")
DuRiCore/tests/stress/test_validator_stress.py:623:    print("=" * 60)
DuRiCore/tests/stress/test_validator_stress.py:624:    print(f"📊 테스트 결과: {passed}개 통과, {failed}개 실패")
DuRiCore/tests/stress/test_validator_stress.py:627:        print("🎉 모든 스트레스 테스트 통과!")
DuRiCore/tests/stress/test_validator_stress.py:629:        print("⚠️ 일부 테스트 실패. 수정이 필요합니다.")
DuRiCore/tests/stress/test_validator_stress.py:635:    print("🧪 Validator 스트레스 테스트 시작 (별도 프로세스 방식)")
DuRiCore/tests/stress/test_validator_stress.py:636:    print("=" * 60)
DuRiCore/tests/stress/test_validator_stress.py:654:            print(f"🔍 {method_name} 실행 중...")
DuRiCore/tests/stress/test_validator_stress.py:670:        print(f"✅ {method_name} 통과")
DuRiCore/tests/stress/test_validator_stress.py:673:        print(f"❌ {method_name} 실패: {{e}}")
DuRiCore/tests/stress/test_validator_stress.py:692:                print(f"✅ {method_name} 통과")
DuRiCore/tests/stress/test_validator_stress.py:695:                print(f"❌ {method_name} 실패")
DuRiCore/tests/stress/test_validator_stress.py:696:                print(f"   stdout: {result.stdout}")
DuRiCore/tests/stress/test_validator_stress.py:697:                print(f"   stderr: {result.stderr}")
DuRiCore/tests/stress/test_validator_stress.py:701:            print(f"⏰ {method_name} 타임아웃 (2분 초과)")
DuRiCore/tests/stress/test_validator_stress.py:704:            print(f"❌ {method_name} 실행 오류: {e}")
DuRiCore/tests/stress/test_validator_stress.py:707:    print("=" * 60)
DuRiCore/tests/stress/test_validator_stress.py:708:    print(f"📊 테스트 결과: {passed}개 통과, {failed}개 실패")
DuRiCore/tests/stress/test_validator_stress.py:711:        print("🎉 모든 스트레스 테스트 통과!")
DuRiCore/tests/stress/test_validator_stress.py:713:        print("⚠️ 일부 테스트 실패. 수정이 필요합니다.")
DuRiCore/tests/stress/test_validator_stress.py:720:        print("🚀 서브프로세스 방식으로 스트레스 테스트 실행 시작")
DuRiCore/tests/stress/test_validator_stress.py:723:        print("\n⚠️ 테스트가 중단되었습니다.")
DuRiCore/tests/stress/test_validator_stress.py:725:        print(f"\n❌ 예상치 못한 오류: {e}")
DuRiCore/multi_system_integration.py:575:    print("\n=== 다중 시스템 통합 메커니즘 테스트 결과 ===")
DuRiCore/multi_system_integration.py:576:    print(f"통합 점수: {integration_system.integration_state.integration_metrics.overall_integration_score:.3f}")
DuRiCore/multi_system_integration.py:577:    print(f"시스템 연결: {len(connections)}개")
DuRiCore/multi_system_integration.py:578:    print(f"통합 의사결정: {len(integration_system.integration_state.integrated_decisions)}개")
DuRiCore/multi_system_integration.py:579:    print(f"참여 시스템: {len(integration_system.systems)}개")
DuRiCore/multi_system_integration.py:581:    print("✅ 다중 시스템 통합 메커니즘 테스트 완료!")
DuRiCore/test_integrated_safety_system.py:627:        print("\n=== DuRi 통합 안전성 시스템 테스트 결과 ===")
DuRiCore/test_integrated_safety_system.py:628:        print(f"총 테스트 수: {test_results['total_tests']}")
DuRiCore/test_integrated_safety_system.py:629:        print(f"통과: {test_results['passed_tests']}")
DuRiCore/test_integrated_safety_system.py:630:        print(f"실패: {test_results['failed_tests']}")
DuRiCore/test_integrated_safety_system.py:631:        print(f"소요 시간: {test_results['duration_seconds']:.2f}초")
DuRiCore/test_integrated_safety_system.py:634:            print(f"오류: {len(test_results['errors'])}개")
DuRiCore/test_integrated_safety_system.py:636:                print(f"  - {error}")
DuRiCore/test_integrated_safety_system.py:648:        print(f"\n테스트 결과가 {results_file}에 저장되었습니다.")
DuRiCore/ci_regression_test.py:189:        print("\n" + "="*60)
DuRiCore/ci_regression_test.py:190:        print("🎯 CI 회귀 테스트 결과")
DuRiCore/ci_regression_test.py:191:        print("="*60)
DuRiCore/ci_regression_test.py:192:        print(f"📊 전체 성공: {'✅' if results['overall_success'] else '❌'}")
DuRiCore/ci_regression_test.py:193:        print(f"⏱️ 실행 시간: {results['execution_time']:.2f}s")
DuRiCore/ci_regression_test.py:194:        print(f"📋 시나리오: {results['scenarios']['passed']}/{results['scenarios']['total']} 통과")
DuRiCore/ci_regression_test.py:195:        print(f"📈 성공률: {results['scenarios']['success_rate']}")
DuRiCore/ci_regression_test.py:196:        print(f"🔒 CI 게이트: {'✅ 통과' if results['ci_gate']['time_guard_passed'] and results['ci_gate']['all_scenarios_passed'] else '❌ 차단'}")
DuRiCore/ci_regression_test.py:199:        print("\n🔍 스모크 테스트:")
DuRiCore/ci_regression_test.py:202:            print(f"  {status} {test}")
DuRiCore/ci_regression_test.py:209:            print(f"\n🎉 CI 게이트 통과! 결과 파일: {output_file}")
DuRiCore/ci_regression_test.py:212:            print(f"\n💥 CI 게이트 차단! 결과 파일: {output_file}")
DuRiCore/smoke_validation_flow.py:290:        print("=" * 80)
DuRiCore/smoke_validation_flow.py:310:                print(f"🔍 {test_name} 테스트 실행 중...")
DuRiCore/smoke_validation_flow.py:314:                        print(f"✅ {test_name} 테스트 통과")
DuRiCore/smoke_validation_flow.py:317:                        print(f"❌ {test_name} 테스트 실패")
DuRiCore/smoke_validation_flow.py:320:                    print(f"❌ {test_name} 테스트 오류: {e}")
DuRiCore/smoke_validation_flow.py:327:            print("=" * 80)
DuRiCore/smoke_validation_flow.py:328:            print(f"📊 스모크 테스트 결과: {passed}개 통과, {failed}개 실패")
DuRiCore/smoke_validation_flow.py:331:                print("🎉 모든 스모크 테스트 통과! Phase 1+2 완벽 통합!")
DuRiCore/smoke_validation_flow.py:332:                print("🚀 SafetyController + IntegrationValidator 연결 성공!")
DuRiCore/smoke_validation_flow.py:334:                print("⚠️ 일부 스모크 테스트 실패. 통합 검증이 필요합니다.")
DuRiCore/scripts/policy_select_thresholds.py:187:                print(f"⚠️ 설정 파일을 찾을 수 없음: {self.config_path}")
DuRiCore/scripts/policy_select_thresholds.py:190:            print(f"❌ 임계값 로드 실패: {e}")
DuRiCore/scripts/policy_select_thresholds.py:208:            print(f"📊 CSV 데이터 로드 완료: {len(metrics)}개 샘플")
DuRiCore/scripts/policy_select_thresholds.py:212:            print(f"❌ CSV 로드 실패: {e}")
DuRiCore/scripts/policy_select_thresholds.py:232:            print(f"📊 JSON 데이터 로드 완료: {len(metrics)}개 샘플")
DuRiCore/scripts/policy_select_thresholds.py:236:            print(f"❌ JSON 로드 실패: {e}")
DuRiCore/scripts/policy_select_thresholds.py:257:            print(f"🔍 {rule_name} 규칙 분석 중...")
DuRiCore/scripts/policy_select_thresholds.py:272:            print(f"✅ {rule_name}: 최적 임계값 {result.best_threshold:.3f} "
DuRiCore/scripts/policy_select_thresholds.py:378:            print(f"💾 추천 임계값 YAML 저장 완료: {output_path}")
DuRiCore/scripts/policy_select_thresholds.py:381:            print(f"❌ YAML 저장 실패: {e}")
DuRiCore/scripts/policy_select_thresholds.py:446:            print(f"📝 마크다운 리포트 생성 완료: {output_path}")
DuRiCore/scripts/policy_select_thresholds.py:449:            print(f"❌ 리포트 생성 실패: {e}")
DuRiCore/scripts/policy_select_thresholds.py:496:        print("🚀 Phase 3 - 정책 튜닝 시작")
DuRiCore/scripts/policy_select_thresholds.py:497:        print("=" * 50)
DuRiCore/scripts/policy_select_thresholds.py:513:        print("\n🔍 규칙별 임계값 분석 중...")
DuRiCore/scripts/policy_select_thresholds.py:517:        print("\n💡 임계값 추천 생성 중...")
DuRiCore/scripts/policy_select_thresholds.py:521:        print("\n💾 결과 저장 중...")
DuRiCore/scripts/policy_select_thresholds.py:525:        print("\n" + "=" * 50)
DuRiCore/scripts/policy_select_thresholds.py:526:        print("🎉 정책 튜닝 완료!")
DuRiCore/scripts/policy_select_thresholds.py:527:        print(f"📊 분석된 규칙: {len(results)}개")
DuRiCore/scripts/policy_select_thresholds.py:528:        print(f"💾 YAML 파일: {args.output_yaml}")
DuRiCore/scripts/policy_select_thresholds.py:529:        print(f"📝 리포트: {args.output_report}")
DuRiCore/scripts/policy_select_thresholds.py:538:        print(f"\n📈 성능 요약:")
DuRiCore/scripts/policy_select_thresholds.py:539:        print(f"  평균 F1 스코어: {avg_f1:.3f} {'✅' if avg_f1 >= 0.8 else '⚠️'}")
DuRiCore/scripts/policy_select_thresholds.py:540:        print(f"  평균 균형 정확도: {avg_balanced:.3f} {'✅' if avg_balanced >= 0.85 else '⚠️'}")
DuRiCore/scripts/policy_select_thresholds.py:543:            print("\n🎯 Phase 3 성능 기준 달성! 운영 적용 준비 완료!")
DuRiCore/scripts/policy_select_thresholds.py:545:            print("\n⚠️ 일부 성능 기준 미달성. 추가 튜닝이 필요할 수 있습니다.")
DuRiCore/scripts/policy_select_thresholds.py:548:        print(f"\n❌ 오류 발생: {e}")
duri_core/visualize/summary_reporter.py:269:        print("사용법: python summary_reporter.py <stats_path> <evolution_path>")
duri_core/visualize/summary_reporter.py:276:    print(json.dumps(summary, indent=2, ensure_ascii=False)) 
DuRiCore/tomorrow_morning_setup.sh:19:    print('✅ 통합 시스템 로드 성공')
DuRiCore/tomorrow_morning_setup.sh:22:    print('✅ 시스템 인스턴스 생성 성공')
DuRiCore/tomorrow_morning_setup.sh:26:    print(f'📊 통합 상태: {status}')
DuRiCore/tomorrow_morning_setup.sh:29:    print(f'❌ 오류 발생: {e}')
DuRiCore/tomorrow_morning_setup.sh:30:    print('🔧 문제 해결이 필요합니다.')
