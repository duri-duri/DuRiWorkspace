version: '3.8'

secrets:
  db_password:
    file: ./secrets/db_password

services:
  # PostgreSQL 데이터베이스
  duri-postgres:
    image: postgres:15
    container_name: duri-postgres-allinone
    environment:
      POSTGRES_DB: ${DB_NAME:?set in .env}
      POSTGRES_USER: ${POSTGRES_USER:?set in .env}
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets: [db_password]
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-duri}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 캐시
  duri-redis:
    image: redis:7-alpine
    container_name: duri-redis-allinone
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # DuRi All-in-One 통합 서비스
  duri-allinone:
    build:
      context: .
      dockerfile: docker/Dockerfile.allinone
    container_name: duri-allinone-container
    environment:
      - DURI_MODE=allinone
      - PYTHONPATH=/app:/app/duri_common
      - DATABASE_URL=${DATABASE_URL:?export at start script}
      - REDIS_URL=redis://duri-redis:6379
    ports:
      - "8080:8080"  # duri_core
      - "8081:8081"  # duri_brain
      - "8082:8082"  # duri_evolution
      - "8083:8083"  # duri_control
    depends_on:
      duri-postgres:
        condition: service_healthy
      duri-redis:
        condition: service_healthy
    volumes:
      - ./logs:/var/log/supervisor
      - ./backups:/app/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data: